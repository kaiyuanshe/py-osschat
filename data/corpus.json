[
    {
        "question": "反馈意见",
        "answer": "link-web:您的反馈和改进建议都可以写下来，幕后团队会认真每一条(https://wj.qq.com/s2/7477327/ec58/)"
    },
    {
        "question": "什么是copyright",
        "answer": "copyright，版权，亦称“著作权”，符号：©。指作者对其作品享有的权利。 \ncopyright从字面上的意思是“复制的权利”，这是因为，作者的权利中，最基本的是复制权。但作者的权利并不限于此，作者还会有署名权、修改权、改编权、翻译权、出版权、表演权、使用许可权等等其他权利，这些权利大多还是和复制相关，毕竟传播是需要复制的。 \n关于版权（著作权），以下几个基本概念最好能建立起来： \n1、版权是作者对计算机程序、文字、音乐、照片、美术、游戏、电影、建筑设计等作品所享有的权利。 \n2、版权是属于作者的，其中财产权是可以转让的，人身权（比如署名权）是不能转让的。（人身权后面还会介绍） \n3、计算机程序不仅受到版权相关法律的保护，还受软件许可证的保护。 \n4、版权只保护思想的表达形式，而不保护思想本身。 \n5、在作品在形成后，著作权是自动取得的。当然，你也可以登记，以获取一个证明文件，这样更有利于权利主张。 \n6、美术等作品原件所有权的转移，不视为作品著作权的转移，但美术作品原件的展览权由原件所有人享有。 \n7、作者死亡后，其著作权按照继承法的规定转移。作者死后50年后（按中国法律），作品进入公共领域，任何人都可以使用，不再受法律保护。"
    },
    {
        "question": "世界上第一部版权法",
        "answer": "1710年，英国发布生效《安妮女王法令》，这是是世界上第一部版权法。该法令规定：凡已经出版的图书，自法令生效之日起21年内作者有权重印该书；尚未出版的图书，作者享有28年的出版权。它废除了王室给书商颁发印刷许可证的封建垄断制度，承认作者有权支配和处理自己的作品。"
    },
    {
        "question": "中国的著作权法",
        "answer": "《中华人民共和国著作权法》是中国全国人民代表大会常务委员会批准的中国国家法律文件。 现行中华人民共和国著作权法于2010年2月26日修正。 \n颁布时间：1990年9月7日 \n发布单位：全国人民代表大会 \n修正时间：2010年2月26日（第二次） \n\"修订情况：1990年9月7日第七届全国人民代表大会常务委员会第十五次会议通过\n根据2001年10月27日第九届全国人民代表大会常务委员会第二十四次会议《关于修改〈中华人民共和国著作权法〉的决定》第一次修正\n根据2010年2月26日第十一届全国人民代表大会常务委员会第十三次会议《关于修改〈中华人民共和国著作权法〉的决定》第二次修正 [1] \n2012年3月31日，根据国务院立法工作计划，国家版权局草拟了《中华人民共和国著作权法》（修改草案）公开征求社会各界意见，截至2012年7月31日。 [2]\" \n详细信息：中华人民共和国著作权法 (中华人民共和国主席令（第二十六号）) https://www.chinacourt.org/law/detail/2010/02/id/140822.shtml"
    },
    {
        "question": "中国古代版权",
        "answer": "在印刷术没有产生的年代，复制的方法就是手抄，这还好，毕竟手抄也复制不了多少本。但在可以批量复制的年代，就要界定一下谁可以复制谁不能复制了，毕竟这会影响到人们都很关心的经济利益。 \n中国南宋绍熙年间（1190～1194），四川眉州人程舍人，刻印了王称所著的《东都事略》，目录页上有“眉山程舍人宅刊行，已申上司不许覆板”的声明。后面那句的意思就是：我已经向官府申请了版权，汝等不许翻印。"
    },
    {
        "question": "章文嵩",
        "answer": "章文嵩是淘宝网高级研究员、核心系统负责人，主要负责基础核心软件研发、推进网络软硬件方面的性能优化、搭建下一代高可扩展低碳低成本的淘宝电子商务基础设施。他也是Linux内核的开发者，著名的Linux集群项目—LVS（Linux Virtual Server）的创始人和主要开发人员，LVS集群代码已在Linux 2.4和2.6的官方内核中，并得到广泛的应用。在架构大型系统、系统软件开发、Linux操作系统、网络和软件开发管理上有着丰富的经验。他一直在自由软件的开发上花费时间，并积极推动开源活动在中国的发展。\n2016年5月27日，任滴滴出行高级副总裁、负责CTO线基础平台部兼工程技术委员会主席。\n  加入滴滴之前，章文嵩曾在阿里巴巴任职近七年，历任淘宝网资深技术总监、淘宝技术委员会主席、阿里副总裁、阿里开源委员会主席、阿里云CTO等。"
    },
    {
        "question": "互联网公司为什么会选择开源",
        "answer": "选择开源的原因可以有很多:\n1. 树立品牌形象：公司开源很多情况下是为了提升外界对公司的形象认知。任何一个大科技公司，肯定多多少少用了开源项目。如果连一个开源项目都没有，这很容易给人造成，“这公司总是索取，却不回馈给开源社区”的形象（尤其在美国）。\n2. 发掘潜在员工：很多公司一个很好的招聘渠道是开源项目的贡献者。如果能在公司开源项目做出贡献的话，这个对于公司来说是比面试好很多的能力证明。\n3. 实现额外功能：有的公司／项目实际上有很多想做的小功能，但是没时间也没人力去单独做。项目开源之后很多时候能吸引到开源贡献者来做一些自己感兴趣，项目想要，但项目没时间做的feature。\n4. 扩大影响范围：公司开源项目的质量，很多时候能反映公司的影响力。苹果的Swift就是个好例子。Swift开源之后，能够用在不少iOS之外的领域。说不定之后我们还能看到用Swift写的网站架构。\n5. 用作战略武器：开源项目还可以作为公司的战略武器。最好的例子就是谷歌的Android。通过开源和病毒式的传播一下追上iOS。这里面有很多弊端（比如碎片化严重），不过谷歌这么一招给了开发者十分大的力量，Android一下成为一个和iOS比肩的选项。"
    },
    {
        "question": "女性参与开源的比例",
        "answer": "小源告诉你，女性参与开源的比例每年都在稳定增长呢。2018年为12%，2019年上升到16%，开源社区通过各种方式一直在鼓励女性的参与，提升咱们开源人群多样性。"
    },
    {
        "question": "开源参与者的年龄主要是多少岁",
        "answer": "小源告诉你，20~39岁的贡献者是开源界绝对的主力，占比超过85%。跟2018年的时候相比，30岁以上人群的占比有比较大的提升，说明有更多资深从业者一直在参与开源"
    },
    {
        "question": "参与开源的人都有哪些行业",
        "answer": "有6成以上的参与者来自互联网行业，来自其他行业的参与者比例每年也在大幅增加，如电信/通信、金融/银行等，开源正在渗透入各个行业。"
    },
    {
        "question": "参与开源的人是不是收入都特别高",
        "answer": "首先小源想告诉你，开源开发者的收入普遍都是较高的。截至2019年，近6成的开发者月收入在1.5万以上元。收入在1.5-3万这个区间的能占到39%。月薪超过3万的开发者大概有26%。月收入5万以上的大佬们能占到6%。"
    },
    {
        "question": "开源是不是用爱发电，从开源中是不是无法获得回报",
        "answer": "在2018年时，超8成的开发者从未或很少能从开源获得收入。但在2019年时这个比例已经下降到了53%，数据显示，有8%的人通过开源获得了很多的收入。越来越多的开发者能从开源中获得收入，这也说明开源产业生态正在逐步完善"
    },
    {
        "question": "开源社区一般用什么工具交流",
        "answer": "开源社区交流的主要工具是邮件、微信群和QQ。作为异军突起的新锐Slack，近年来也在快速吞噬市场"
    },
    {
        "question": "人工智能和开源能结合到一起去吗",
        "answer": "人工智能当然可以开源呀！截至2019年，开源界的AI开发者从已经从2018年时的4%提升到8%，人工智能领域正在与开源紧密结合，蓬勃发展。"
    },
    {
        "question": "都是什么样的人在参与开源",
        "answer": "开源的参与者主要是80后和90后。普遍受教育程度较高，其中本科及以上学历的占到了八成。男性约占84%，女性参与者约为16%。"
    },
    {
        "question": "参与开源，除了写代码，还有什么工作",
        "answer": "开源贡献是多元化的，参与开源不一定非要是贡献代码，开源社区中存在多种角色和职能，比如文档与测试工作就占有很大的比例。开源运营的过程中有许多看似“技术含量不高但却不可或缺”的事情"
    },
    {
        "question": "参与开源的人，技术领域主要是什么",
        "answer": "就技术领域而言，后端开发占据了近三分之一的份额，Web前端开发者和云计算开发者占据了约为19%、14%"
    },
    {
        "question": "大家最希望开源的产品都是什么",
        "answer": "程序员们挑战困难的内心是非常火热的，操作系统和开发工具由于相对复杂而全面，当之无愧的成为大家最希望开源的产品。紧随其后的是中间件产品，比如Webshere、Weblogic。"
    },
    {
        "question": "开源软件具有怎样的特点",
        "answer": "开源软件因为具有开放透明的代码、自由共享的知识，以及开源的精神理念，使得开源参与者们喜欢使用它"
    },
    {
        "question": "开源的参与者们最喜欢的开源产品是什么",
        "answer": "Linux以巨大优势，成为参与者最喜爱的开源产品，Apache(Web服务器)，今年来在中国发展已有燎原之势，容器界的黑马Docker紧随其后，Mysql、Chromium凭借在各自领域的重要地位，排进前五名"
    },
    {
        "question": "开源社区中代码与社区的关系是什么",
        "answer": "社区是大于代码的，围绕代码而生的社区，会让代码变得更加优秀。在实际的运营过程中，人可能是开源软件中最重要的因素。代码可以通过一遍一遍的修改，从无到有、从坏到好，逐渐完美。但是如果没有一个好的社区，一个再好的软件，最终还是会走向消亡。而这一点，无论对于开源软件还是闭源软件都是一样的。"
    },
    {
        "question": "中国成立开源基金会的作用什么",
        "answer": "中国成立开源基金会可以推广开源的理念，发展开源文化教育，推动开源社区建设，建立开源生态体系"
    },
    {
        "question": "开源社区肩负的使命是什么",
        "answer": "开源社区肩负着促进成员间的技术交流、发展社区的核心项目、传播开源理念的使命。"
    },
    {
        "question": "开源社区中重要的角色都有哪些",
        "answer": "开源社区最重要的两大支柱是代码和社区。负责代码的有核心开发者、普通开发者；与社区相关的职位有社区管理人员，布道师和社区活动组织者"
    },
    {
        "question": "开源的开发者都使用什么开发语言",
        "answer": "开发语言呈现多超多强的状态，其中前三甲分别为JavaScript、Java、和Python。"
    },
    {
        "question": "开源的开发者都使用什么在线文档",
        "answer": "在线文档编辑工具中，有超过半数的参与者使用wiki，而即使在网络受限的情况下，GoogleDoc也依然受到大家的青睐；石墨文档也是在中国开源社区经常使用的工具"
    },
    {
        "question": "开源的开发者都使用什么代码编辑器",
        "answer": "VSCode、Vim、Notepad++  是最深受大家喜爱的三款代码编辑器。"
    },
    {
        "question": "开源的开发者都使用什么版本控制工具",
        "answer": "版本控制工具，最有名的就是Git，占据着将近九成的比例"
    },
    {
        "question": "什么是开源代码托管平台",
        "answer": "面向开源软件的托管平台，通俗来说就是能托管开放源代码项目的平台，除具备基本的Web管理界面，还支持在线讨论、文件编辑、任务管理和访问控制等多种协作功能"
    },
    {
        "question": "开源代码托管平台有哪些",
        "answer": "Github是全球最大的开源代码托管平台。\nGitee是国内最大的开源代码托管平台。\nGitLab是一个完整的DevOps平台，支持代码托管。"
    },
    {
        "question": "Github",
        "answer": "GitHub 是一个面向开源及私有软件项目的托管平台，因为只支持 Git 作为唯一的版本库格式进行托管，故名 GitHub。\n 截止2019年8月，有超过5000万开发者和1亿个托管库，是全球最大的开发人员及其项目社区的所在地。"
    },
    {
        "question": "Gitee",
        "answer": "Gitee是一个代码托管·协作开发平台，开发者超过 500 万，托管项目超过 1000 万，汇聚几乎所有本土原创开源项目，并于 2016 年推出企业版，提供企业级代码托管服务，成为开发领域领先的 SaaS 服务提供商。"
    },
    {
        "question": "GitLab",
        "answer": "GitLab是一个完整的DevOps平台，核心代码开源，支持代码托管与协作，支持私有部署，主要面向组织和企业用户，有超过10万组织和企业使用。\n最初是作为源代码管理解决方案来与团队进行软件开发协作。后来演变为涵盖软件开发生命周期的集成解决方案，然后演变为整个DevOps生命周期。"
    },
    {
        "question": "Git",
        "answer": "Git是一个开源的分布式版本控制系统，可以快速、高效地管理各种规模项目。"
    },
    {
        "question": "版本控制系统",
        "answer": "版本控制是一种记录一个或若干文件内容变化，以便将来查阅特定版本修订情况的系统。"
    },
    {
        "question": "wuhan2020 开源社区介绍？",
        "answer": "Wuhan2020 开源社区是以解决 2019 年底、2020 年初所爆发的新冠肺炎（COVID-19）全球化疫情而诞生的一个公益性开源组织，是广大公益志愿者和技术开发者所形成的一个共同体，旨在以开源协作的方式，解决公益场景中的的社会危机和挑战。GitHub项目地址：https://github.com/wuhan2020；gitee项目地址：https://gitee.com/wuhan2020"
    },
    {
        "question": "wuhan2020社区在疫情期间发挥的作用？",
        "answer": "Wuhan2020在疫情期间，搭建了5个网页/网站，在GitHub建立了23个代码仓库，建立了涵盖医院需求、物流、捐款、酒店等信息及疫情导航等服务功能模块，支持了数个抗击疫情相关程序的开发。在自愿协作的中后期，Wuhan2020还汇集多方资源举办了以“数字化开放协作方式解决疫情背后的社会危机和挑战”为题的线上黑客松，进一步促成了抗击疫情产品的诞生。"
    },
    {
        "question": "wuhan2020社区如何发展起来的？",
        "answer": "Wuhan2020社区由Frank在2020年1月25日与王伟老师通过X-Lab发起 ，后由开源社成员，Datawhale加入共同建设的。在疫情期间累积吸引4000余位志愿者参与贡献，并在GitHub上收获了6000+star。"
    },
    {
        "question": "wuhan2020开源社区的协作流程是怎样的？",
        "answer": "link-image:图片1.png(https://deportal.mmais.com.cn/api/media/v1/account/deportal/object/5f8949ca3771050001d8b5d4)"
    },
    {
        "question": "wuhan2020项目与开源的关系？",
        "answer": "“开源”是包含设计、内容、软件等在内的数字空间大规模社会化协作，没有边界的、分布式的、以志愿的方式、共建虚拟的庞大系统。Wuhan2020不仅是在开源平台上搭建的，而且也是自组织大规模社会化协作的典型代表，社区的数据，代码，协作流程，均具有开源属性。"
    },
    {
        "question": "hack for wuhan 黑客松介绍？",
        "answer": "Wuhan2020汇集多方资源举办了以“数字化开放协作方式解决疫情背后的社会危机和挑战”为题的线上黑客松。包括风险投资、社会创新、国内外互联网科技头部企业高管等在内的社会各界人士作为评委或嘉宾参与了Hack for wuhan黑客松比赛。比赛共吸引到33 个国家共 902 名选手报名，58只参赛队伍共计345名选手参赛。比赛吸引了37 位专业导师，50+ 赛事志愿者及观摩人员500 多人；共获得70 万全网曝光，14,500 + 活动浏览，链接了43 个合作社区和5 个技术媒体 。比赛最终有8支团队获奖，获得Wuhan2020对接到的价值10万元的云开发资源。"
    },
    {
        "question": "如何加入 wuhan2020开源社区？",
        "answer": "通过官网：https://community.wuhan2020.org.cn/zh-cn/index.html：通过GitHub：https://github.com/wuhan2020；加入slack：https://app.slack.com/client/TT5U1VCPQ；微信群二维码："
    },
    {
        "question": "小源在wuhan2020做了什么？",
        "answer": "小源在wuhan2020开源社区主办的Hack for wuhan 2020 黑客松比赛中荣获了观众最喜爱奖呢"
    },
    {
        "question": "开源科技",
        "answer": "“开源”一般指的是任何源码可公开获取的技术或软件。作为一种创造模式，开源已不仅仅局限于软件技术的开发。如今，开源还包括了其他广泛的开放技术领域，如硬件设计、微型处理器指令集架构、规范、数据模型、协议、标准以及公众以公开模式协作创造的其他技术。"
    },
    {
        "question": "Hadoop",
        "answer": "Apache Hadoop以其巨大的大规模处理数据能力而成为大数据行业中最著名和最常用的工具。这是100%开放源代码框架，可在现有数据中心的商用硬件上运行。此外，它可以在云基础架构上运行。Hadoop包含四个部分： .\nHadoop分 布式文件系统：俗称HDFS，它是兼容超高带宽的分布式文件系统。\nMapReduce：一 种用于处理大数据的编程模型。\nYARN：这是一个用于在Hadoop基础架构中管理和调度Hadoop资源的平台。\n库：帮助其他模块与Hadoop一 起使用。"
    },
    {
        "question": "Apache Spark",
        "answer": "Apache Spark的关键在于它填补了Apache Hadoop在数据处理方面的空白。有趣的是，Spark可以处理批处理数据和实时数据。正如Spark进行内存中数据处理一样，它处理数据的速度比传统磁盘处理快得多。"
    },
    {
        "question": "Apache Storm",
        "answer": "Apache Storm是一个分布式实时框架，用于可靠地处理无限制的数据流。该框架支持任何编程语言。Apache Storm的独特功能是：\n\n大规模的可扩展性\n容错\n“快速失败，自动重启\"方法\n每个元组的保证过程\n写在Clojure\n在JVM上运行\n支持直接丙烯酸图（DAG） 拓扑\n支持多种语言\n支持JSON等协议"
    },
    {
        "question": "Cassandra",
        "answer": "Apache Cassandra是一个分布式数据库，用于管理服务器上的大量数据。这是主要处理结构化数据集的最佳大数据工具之一。它提供高可用性服务，没有单点故障。此外，它具有某些功能，这是其他关系数据库和NoSQL数据库无法提供的。这些功能是：\n\n持续可用性作为数据源\n线性可扩展性能\n操作简单\n跨数据中心轻松分发数据\n云可用性\n可扩展性\n性能"
    },
    {
        "question": "RapidMiner",
        "answer": "RapidMiner是用于数据科学活动的软件平台，并为以下方面提供了集成的环境：\n\n准备资料\n机器学习\n文字挖掘\n预测分析\n深度学习\n应用开发\n原型制作"
    },
    {
        "question": "MongoDB",
        "answer": "MongoDB是一个开源NoSQL数据库，它与许多内置功能具有跨平台兼容性。对于需要快速，实时数据做出即时决策的企业来说，它是理想的选择。对于想要数据驱动体验的用户而言，它是理想的选择。它运行在MEAN软件堆栈，NET应用程序和Java平台上。"
    },
    {
        "question": "对联",
        "answer": "“王斌给您对对联”是一个有趣的对对联工具，用深度学习对对联\nhttps://ai.binwang.me/couplet/"
    },
    {
        "question": "自动上色",
        "answer": "一款 AI 驱动的线稿上色工具 ，可根据用户上传的自定义色彩给线稿进行上色 \nhttps://github.com/lllyasviel/style2paints"
    },
    {
        "question": "交互式的在线可视化学习算法平台",
        "answer": "一个交互式的在线可视化学习算法平台，能在可视化区域看到每行代码执行对应的操作，并且有对应的动画呈现，使你更加容易理解算法。https://github.com/algorithm-visualizer/algorithm-visualizer"
    },
    {
        "question": "动画的形式呈现解 LeetCode 题目的思路项目",
        "answer": "动画的形式呈现解 LeetCode 题目的思路项目\nhttps://github.com/MisterBooo/LeetCodeAnimation"
    },
    {
        "question": "有没有能够学习git的网站",
        "answer": "【LearnGitBranching】\n一个在线可视化交互学习 Git 网站，帮助初级开发人员快速理解 Git 操作流程\nhttps://learngitbranching.js.org/?demo=&locale=zh_CN"
    },
    {
        "question": "临时需要将本地代码进行迅速提交的",
        "answer": "【git-fire】\n一个非常有趣的 Shell 脚本，用于应对当火灾来临时需要将本地代码进行迅速提交的突发情况。提交时会新开一个分支，以防止出现 merge 冲突的情况。\nhttps://github.com/qw3rtman/git-fire"
    },
    {
        "question": "女装项目推荐",
        "answer": "【好耶 是女装】\n项目很简单且并不要求你贡献代码，没有编程技能都可以参加。你可以从这里学习从克隆项目，创建分支，提交和同步修改，到合并分支请求的整套流程，一次即可熟悉 Git/GitHub 的使用。\n\n当然，你还要事先准备至少一张你的女装照！\nhttps://github.com/komeiji-satori/Dress"
    },
    {
        "question": "代码转换成图片",
        "answer": "【代码转换成图片】\n你见过推特上面的 这 些 代码 图片 吗? 虽然这些代码令人印象深刻，但从审美角度来说还有提升空间。Carbon 能够轻松地将你的源码生成漂亮的图片并分享。还等什么呢？用这个新发现的美化工具秀给你的 followers 看吧。\n\nhttps://github.com/carbon-app/carbon"
    },
    {
        "question": "最全中华古诗词数据库",
        "answer": "【最全中华古诗词数据库】\n唐宋两朝近一万四千古诗人，接近 5.5 万首唐诗加 26 万宋诗。两宋时期 1564 位词人，21050 首词。\nhttps://github.com/chinese-poetry/chinese-poetry"
    },
    {
        "question": "图像化展示 Github 账号的信息",
        "answer": "【图像化展示 Github 账号的信息】\nhttps://github.com/tipsy/profile-summary-for-github"
    },
    {
        "question": "在线制作 `sorry 为所欲为` 的 gif",
        "answer": "【在线制作 `sorry 为所欲为` 的 gif】\nhttps://github.com/xtyxtyx/sorry"
    },
    {
        "question": "Windows 计算器",
        "answer": "【Windows 计算器】\n微软在 MIT License 下开源的Windows 计算器。没错！就是你Windows电脑里的那个计算器！\nWindows Calculator app 是使用 C++ 写成的现代 Windows app，预安装在 Windows 中。这款 app 提供标准型、科学型和程序员计算器功能，以及不同度量单位和货币之间的转换\n\nhttps://github.com/Microsoft/calculator"
    },
    {
        "question": "996。ICU",
        "answer": "【996.ICU】\n996.ICU 项目是一位匿名人士在 Github 上建立的项目，项目名字调侃近些年 IT 界流行的一种工作制度：996 是指工作日早 9 点上班，晚上 9 点下班，中午和晚上休息 1 小时（或不到），总计 10 小时以上，并且一周工作 6 天的工作制度。名字非常形象的形容为只要你天天 996 早晚进 ICU，非常真切的反应了现代加班制度下许多员工过劳死在工作岗位的现实。\n\n小源在这里认真提醒您，我们是为更好的生活而工作，而非为工作而生活\n\nhttps://github.com/996icu/996.ICU"
    },
    {
        "question": "FreeCodeCamp",
        "answer": "【FreeCodeCamp】\nFreeCodeCamp 是目前为止（2020 年 9 月）GitHub 上 Star 数最多的项目，Star 总数 31 + 万。\nFreeCodeCamp 是 GitHub 上排名第一的开源项目，致力于帮助人们利用零散时间学习编程。它的使命是 Learn to code and help nonprofits（学习编程，去帮助那些非盈利组织）。FCC 涵盖 HTML5、CSS、React、JavaScript、Database 等课程，游戏化程度非常高，学员可以通过线上聊天室和线下社区活动（Coffee and Code）相互帮助。目前覆盖全球 160 + 个国家、1000 + 个城市，40W + 开发者在平台学习\nhttps://github.com/freeCodeCamp/freeCodeCamp"
    },
    {
        "question": "logoly 自动生成 Pornhub 风格 Logo",
        "answer": "【logoly 自动生成 Pornhub 风格 Logo】\nhttps://github.com/bestony/logoly"
    },
    {
        "question": "Alex",
        "answer": "【Alex】\n\n它是一个简单但很有用的小工具。适用于明文文本或者格式为 Markdown 或 HTML 的文档。Alex 会对 “性别偏好、极端主义、种族相关、宗教，或者文章中其他不平等的措辞” 产生警告。\n小源提醒：说话真的要小心呢！\n\nhttps://github.com/get-alex/alex"
    },
    {
        "question": "什么是R？",
        "answer": "R 是使用 GNU 授权的一个自由、免费、开源的软件，是用于统计计算和统计制图的优秀工具。"
    },
    {
        "question": "什么是S-PLUS？",
        "answer": "S语言是由 AT&T 贝尔实验室开发的一种用来进行数据探索、统计分析、作图的解释型语言。最初 S 语言的实现版本主要是 S- PLUS。S-PLUS 是一个商业软件，它基于 S 语言，并由 MathSoft 公司的统计科学部进一步完善。后来Auckland 大学的 Robert Gentleman 和 Ross Ihaka 及其他志愿人员开发了一个 R 系统。R 的使用与 S-PLUS 有很多类似之处，两个软件有一定的兼容性。S-PLUS 的使用手册，只要经过不多的修改就能成为 R 的使用手册。所以有人说 R 是 S-PLUS 的一个“克隆”。只不过，R 是免费的。"
    },
    {
        "question": "什么是Rstudio？",
        "answer": "Rstudio是最为广泛使用的R语言集成开发环境。"
    },
    {
        "question": "什么是CRAN？",
        "answer": "尽管用于统计分析，但作为用户，您不必成为统计专家。R拥有自己的公共图书馆CRAN （综合R存档网络），其中包含9000多 个模块和用于数据统计分析的算法。"
    },
    {
        "question": "精简不用的css文件",
        "answer": "删除掉CSS中没有使用的选择器。\nhttps://github.com/peterbe/mincss"
    },
    {
        "question": "视频换脸项目",
        "answer": "前段时间很火的“Dame Dane”和“Unravel”的视频换脸教程，恶搞你的朋友们吧！\nhttps://www.kapwing.com/resources/baka-mitai-dame-da-ne-meme/"
    },
    {
        "question": "中文敏感词处理",
        "answer": "使用python实现的敏感词过滤模块\nhttps://github.com/observerss/textfilter"
    },
    {
        "question": "二维码生成开源项目",
        "answer": "可生成普通二维码、带图片的艺术二维码（黑白与彩色）、动态二维码（黑白与彩色）。\nhttps://github.com/sylnsfar/qrcode"
    },
    {
        "question": "css实现的小游戏",
        "answer": "只利用CSS+HTML实现的扫雷游戏，来试试吧~\nhttps://github.com/propjockey/css-sweeper"
    },
    {
        "question": "手绘风格css库",
        "answer": "推荐一个手绘风格的CSS库~\nhttps://github.com/papercss/papercss"
    },
    {
        "question": "图像高清处理",
        "answer": "使用深度学习把图像变成高清，快去用你们的老婆试试吧~\nhttps://github.com/nagadomi/waifu2x"
    },
    {
        "question": "不眨眼大比拼",
        "answer": "基于Python和JavaScript实现的小游戏，通过识别视频图像，实现双人“不眨眼”大比拼~快去跟朋友试试吧\nhttps://github.com/ByronHsu/Never-Blink"
    },
    {
        "question": "AR抠图神器",
        "answer": "实现通过手机AR拷贝实物照片到电脑PS软件的项目~\nhttps://github.com/cyrildiagne/ar-cutpaste"
    },
    {
        "question": "平面图片3D效果化",
        "answer": "可以将一张图片转化成有3D效果的图片~快试试你家狗子，立体起来啦！\nhttps://github.com/vt-vl-lab/3d-photo-inpainting"
    },
    {
        "question": "红色警报游戏",
        "answer": "是的，红警开源了：\nhttps://github.com/electronicarts/CnC_Remastered_Collection"
    },
    {
        "question": "网络用语缩写查询",
        "answer": "yysy，还能不能好好说话了？Javascript实现的划词“翻译”脚本。\nhttps://github.com/itorr/nbnhhsh"
    },
    {
        "question": "中文文本纠错工具",
        "answer": "通过Python实现对于中文拼音、笔画输入法的错误纠正\nhttps://github.com/shibing624/pycorrector"
    },
    {
        "question": "土味情话生成器",
        "answer": "Javascript实现土味情话在线生成，用男女朋友试试够不够“土”~\nhttps://github.com/zerosoul/honeyed-words-generator"
    },
    {
        "question": "狗屁不通生成器",
        "answer": "就我个人来说，狗屁不通生成器对我的意义，不能不说非常重大。总结的来说，从这个角度来看，莎士比亚曾经说过，意志命运往往背道而驰，决心到最后会全部推倒。这启发了我，所谓狗屁不通生成器，关键是狗屁不通生成器需要如何写。生活中，若狗屁不通生成器出现了，我们就不得不考虑它出现了的事实...使用狗屁不通生成器，生成狗屁不通的文字！\nhttps://github.com/menzi11/BullshitGenerator"
    },
    {
        "question": "社区对以太坊来说是最重要的吗？",
        "answer": "我绝对认为社区是以太坊最重要的部分。代码决定了一个平台现在能做什么，社区决定了一个平台未来能做什么。更何况不管是对于区块链，还是对于任何的软件生态系统，让人们能够参与进来并感觉友好是非常重要的，而这不是依靠代码就能实现的。"
    },
    {
        "question": "开源社区有什么优势？",
        "answer": "开发以太坊这类工程的工作量太大了，传统的软件开发公司很难完成。要面临的工作不仅包括区块链客户端、应用层软件等等的开发，也包括培训、文档、开发者经验等等方面，社区可以一起来完成这些工作，但单个公司仅凭一己之力是难以做到的。\n此外，对于那些非常聪明的、有才华的人而言，金钱只是吸引他们的一个因素，他们还会被一个健康的、令人兴奋的环境吸引，他们会因为觉得自己是在做对世界有意义的事情而感受到激励，这些都是金钱买不到的。"
    },
    {
        "question": "开源文化在其他领域存在吗？",
        "answer": "我觉得其他领域存在类似的东西。比如说，很多在市政府工作的人经常跑去找对方聊天，分享自己的想法。很多智力社区，比如数学和人文学科，也都通过类似的方式运作。我觉得人类天生就是喜欢合作的，只是有时候，国家与国家之间、公司与公司之间，因为竞争所产生的激励，会妨碍到这种合作。"
    },
    {
        "question": "以太坊社区是什么样子的？",
        "answer": "应该不是某个时刻感觉到，而是一个逐渐发生的过程。比如说，在过去几年，我每个月去一座新的城市，到一个新的地方，每次都能听到或者看到一些新出现的以太坊应用。在2015年的时候，如果有人在以太坊上做了一个东西，我基本马上就能知道。但现在，我感觉好像有越来越多的项目、越来越多的东西我是不知道的。有时候我甚至会觉得，在我自己发起的这个社区里，我反而像一个外来的观光客。以太坊社区现在就是这么大，从最初的社区长到今天，确实是很惊人的增长。"
    },
    {
        "question": "在以太坊工作最重要的原因是什么？",
        "answer": "我觉得人们把以太坊社区看作是一个正在发生大量的、最有趣的工作的地方，这些工作可以是密码学领域的，可以是经济机制设计领域的，也可以是区块链协议开发领域的。而且人们会发现以太坊社区是在推动社会的发展和技术的进步，它不是只把注意力放在币价上。\n当然以太坊并不是唯一一个把关注点放在这些方面的加密社区，比如Zcash也是一个非常强大的社区，他们在零知识证明领域、协议管理领域、开发者激励领域都做出了重要的开拓性的工作，只不过以太坊社区是最大的那一个。"
    },
    {
        "question": "以太坊的开发者可以被“偷走”吗？",
        "answer": "很多人尝试偷过！比如说波场在很多场合下对以太坊开发者提供经济激励，劝他们转移到波场上。也有很多区块链项目的团队试图来参加以太坊大会，然后介绍自己说是以太坊的朋友，但实际上是想跟开发者聊天，说服他们转移到自己的平台上。当然，这个策略通常并不会奏效。"
    },
    {
        "question": "现在以太坊开源社区的开发工作主要有哪些？",
        "answer": "现阶段以太坊上最活跃的开发活动发生在下边这几个领域：\n零知识证明技术，包括交易中的隐私保护、投票中的隐私保护、协议本身的改进（比如PLONK协议和STARKs协议）。\nLayer 2的可扩展性，特别是在ZK Rollup和Optimistic Rollup上的工作。\n钱包设计以及其他改进用户体验的项目。\n以太坊2.0的客户端团队。\n以太坊1的短期扩容以及新的客户端（比如Nethermind）。"
    },
    {
        "question": "以太坊开发者大会是一种有效的平衡管理和自主的工具吗？",
        "answer": "以太坊社区的成员在地理分布上是分散的，大家相距遥远，因此会议绝对是一种非常有助于社区团结的有效的工具。但我认为我们应该有更频繁的、本地的活动或会议，像现在这样把注意力集中在一个会议上是不够的。"
    },
    {
        "question": "什么叫从哲学层面进行思考？",
        "answer": "哲学层面是指要站在某个高度来看什么才是对以太坊生态重要的东西，从而为以太坊平台和生态系统的发展提供参考：人们希望用以太坊来做什么，以太坊如何做才能满足这种需要，什么是这其中的关键挑战。"
    },
    {
        "question": "什么是C语言",
        "answer": "小源告诉你，C 语言是一门通用计算机编程语言，广泛应用于底层开发。C 语言的设计目标是提供一种能以简易的方式编译、处理低级存储器、产生少量的机器码以及不需要任何运行环境支持便能运行的编程语言。"
    },
    {
        "question": "C语言是由谁发明的",
        "answer": "丹尼斯・里奇 (Dennis Ritchie)，C 语言之父"
    },
    {
        "question": "C语言有多少年历史了",
        "answer": "C 语言于 1972 年 11 月问世，迄今已经有近50年的历史啦。是小源年龄的好多倍呢"
    },
    {
        "question": "C语言是具有影响力的编程语言吗",
        "answer": "很多编程语言都深受 C 语言的影响，比如 C++（原先是 C 语言的一个扩展）、C#、Java、PHP、Javascript、Perl、LPC 和 UNIX 的 C Shell 等。\n也正因为 C 语言的影响力，掌握 C 语言的人，再学其它编程语言，大多能很快上手，触类旁通，很多大学将 C 语言作为计算机教学的入门语言。"
    },
    {
        "question": "C语言为什么叫C语言",
        "answer": "C 语言之所以命名为 C，是因为 C 语言源自 Ken Thompson 发明的 B 语言，而 B 语言则源自 BCPL 语言"
    },
    {
        "question": "C语言的特点",
        "answer": "C 语言是一种结构化语言，它有着清晰的层次，可按照模块的方式对程序进行编写，十分有利于程序的调试，且 c 语言的处理和表现能力都非常的强大，依靠非常全面的运算符和多样的数据类型，可以轻易完成各种数据结构的构建，通过指针类型更可对内存直接寻址以及对硬件进行直接操作，因此既能够用于开发系统程序，也可用于开发应用软件"
    },
    {
        "question": "C语言的专属特点",
        "answer": "C 语言是普适性最强的一种计算机程序编辑语言，它不仅可以发挥出高级编程语言的功用，还具有汇编语言的优点，因此相对于其它编程语言，它具有自己独特的特点。具体体现在以下三个方面：其一，广泛性。其二，简洁性。其三，结构完善。"
    },
    {
        "question": "C语言的数据类型都有什么",
        "answer": "C 的数据类型包括：整型 (short,int,long,long long)、字符型 (char)、实型或浮点型（单精度 float 和双精度 double）、枚举类型 (enum)、数组类型、结构体类型 (struct)、共用体类型 (union)、指针类型和空类型 (void)"
    },
    {
        "question": "C语言中的常量是什么",
        "answer": "常量其值不可改变，符号常量名通常用大写"
    },
    {
        "question": "国内分布式、云平台相关开源产品",
        "answer": "1. Apache SkyWalking 是一款应用性能监控（APM）工具，对微服务、云原生和容器化应用提供自动化、高性能的监控方案；\n2.Apache ShardingSphere是一套开源的分布式数据库中间件解决方案组成的生态圈，它由 JDBC、Proxy 和 Sidecar（规划中）这 3 款相互独立，却又能够混合部署配合使用的产品组成；\n3.TiKV 是一个开源的分布式事务 Key-Value 数据库，支持跨行 ACID 事务，同时实现了自动水平伸缩、数据强一致性、跨数据中心高可用和云原生等重要特性；\n4.Dragonfly中文名“蜻蜓”，是一个基于P2P的智能文件分发系统；\n5.Dubbo 是阿里巴巴公司开源的一个高性能优秀的服务框架，使得应用可通过高性能的 RPC 实现服务的输出和输入功能，可以和 Spring 框架无缝集成；\n6.Apollo（阿波罗）是携程框架部门研发的配置管理平台，能够集中化管理应用不同环境、不同集群的配置，配置修改后能够实时推送到应用端，并且具备规范的权限、流程治理等特性等等"
    },
    {
        "question": "SkyWalking",
        "answer": "SkyWalking 是一款开源的应用性能监控系统，包括指标监控，分布式追踪，分布式系统性能诊断；\n文档：https://www.oschina.net/p/skywalking\n代码库：https://gitee.com/OpenSkywalking/sky-walking"
    },
    {
        "question": "ShardingSphere",
        "answer": "ShardingSphere 已于2020年4月16日成为 Apache 软件基金会的顶级项目。    \n    Apache ShardingSphere 是一套开源的分布式数据库中间件解决方案组成的生态圈，它由 JDBC、Proxy 和 Sidecar（规划中）这 3 款相互独立，却又能够混合部署配合使用的产品组成。 它们均提供标准化的数据分片、分布式事务和数据库治理功能，可适用于如 Java 同构、异构语言、云原生等各种多样化的应用场景。\n    Apache ShardingSphere 定位为关系型数据库中间件，旨在充分合理地在分布式的场景下利用关系型数据库的计算和存储能力，而并非实现一个全新的关系型数据库。 它通过关注不变，进而抓住事物本质。关系型数据库当今依然占有巨大市场，是各个公司核心业务的基石，未来也难于撼动，我们目前阶段更加关注在原有基础上的增量，而非颠覆。\n    Apache ShardingSphere 5.x 版本开始致力于可插拔架构，项目的功能组件能够灵活的以可插拔的方式进行扩展。 目前，数据分片、读写分离、多数据副本、数据加密、影子库压测等功能，以及对MySQL、PostgreSQL、SQLServer、Oracle 等 SQL 与协议的支持，均通过插件的方式织入项目。 开发者能够像使用积木一样定制属于自己的独特系统。Apache ShardingSphere 目前已提供数十个 SPI 作为系统的扩展点，而且仍在不断增加中。\n源码地址：https://gitee.com/Sharding-Sphere/sharding-sphere"
    },
    {
        "question": "Tikv",
        "answer": "TiKV 是一个开源的分布式事务 Key-Value 数据库，支持跨行 ACID 事务，同时实现了自动水平伸缩、数据强一致性、跨数据中心高可用和云原生等重要特性。作为一个基础组件，TiKV 可作为构建其它系统的基石。目前，TiKV 已用于支持分布式 HTAP 数据库—— TiDB 中，负责存储数据，并已被多个行业的领先企业应用在实际生产环境。2019 年 5 月，CNCF 的 TOC（技术监督委员会）投票决定接受 TiKV 晋级为孵化项目。\n源码地址：https://github.com/tikv/tikv\n特性：\n1.跨数据中心高可用：使用 Raft 协议和 PD（Placement Driver）来实现跨地域、跨数据中心的高可用。\n水平扩展：通过 PD 和精心实现的 Multi-Raft ，TiKV 在水平扩展性方面的表现出色，可以轻松扩展到 200+TB 的数据。\n2.一致的分布式事务 ：与 Google Spanner 类似，TiKV 支持外部一致的分布式事务。\n协处理器（Coprocessor）支持：与 HBase 类似，TiKV 实现了支持分布式计算的协处理器框架，用于支持计算下推操作。\n3.与 TiDB 无缝协同 ：TiKV 和 TiDB 强强联合，构建了一个具有高水平扩展能力、支持一致性事务、融合传统关系型数据库和 NoSQL 优势特性的 NewSQL 数据库解决方案。\n源码地址：https://github.com/tikv/tikv"
    },
    {
        "question": "Dragonfly",
        "answer": "Dragonfly（蜻蜓）是阿里自研的 P2P 文件分发系统，用于解决大规模文件分发场景下分发耗时、成功率低、带宽浪费等难题。大幅提升发布部署、数据预热、大规模容器镜像分发等业务能力。\n    开源版的 Dragonfly 可用于 P2P 文件分发、容器镜像分发、局部限速、磁盘容量预检等。它支持多种容器技术，对容器本身无需做任何改造，镜像分发比 natvie 方式提速可高达 57 倍，Registry 网络出流量降低99.5%以上。\n源码地址：https://github.com/dragonflyoss/Dragonfly"
    },
    {
        "question": "dubbo",
        "answer": "Dubbo 是阿里巴巴公司开源的一个高性能优秀的服务框架，使得应用可通过高性能的 RPC 实现服务的输出和输入功能，可以和 Spring 框架无缝集成。\n主要核心部件：\nRemoting: 网络通信框架，实现了 sync-over-async 和 request-response 消息机制\nRPC: 一个远程过程调用的抽象，支持负载均衡、容灾和集群功能\nRegistry: 服务目录框架用于服务的注册和服务事件发布和订阅\n源码地址：https://gitee.com/mirrors/dubbo"
    },
    {
        "question": "阿波罗配置管理",
        "answer": "Apollo以ActiveMQ原型为基础，是一个更快、更可靠、更易于维护的消息代理工具。Apache称Apollo为最快、最强健的 STOMP（Streaming Text Orientated Message Protocol，流文本定向消息协议）服务器。\nApollo（阿波罗）是携程框架部门研发的分布式配置中心，能够集中化管理应用不同环境、不同集群的配置，配置修改后能够实时推送到应用端，并且具备规范的权限、流程治理等特性，适用于微服务配置管理场景。\n服务端基于Spring Boot和Spring Cloud开发，打包后可以直接运行，不需要额外安装Tomcat等应用容器。\nJava客户端不依赖任何框架，能够运行于所有Java运行时环境，同时对Spring/Spring Boot环境也有较好的支持。\n.Net客户端不依赖任何框架，能够运行于所有.Net运行时环境。\n源码地址：https://gitee.com/nobodyiam/apollo"
    },
    {
        "question": "动画算法",
        "answer": "用动画的形式呈现解 LeetCode 题目的思路\n源码地址：https://github.com/MisterBooo/LeetCodeAnimation"
    },
    {
        "question": "CS-Notes",
        "answer": "技术面试必备基础知识\n源码地址:https://github.com/CyC2018/CS-Notes"
    },
    {
        "question": "国内开源Web前端",
        "answer": "1.百度 Echarts\n仓库：https://github.com/apache/incubator-echarts\n2.阿里巴巴 ant-design 系列\n仓库：https://github.com/ant-design/ant-design\n等等"
    },
    {
        "question": "cocos2d-x",
        "answer": "Cocos2D-X 是全球知名的开源跨平台游戏引擎，易学易用，目前已经支持 iOS、Android、Windows 桌面、Mac OS X、Linux、BlackBerry、Windows Phone 等平台。Cocos2d-JS 统一了使用 JS 进行开发的开发体验，将 HTML5 引擎与 JSB 的 API 高度统一起来。捕鱼达人 HTML 5 版本基于此引擎实现对浏览器的支持，并获得谷歌 Web Store 首页置顶推荐。引擎配套有活跃的社区支持，已有来自 Google、Zynga、Microsoft、Intel、Samsung、BlackBerry 等跨国公司的优秀工程师为引擎贡献代码，开源社区 24 小时轮转所有的缺陷都被迅速发现并修复。\n源码地址：https://gitee.com/mirrors/cocos2d-x"
    },
    {
        "question": "Wox",
        "answer": "Wox是一款window上的快速启动软件，其灵感来源于Alfred和Launchy。\n功能：\n支持快速搜索本机程序和浏览器书签；\n支持Web搜索；\n支持插件 http://www.getwox.com/plugin；\n支持主题 http://www.getwox.com/theme。"
    },
    {
        "question": "you-get",
        "answer": "you-get 是一个跨平台命令行视频、音频与图像下载工具，支持国内外常用的各种多媒体网站。\n详细介绍：https://www.oschina.net/p/you-get\n源码地址：https://gitee.com/mirrors/you-get"
    },
    {
        "question": "Echarts",
        "answer": "ECharts，一个纯 Javascript 的图表库，可以流畅的运行在  PC 和移动设备上，兼容当前绝大部分浏览器（IE8/9/10/11，Chrome，Firefox，Safari等），底层依赖轻量级的 Canvas 类库  ZRender，提供直观，生动，可交互，可高度个性化定制的数据可视化图表。"
    },
    {
        "question": "ant-design",
        "answer": "Ant Design，是阿里开源的一套企业级 UI 设计语言和 React 组件库。\n官网地址：https://ant.design/"
    },
    {
        "question": "WeUI",
        "answer": "WeUI 是由微信官方设计团队专为微信移动 Web 应用设计的 UI 库。WeUI 是一套同微信原生视觉体验一致的基础样式库，为微信 Web 开发量身设计，可以令用户的使用感知更加统一。包含button、cell、dialog、toast、article、icon等各式元素。\n官网地址：https://weui.io/"
    },
    {
        "question": "WeiXinMPSDK",
        "answer": "JeffreySu/WeiXinMPSDK: 微信公众平台SDK Senparc.Weixin for C#，支持.NET Framework及.NET Core。已支持微信公众号、小程序、小游戏、企业号、企业微信、开放平台、微信支付、JSSDK、微信周边等全平台。WeChat SDK for C#.\n官网地址：https://weixin.senparc.com/\n源码地址：https://gitee.com/JeffreySu/WeiXinMPSDK"
    },
    {
        "question": "Android动画库",
        "answer": "AndroidViewAnimations是一个能实现很多很酷炫的 Android 动画的开源库, 动画效果是通过借鉴 Animate.css 来实现的, 不仅酷炫，使用起来也非常简单。\n源码地址：https://gitee.com/mirrors/androidviewanimations"
    },
    {
        "question": "Android刷卡布局",
        "answer": "AndroidSwipeLayout 是用于 Android 应用上面功能强大的刷卡布局效果。\n源码地址：https://github.com/daimajia/AndroidSwipeLayout\nAndroid相关项目：https://github.com/daimajia"
    },
    {
        "question": "什么是开源游戏",
        "answer": "开源顾名思义就是开放源代码。而开源游戏可以有很多种形式，比如你写了一个简单的游戏，开源在平台上供大家延伸开发。又比如某个游戏引擎里的组件开源给大家使用。"
    },
    {
        "question": "Godot和unity哪个好用",
        "answer": "Unity不开源。\n大部分游戏只是用到Unity的渲染和UI，用不到Unity的大部分特性，可用可不用。这种情况选哪个引擎都可以。\n而最近在油管上被尬吹的Godot是一款开源软件，上手也很容易，功能也很强大。可能功能和学习资料没有unity全，但有些功能unity也用不到。"
    },
    {
        "question": "Godot引擎可以实现哪些功能",
        "answer": "独立游戏有个特点，随时可能添加新内容。\ngodot可以在无需考虑架构的层面上往里面添加内容。\n juan(godot始作者) 用获得的捐款雇佣了几名图形学顶级人物，其中有adobe前员工，重写了3d渲染部分，速度更快。godot更适合独立游戏制作者，简单直接"
    },
    {
        "question": "2D游戏用哪种引擎比较好",
        "answer": "纯新手建议直接unity或者ue4，对0编程基础的游戏开发者比较友好。unity有很多开发简单游戏不需要写代码的插件，比如官方的2d游戏开发套件和behavior designer；我已经见过很多非程序员0代码开发出的不错的demo了。如果一开始就定位在html游戏，可以试试layabox。除非已经有过丰富的开发经验，不然不推荐cocos。cocos creator还很不成熟，cocos2dx对新手很不友好。"
    },
    {
        "question": "有哪些推荐的开源游戏引擎",
        "answer": "比如：LibGDX，stride，gameplay3D，godot，urho3D，OGRE，cocos，irrlicht，Amethyst，HaxeFlixel……一大堆."
    },
    {
        "question": "制作一款开源游戏应该如何选择引擎",
        "answer": "都可以，看你想制作哪种类型的游戏了，以及你擅长哪种语言。比如Godot是开放源代码的，这样有什么bug你也可以自行修复"
    },
    {
        "question": "哪个游戏引擎用的最多",
        "answer": "据统计，Steam平台上Unity和UE加起来也就只占大半，还有很大一部分游戏用的不太主流的引擎。"
    },
    {
        "question": "Godot的制作上限在哪里",
        "answer": "虽然GDScript是脚本语言，脚本语言的性能肯定有限，但官方已经说过有NativeScript来对接C和C++了，也已经有过一些使用C++来提升性能的案例。而且godot游戏引擎还是开源的，只要有能力，就直接去改源代码。"
    },
    {
        "question": "什么是开源游戏引擎",
        "answer": "开放引擎的源代码，不仅仅是软件免费使用，也可以通过调整引擎本身而尝试不同的自己需要的功能。"
    },
    {
        "question": "3D游戏用哪种引擎比较好",
        "answer": "虚幻引擎 4 ，技术最新，源代码全公开。也满足几乎所有团队的开发需求。3A 作品多。 如果做VR 开发，绝大部分高品质的VR游戏都是用 Unreal Engine 4"
    },
    {
        "question": "什么是OGRE",
        "answer": "OGRE是一个三维(3D)图形渲染引擎。它是面向对象的,并且高效，抽象化了不同的API和平台,这样可以以场景为对象来使用物体,支持多种场景.它已经成功地被应用于诸多三维仿真领域，包括网络游戏和三维仿真项目。\n\n协议：MIT\n语言：C++"
    },
    {
        "question": "如何看待游戏引擎的开源行为？",
        "answer": "游戏引擎开源对游戏开发者来说，有百益而无一害。准确的来说，游戏引擎厂商构建引擎生态，对游戏引擎厂商自身、游戏开发者、游戏公司来说，是三方共赢，互为依托。开源引擎对游戏开发者带的好处太多，随便举几个吧。\n1.大大降低了游戏开发的时间成本和人力成本，引擎品质还能在一定程度上提高游戏的整体美术品质。就拿cocos2dx来说，虽然它自己不太赚钱，虽然我从来没停止过说它烂，但它客观上为国内的绝大部分2D手游包括棋牌节省了至少50%以上的开发成本。\n2.提供了工程化和算法学习的宝库，你最少能学到论文里学不到的实作手法和工程向的优化如何去做。要知道看论文看PPT和做出来是两码事。\n3.单列一下UE的开源吧，因为它策略激进，更新快，效果多，它的开源客观上奶了国内大部分自研引擎。"
    },
    {
        "question": "既然已经有开源的游戏引擎，为什么还要自研引擎呢？",
        "answer": "实际上，无论是UE4还是Unity3D，这些所谓的开源引擎，一定程度上影响到了开发效率。除了经济（引擎开发商抽成）原因之外，更主要的原因还是在于“效率”上。一方面是有些通用引擎，游戏开发者并没有引擎的源代码，对于定制化的需求无法满足，只能找到引擎的开发商；另一方面，这些通用引擎很多内容是“大而全”的，一个团队或许用不到很多功能，因此会造成功能上的浪费和效率上的减损。归根结底还是在于效率——经济的效率，引擎的研发费用可能被持续不断的作品推出而抹平；开发的效率，自研引擎显然更为适应公司内部开发组，也更适应游戏最开始的企划书，这对效率的提升极为明显。"
    },
    {
        "question": "什么是HaxeFlixel",
        "answer": "HaxeFlixel是一个2D游戏引擎，它可以让你用免费的开源技术轻松创建跨平台的游戏！"
    },
    {
        "question": "游戏引擎是否应该开源？",
        "answer": "1. 如果你只是想玩票，那么开源是必然的选择。 2. 如果你想认真做成一个商业服务，那么是否开源就取决于，你是否有比开源更好的竞争策略。"
    },
    {
        "question": "目前有哪些优秀的开源免费的游戏引擎？",
        "answer": "比如：LibGDX，stride，gameplay3D，godot，urho3D，OGRE，cocos，irrlicht，Amethyst，HaxeFlixel……一大堆，都是免费开源的，也都很优秀。而能制作3A的也有几款，不过大部分都是闭源的"
    },
    {
        "question": "什么是GamePlay3D",
        "answer": "GamePlay是一个免费的、开源的、跨平台的2D+3D游戏框架。"
    },
    {
        "question": "什么是Horde3D",
        "answer": "Horde3D 是一个用 C++ 写成的 3D 渲染引擎，致力于成为一款轻量型、概念清晰的软件"
    },
    {
        "question": "什么是cocos",
        "answer": "Cocos是由触控科技推出的游戏开发一站式解决方案，包含了从新建立项、游戏制作、到 打包上线的全套流程。开发者可以通过cocos快速生成代码、编辑资源和动画，最终输出适合于多个平台的游戏产品。"
    },
    {
        "question": "什么是Urho3D",
        "answer": "Urho3D 是用 C++ 实现的一个轻量型、跨平台的 2D 和 3D 游戏引擎，灵感来自 OGRE 和 Horde3D。\n\n特性：\nDirect3D9, Direct3D11v1.4, OpenGL 2.0 or 3.2v1.4, OpenGL ES 2.0 或 WebGLv1.4 渲染\nHLSL 或 GLSL 着色器 + HLSL 字节码缓存\n配置渲染管线。默认实现 forward, light pre-pass 和延迟渲染"
    },
    {
        "question": "什么是Amethyst",
        "answer": "是一款开源的、用Rust编写的面向数据的游戏引擎。"
    },
    {
        "question": "什么是Snowdrop",
        "answer": "雪花莲Snowdrop游戏引擎由Massive工作室完全自主开发，致力于带来前所未见的拟真世界。随着3A级游戏大作的开发规模日益扩大，开发团队表示他们必须通过更聪明的方式来产出内容、而非只是依赖大量人工，针对次时代游戏主机所打造的全新引擎将大幅改善游戏开发流程，进而赋予游戏开发人员更高的自由度来实验各种游戏概念、构建原型（Prototype）进行测试并完整释放他们的创造力。"
    },
    {
        "question": "什么是unreal",
        "answer": "虚幻引擎3的设计目的非常明确，每一个方面都具有比较高的易用性，尤其侧重于数据生成和程序编写的方面，这样的话，美工只需要程序员的很少量的协助，就能够尽可能多地开发游戏的数据资源，并且这个过程是在完全的可视化环境中完成的，实际操作非常便利；\n与此同时，虚幻引擎3还能够为程序员提供一个具有先进功能的，并且具有可扩展性的应用程序框架（Framework），这个框架可以用于建立、测试和发布各种类型的游戏。\n而Unreal4在GitHub上开放了部分源代码。"
    },
    {
        "question": "什么是独立游戏",
        "answer": "对于独立制作的理解，国内和国外不尽相同。\n就国外来说，在没有商业资金的影响或者不以商业发行为目的，独立完成制作，都可认为是独立游戏制作行为。而独立游戏制作和商业游戏制作之间的界限，也随着游戏产业的发展，一天天变得模糊起来。许多著名的游戏企业，在早期还是小手工作坊时，也是可以归类于独立游戏制作的。"
    },
    {
        "question": "Godot下载地址",
        "answer": "要下载安装Godot，打开https://godotengine.org/。在这里，可以查看Godot的特性，去论坛交流等等。点击Download按钮。\n下载包为.ZIP文件。里面是一个应用程序，你可以将它解压到你电脑的任何位置。然后就没有然后了，Godot安装完成。"
    },
    {
        "question": "如何在Godot开启新项目",
        "answer": "运行下载的Godot应用程序，可以看到Project Manager。在这里，我们可以创建项目，查看其它内容和下载模板。\n\n点击New Project按钮来创建新项目。这将弹出一个新窗口，如下图：\n输入项目名称\n点击Create Folder按钮来创建一个新的文件夹\n点击Create & Edit按钮启动项目"
    },
    {
        "question": "Godot的四个面板",
        "answer": "Godot有4个主要的面板，我们将用它们来创建游戏，每个面板都有特定的用途。\nScene面板。它显示在当前场景下所有的节点及其层级结构。我们将在后面简单的讲一下场景和节点。\nFileSystem面板。它显示所有的文件和素材。精灵，模块，脚本，场景，文件夹，音频等等。"
    },
    {
        "question": "如何创建新角色",
        "answer": "要创建一个新场景，我们可以通过Scene > New Scene来进行。在场景面板里，选择Custom Node。这次会打开一个窗口，搜索并选择KinematicBody2D节点。\n将节点重命名为Player，然后保存它。\n在我们的平台游戏中，将需要一些sprites和其它的素材。本教程带有一个ZIP文件，包含了所有需要的素材。下载后将三个文件夹拖入Godot的项目目录里。"
    },
    {
        "question": "如何创建新场景",
        "answer": "首先，我们需要创建一个主场景，它是我们游戏的基础，它包含其它场景，如：角色，平台，硬币和敌人。\n\n在scene面板里，点击2D Scene按钮来创建一个新的2D场景。双击这个新节点，重命名为MainScene。\n即时保存场景是个好习惯。可以使用Ctrl + S或Scene > Save Scene来保存它。点击enter后你将在FileSystem里看到它。"
    },
    {
        "question": "如何开发游戏",
        "answer": "这是一个复杂的问题，它依赖于你的天分和资金以及当前的市场环境。这里有一篇文章关于市场调研基础能帮你起步。可能新手独立开发者最普遍的错误就是为他们的第一个发布设定一个过于雄心勃勃的工程，比如一个多人在线RPG。这种项目能够完成的例子非常之少，即使经过多年的努力。记住开发游戏不用付钞票；仅仅运送软件要付费。一个有缺点而发布及时的游戏要比一个完美却总是不确定的延期的游戏要出众得多。"
    },
    {
        "question": "独立开发游戏者能赚多少",
        "answer": "大多数独立开发者可能根本不赚钱，因为太多自己建立的独立开发者没有事实上完成一个游戏。成为一个独立开发者的想法有冷静的一个方面：吸引太多实际上并不负责任的人，在这方面说来他和任何创造性的行业没有什么不同。你能找到多少演员不靠他们的职业过活的？有多少作家持续不断地“完成”了他们的第一本小说？也有很多兼职的独立开发者，于是他们能有时间发布他们的第一个游戏并开始从中获利。"
    },
    {
        "question": "独立游戏如何赚钱",
        "answer": "大多数独立开发者通过在线销售他们的游戏赚钱。通常的途径是创建一个网站提供免费游戏demo并鼓励玩家购买完整版本的游戏。另一个成功的途径是创建web可玩的（web-playable）游戏，然后把他们授权给各类门户站点。在这几个类型里，另外还有其他许多的成功途径。对多人在线游戏，独立开发者会销售注册。教育游戏的独立开发者会销售站点授权给学校。"
    },
    {
        "question": "个人如何进入游戏领域",
        "answer": "到达这个目标有很多的路线；然而，某些东西还是可以概括的。大多数独立开发者具有相当丰富的游戏编程经验，要么来自于以前的游戏程序员工作，要么就是把学习游戏变成作为自己的爱好。许多独立开发者开始在业余时间制作游戏，同时通过全职工作，咨询工作，或者签约工作赚钱，某些天才独立开发者能创造他们自己的美术，音效，和音乐，但这样的全才非常稀少。"
    },
    {
        "question": "游戏开发者能过上好日子吗",
        "answer": "当然，绝对的。很多独立开发者正通过在线销售他们的游戏创造着超过年收入$100，000的效益，所以一旦独立开发者开始赚取百万美元收入并把他们的工作室发展超过特定点时，他们通常就不再叫作独立开发者了。他们也可能开始把他们的产品摆上零售**，并进入主流的开发者行列。id software就是这种转化的很好例子。另一方面来说，很多非常成功的独立开发者乐于保持他们的小工作室和有限的责任，于是他们选择不让自己的公司发展超过特定点。"
    },
    {
        "question": "我能在开源平台上学会制作游戏吗",
        "answer": "在游戏制作过程中，画面建模和优化是一项大工程，可以先从像素游戏这种简单的入手。且有很多免费又开源的引擎和素材可以使用。只要愿意学，上手并不难~"
    },
    {
        "question": "0基础从什么样的开源游戏项目上手比较好",
        "answer": "推荐：1、项目名称：在命令行玩的斗地主游戏 ratel\n\n项目简介：摸鱼神器，一个可以在命令行玩的斗地主游戏。这是一场对抗地主的游戏，不同的是，它可以在命令行中进行。\n\n项目地址：https://gitee.com/ainilili/ratel\n\n2. 项目名称：使用 Unity3D 制作的经典炸弹人 ZhaDanRen-WuXian\n\n项目简介：使用 Unity3D 制作的经典炸弹人，开源项目，无限关卡版，还原了经典炸弹人的所有功能，供大家相互学习。\n项目地址：https://gitee.com/Foldcc/ZhaDanRen-WuXian"
    },
    {
        "question": "游戏项目开源算法被抄袭怎么办",
        "answer": "决定做开源项目之前选择一个合适的License……"
    },
    {
        "question": "游戏玩法能否作为商业秘密保护？",
        "answer": "游戏玩法随着游戏的公开发行就会丧失秘密性，不符合商业秘密类知识产权的特点，因此，游戏玩法无法通过商业秘密进行保护。"
    },
    {
        "question": "游戏玩法能否作为商标保护？",
        "answer": "商标是用来区别一个经营者的品牌或服务和其他经营者的商品或服务的标记。\n\n商标的特点是用单一的图形进行标记。而游戏玩法所包含的内容很明显要比“单一的图形”或者“标记”的外延宽泛得多，因此，游戏玩法亦不能通过商标制度进行保护。"
    },
    {
        "question": "游戏玩法能否被看做作品，用著作权制度保护？",
        "answer": "著作权的对象是作品，是指文学、艺术、和科学领域内具有独创性并能以某种有形形式复制的智力成果。哪怕我们承认游戏的玩法能够通过游戏本身的上传、下载进行复制、传播，但由于游戏玩法只能带来快感而无法带来美感，不属于文学、艺术或科学领域，也就意味着著作权制度也无法保护游戏玩法。"
    },
    {
        "question": "游戏玩法能否作为专利保护",
        "answer": "游戏规则针对的不是“技术问题”，更别谈“技术手段”“利用自然规律”，因此，游戏规则无法通过专利进行保护。同时，《专利法》第二十五条以及《专利审查指南》也明确排除了“各种游戏、娱乐的规则和方法”的专利保护客体资格。《欧洲专利公约》第52条第（2）款第（c）项则亦明确规定了游戏的规则不属于专利保护客体。"
    },
    {
        "question": "如何看待游戏红警开源",
        "answer": "首先，这次开源的只是游戏的一部分，更具体地说，TiberianDawn.dll和RedAlert.dll两个链接库。\n\n游戏的exe本体，很明显，依然是闭源的。\n这个项目见证了1995年到2020年之间，语言标准、编程习惯、机器性能的各种变迁……从这个意义上说，它的“开源”还是蛮有教育意义的…"
    },
    {
        "question": "什么是开源软件（OSS）？",
        "answer": "开源软件呀，顾名思义——源代码是公开的，大家可以修改和添加。这些软件是遵守各种各样的许可方 式发布的，如 BSD、MIT 等。阅读几行由优秀程序员编写的代码会自然地提高你的编码知识，并且能够帮助你了解优秀的编码实践~"
    },
    {
        "question": "怎么参与开源",
        "answer": "千万不要认为对于开源软件的贡献都是关于编码的哟。你还可以参与线上、线下推广开源项目活动，修复项目文档，编写或翻译文档等，这些都是为开源做贡献的方式呢。"
    },
    {
        "question": "什么是开源社",
        "answer": "开源社是由国内外支持开源的企业，社区及个人，依“贡 献，共识，共治”原则，所组织的厂商中立、纯志愿者、非 营利的开源联盟，旨在共创健康可持续发展的开源生态体 系，并推动中国开源社区成为全球开源软件的积极参与及贡献者。我们专注于开源治理、国际接轨、社区发展和开源项目。:D"
    },
    {
        "question": "开源将如何发展",
        "answer": "作用可多啦，开放源码实现高度自主和安全可控，开源提供源码有利于赢取更多的关注、声誉、用户和市场。活跃的开发者社区也可以激励大家分享共赢; 降低了技术成本，也突破了国界的技术枷锁。"
    },
    {
        "question": "贾扬清",
        "answer": "贾扬清在AI开源社区有极大的影响力。在UC Berkeley 读博期间，他就开始接触深度学习，并开源了深度学习框架 Caffe。博士毕业后，贾扬清加入谷歌大脑担任研究科学家，参与了谷歌开源框架TensorFlow 的开发。而后在 Facebook任职期间，领导了包括 2016到2017 年主要开发的 Caffe2、2017 年创建的神经网络通用交换格式 ONNX、2018年联合领导的 PyTorch 1.0 项目。"
    },
    {
        "question": "开源同闭源比的好处",
        "answer": "特性新模块能很快让别人用上，并得到及时反馈。\n开源的参与者一般比闭源项目要多。issue 上回复、相互 review 代码是程序猿的社交。我观察程 序猿通常在现实世界中更闷骚一点(这里可以 at 我认识的所有给力码农)，但开源上的交互能很 好的满足社交需求(参见贾扬清回答结尾)。我认识一小哥就是持续几年手机一响半夜起来回 issue，从而成为大神。"
    },
    {
        "question": "开源有哪三个阶段",
        "answer": "如下：\n1. 开放源代码\n2. 开放开发\n3. 开放管理"
    },
    {
        "question": "开源怎么赚钱",
        "answer": "除了github打赏好像没有别的了哎，但是你会学到很多，还可能会有意想不到的机会找上你~"
    },
    {
        "question": "开源的版权是怎么被保护起来的",
        "answer": "a. 1976年2月3日，比尔·盖茨发表《致爱好者的公开信》，谴责软件盗版行为\nb. 1976年10月19日，美国国会修改《版权法》，把计算机软件纳入版权保护范围\nc. 1978年1月1日，新《版权法》生效\nd. 1981年，美国最高法院对《Diamondv.Diehr》案件的宣判，确立了软件专利合法，肯定了软件知识产权"
    },
    {
        "question": "什么是IBM PC的发明时间",
        "answer": "是1981年喔"
    },
    {
        "question": "Linus是什么时候开始写Linux的？",
        "answer": "1991年啦"
    },
    {
        "question": "GPL首发时间",
        "answer": "首次发布是1989年呢"
    },
    {
        "question": "软件产业在什么时候被提出",
        "answer": "啊，我记得软件产业是1959年在西方正式提出呢，而软件工程1968年提出唉:D"
    },
    {
        "question": "开源是什么时候出现的",
        "answer": "开源软件在1998年被提出，至今不过21年喔～"
    },
    {
        "question": "开源有什么用",
        "answer": "开源代码与开源工具凝聚了以往的开发经验，为新兴软件的开发提供了可以复制用的源代码，也为软件开发的每一个环节，提供了不断改进的工具。像开源项目，开源模版，开源组件这些，现在可几乎没有公司敢说自己不采用开源技术而把软件搞出来了。它增加了软件的生产效率，而降低了生产成本"
    },
    {
        "question": "开源为何能够走到今天",
        "answer": "从历史来总结呢，人们通过分享技术来建立商业联盟。源代码像其他学术成果一样被视为“公共领域共享的成果”。且可以通过专利和版权方面政策保护自己的产权顺便赚钱。从自由软件运动到开源软件运动，事实上，开源技术事实上带动了企业兴起，两者将会共同进步。"
    },
    {
        "question": "国家应该做什么来推动开源",
        "answer": "要支持相关教育及学术传统，用更强大的法律来保护知识产权，支持基金会因因而可以更好地扶持开源～"
    },
    {
        "question": "开源基金会什么时候开始兴起的",
        "answer": "这是我整理的时间轴，赶紧收藏，别人我不告诉他：\na. 1999年3月，Apache软件基金会\nb. 2000年，Linux基金会\nc. 2000年8，GNOME基金会\nd. 2003年7月，Mozilla基金会\ne. 2004年2月，Eclipse基金会\nf. 2005年2月，软件自由法律中心\ng. 2005年11月，围绕Linux的专利联盟，开放发明网络(OpenInventionNetwork)成立"
    },
    {
        "question": "开源运动的兴起",
        "answer": "如下，这样逐步成长过来的:D\na. 1991年，Linus开始开发Linux操作系统内核\nb. 1997年，EricS.Raymond首次发表《大教堂与集市》\nc. 1998年1月，Netscape公司宣布将Navigator浏览器的源代码开源，在加利福尼亚州帕洛阿尔\n托举行的战略会议上，Open Source 这个词汇，首次出现\nd. 1998年4月，TimO'Reilly将原本计划召开的《FreewareSummit》改名为《OpenSource\nSummit》，在此次峰会上，Open Source正式定名\ne. 1998年，开源软件促进会正式成立"
    },
    {
        "question": "开源之前的注意事项",
        "answer": "在做出贡献之前，你可以遵循这样的准则呢。\n编程语言:先选择一种编程语言来查找开源项目，确保它符合你的习惯。\n项目类型: 选择了你想使用的语言，把注意力放到你想要做出贡献的项目类型上。 Github 的所有项目都按照 Topic 归类到不同的文件夹中。可以选择你感兴趣的主题。\n项目的规模 :关注项目的规模，当你开始时，建议不要用大型开源项目。请务必注意项目标签~"
    },
    {
        "question": "学习开源",
        "answer": "给你一些网站和渠道推荐看看吧~\nFirst Timers Only(仅限新手)网站：提供一些教程，帮助你熟悉GitHub 上的贡献 工作流程。https://www.firsttimersonly.com/\n依然适合新手：\nhttps://opensource.com/life/16/1/6-beginner-open-source\nGithub有很多开源项目，目前有一些对初学者友好的问题可以解决的项目。一旦你选定了你想要做贡献的项目，那么就是开始行动的时候了。这里有两个资源:\nGitHub 项目新手贡献指南 仅限新手\n有几个组织举办的比赛能够激励你参与开源贡献，例如 Hacktoberfest 和Hacktitude。"
    },
    {
        "question": "通过开源我能获得什么",
        "answer": "为开源项目做贡献的可以提升你的技术能力。初学者可以从一些小事开始，比如修复 Bug、发送 pull 请求、编写软件文档等参与~\n参与开源贡献还有另一个好处和我们一起共同打造社区。你有机会成为由志同道合的人组成的社区的一部 分。如果你是一个自由职业者，同时你又是个积极的社区贡献者，你很有可能被潜在的老板注意到:)就像我努力学习，被开源社区注意到了一样呢~"
    },
    {
        "question": "只有写代码才是对开源做贡献吗",
        "answer": "千万不要认为对于开源软件的贡献都是关于编码的哟。你还可以参与线上、线下推广开源项目活动，修复项目文档，编写或翻译文档等，这些都是为开源做贡献的方式呢。"
    },
    {
        "question": "什么是开源软件OSS",
        "answer": "开源软件（OSS）是与源代码一起分发的软件，可以由用户读取或修改。普遍开源软件应符合自由分发、源代码必须包含在程序中、任何人都必须能够修改源代码、可以重新分发源代码的修改版本等标准。"
    },
    {
        "question": "中国第一起GPL诉讼是什么？",
        "answer": "2019 年 11 月初，数字天堂（北京）网络技术有限公司（数字天堂）诉柚子（北京）科技有限公司、柚子（北京）移动技术有限公司（两柚子）侵犯计算机软件著作权纠纷案，由北京高级人民法院二审作出终审判决。本案是关于GPL是否在中国具有法律效力的第一案"
    },
    {
        "question": "甲骨文诉谷歌是什么？",
        "answer": "甲骨文与谷歌就 Android 代码问题的知识产权问题发起的诉讼，距今已有将近10个年头。经历了三次审判和两次上诉，现在这场官司正等待美国最高法院的判决。"
    },
    {
        "question": "软件行业内部竞争格局有哪些改变",
        "answer": "主要有以下方面：\na. 开源软件创新模式的成本相对较低\nb. 开源软件能有效的配置创新资源"
    },
    {
        "question": "开源软件的合理性",
        "answer": "在具有网络外部性的知识产业中，私有产权制度使软件厂商所具有了超级垄断的权\n力，这不仅使消费者付出了更多的成本，而且阻碍了技术的进步。"
    },
    {
        "question": "在 “技术-经济-社会”范式下， 人类社会发展的规律是什么",
        "answer": "经济层面: 创新可带来竞争优势，有利于资本获得超额利润。\n社会层面: 减轻垄断, 促进竞争，有利于创新(从而有利于提升人类的生产率)相较传统行业, 软件行业具有”边际成本固定” + “网络外部性”的特点, 导致由高市场集中度带来的垄断更加严重, 而传统的反垄断手段对于软件行业效果有限, 因此催生出了开源软件的机制来减轻垄断， 促进竞争，追求创新。"
    },
    {
        "question": "开源软件对IT行业产生了哪些影响",
        "answer": "整体上来讲, 开源软件的出现在两个层面上对IT产业产生了影响:\n1.首先，改变了软件行业内部的竞争策略与格局\n2.其次，改变了产业内不同行业间玩家的竞争策略及格局\n从而改变了上述市场的竞争形态。"
    },
    {
        "question": "开源软件对软件行业市场结构带来哪些影响",
        "answer": "开源软件对软件行业市场结构的影响，主要在于：\n1. 对于独家垄断的市场形态, 有可能通过市场力量促使其逐步转向寡头垄断或者垄断竞争。\n2. 对于寡头垄断如双寡头垄断市场\n可以避免寡头厂商之间的串通合谋，可以通过产品的差异化，避免恶性的价格竞争使得产业环境恶化。"
    },
    {
        "question": "开源软件对软件行业产生影响的根由",
        "answer": "开源软件引发影响的根源在于程序源代码的开放，通过对网络外部性和源代码保护两方面因素的综合分析发现，由于源代码保护程度不同，开源软件的创新成本较低，市场上将会存在一定数量不同版本的软件产品，而专有软件对源代码进行封闭，创新成本高，只能由一家厂商（如微软）独自生产；\n凭借先入市场优势，专有软件（如Windows）系统有更大的网络价值、更好的易用性和强的功能性，而由于开放源码带来的强供给网络外部性，开源软件（如Linux）拥有更低的价格、更高的可靠性和稳定性。由于网络外部性强度的不同，不同的细分系统软件市场将会出现不同的市场结构，但总体上，开源软件的出现增强了软件市场的竞争程度。"
    },
    {
        "question": "软件行业竞争的基础是什么",
        "answer": "市场进入竞争是基础，商业模式竞争是本质，技术创新竞争是最高形式。"
    },
    {
        "question": "结构性进入壁垒是什么",
        "answer": "结构性进入壁垒主要是指由行业的供给技术特点和市场需求偏好特点所形成的客观存在的一种使进入者处于不利地位的因素，包括生产和需求上的规模经济、企业无法直接作用的技术和制度等.  不是在位厂商有意识造成的，而是厂商在利润最大化的经营过程中自然产生的。"
    },
    {
        "question": "策略性进入壁垒是什么",
        "answer": "策略性进入壁垒主要是在位厂商为了保持其在市场上的垄断或寡占地位，而采取的有意识的阻止潜在进入者的策略，例如掠夺性定价、生产能力扩张等，它使进入者处于不利状态。"
    },
    {
        "question": "结构性壁垒主要包括哪几方面的壁垒",
        "answer": "主要包括：\n需求方规模经济以及正反馈机制的特征强化了软件市场中后入者的进入壁垒.由于网络外部性的影响，在大部分软件市场中，消费者选择产品的决策是基于对产品未来用户安装基础规模的预测。一般而言，这种预测通常是以产品当前的用户安装基础规模为基础的，产品当前的用户安装基础规模越大，消费者预期其未来的网络规模也越大\n转移成本使得系统软件市场上在位者对新入者的阻碍能力加强。在软件行业中，锁定和高转移成本“是规律而不是例外”。因为，不同的技术之间往往互不兼容，消费者在转向同一功能的软件时，往往面临巨额的转移成本."
    },
    {
        "question": "策略性进入壁垒包含哪些内容",
        "answer": "策略性进入壁垒主要有：\n1）策略性的控制销售渠道以使竞争者处于不利地位。\n在位者为了保护垄断地位，利用其规模巨大的既有用户基数，与销售商签订排他性的合同，即要求销售商主要是OEM 厂商只能预装在位者的产品，而排斥其他的产品。\n2）设置技术标准壁垒\n对于市场在位者而言，垄断地位往往使其技术标准成为市场的事实标准，而在位者的技术标准一旦成为市场的事实标准，就能减弱产业组织中的四种竞争作用力对其利润的威胁：\n3）标准将锁定用户，减弱用户议价威胁；\n4）标准促进与供方的稳定合作，弱化供方议价威胁；\n5）标准通过控制兼容性减少来自竞争者和潜在进入者的威胁；\n6）标准还会通过用户预期影响降低替代威胁。\n因此，对技术标准控制加大了后入者的进入难度，也为在位者带来了支配市场以及获取丰厚利润的能力。\n7）通过一体化策略提高进入成本。"
    },
    {
        "question": "Windows相较于Linux 有哪些优势",
        "answer": "相比Linux ，Windows有哪些优势\n（1）利用操作系统升级带来的先入市场优势。例如在1991年推出的Windows 3.1不仅彻底奠定了微软在桌面操作系统领域的统治地位,而且它还在软件行业形成了一个断层, 因为众多的软件厂商还来不及把原来基于DOS的软件转为能在下Windows运行的软件。趁此机会,微软得以在电子表格和字处理系统等软件大伺进攻,迅速推出了诸如Excel和Word之类的软件\n（2）将应用软件与操作系统绑定销售。对于一些不受到消费者欢迎的、新研制的和面临强大竞争威胁的应用软件如IE等，微软常常将它们与操作系统绑定销售, 卖给OEM厂商使之很快成为最畅销的产品,并沉重打击了竞争对手\n（3）利用掌握操作系统源码的优势。例如,相比其他公司,微软因为能够利用以及一中的“未公开的系统调用”而具有一定的创新成本优势等。"
    },
    {
        "question": "开源软件有哪些商业优势",
        "answer": "尽管市场中存在着较强的进入壁垒，但在竞争中，作为后入者的开源软件由于采取了不同于专有软件的反版权保护，形成了独特的商业模式，而这种商业模式内生了软件厂商的产品价格、能够满足更广泛需求的竞争优势，为开源软件进入市场提供了强有力的支持。"
    },
    {
        "question": "为什么说开源软件具有价格优势",
        "answer": "由于任何人都可以进入有吸引力的开源市场，因此竞争非常激烈，定价将基于加价超过成本。如果加价幅度太高，则新公司将进入市场。如果价格太低，公司将退出市场。而且，产品越成熟，整体价格越低。因而，客观上开源软件具有显著的价格优势。"
    },
    {
        "question": "为什么说开源软件可以满足用户更广泛的需求",
        "answer": "在某些领域，如ToB 的服务器及嵌入式市场或者ToC 的专业化市场,  用户往往具有一定计算机和软件操作技能且定制化的述求相当强烈, 相比闭源软件,  开源软件具有巨大的优势.开源软件凭借着上述方面的优势，采取适宜的策略，引导消费者的行为，当消费者数量突破临界规模时，就具有进入已由专有软件垄断市场的可行性。"
    },
    {
        "question": "软件行业在创新方面与传统产业相比有哪些差异",
        "answer": "主要有以下几方面：\n（1）创新成本较高。\n（2）软件产品创新的高风险性。\n（3）软件产品创新的复杂性。"
    },
    {
        "question": "软件行业内部竞争格局的有哪些改变",
        "answer": "主要有以下两方面的变化：\na. 开源软件创新模式的成本较低\nb. 开源软件能有效的配置创新资源"
    },
    {
        "question": "为什么开源软件创新模式的成本较低",
        "answer": "主要有以下两个方面：\n1）顺畅的信息流动降低了交易成本\n不确定性导致了有限理性和机会主义的产生，因而增加了交易成本。而开源软件公共产权制度和信息技术的广泛应用消除了信息流动的障碍，提高了软件开发者获得信息的能力，从而降低了信息的机会成本，充足的资源信息还减少了参与者的决策成本。\n2）在开源软件项目开发中，由于选择激励机制的作用，成员自愿参与软件的开发，即使存在较高的不确定性也不会导致机会主义倾向。另外，由于开源软件开发组织的公共产权制度，有限理性不会导致在传统组织中不完全合约情况下的一系列谈判、监督和强制实施的成本。"
    },
    {
        "question": "开源软件为什么可以有效的配置创新资源",
        "answer": "主要有以下几点:\n1）开源软件创新模式可以有效避免重复研发。\n2）开源软件创新模式中“各尽所能”的工作方式有效地减轻了信息不对称程度，提高了资源配置的准确性。\n3）开源软件创新模式扩大了配置资源的范围。\n4）开源软件创新模式加快了资源的流动速度。"
    },
    {
        "question": "商业化会对开源软件造成不良影响吗",
        "answer": "由于开源软件受到逆版权制度的保护，其商业化是在不能损害软件源代码开放和免费的条件下进行的，并不能通过限制开源软件的使用权利获利，只能对所提供的增值服务收费。因此，商业化并不会对开源软件的发展造成不良影响，反而会促进开源软件的推广和普及。"
    },
    {
        "question": "商业模式最核心的是什么",
        "answer": "商业模式最核心的三个组成部分：创造价值，传递价值，获取价值是三个环环相扣的闭环。"
    },
    {
        "question": "专有软件的商业模式",
        "answer": "专有软件的主要商业模式分为3 种：\n（1）软件项目模式。在这种模式中，软件公司更类似于为客户提供定制化的编程服务，其收入都是完成项目的一次性收费，不重复销售。\n（2）软件出版模式。软件开发之后被批量制作并授权销售，企业收入来自于软件的授权使用费。\n（3）软件订阅模式。软件在订阅平台进行销售，持续不断地为客户提供新的价值。它是随着互联网的出现，以上两种模式的组合。"
    },
    {
        "question": "开源软件的主要商业模式",
        "answer": "根据开源软件商业模式与软件本身的紧密程度，国内外常见的10种商业模式可分为三大类：许可证类、直接配套类、间接配套类以及附属产品类。\n其中典型主流的商业模式包括:"
    },
    {
        "question": "销售专业服务模式是什么",
        "answer": "销售专业服务模式是指通过为开源软件提供专业服务获利，比如培训、技术支持或者技术咨询等。许多企业没有资源也没有能力来维护自身的IT 系统，于是就出现了专门为企业提供基于开源软件的IT 服务公司。因为开源软件的特性，使得公司有编程能力的工程师可以熟练掌握，并利用专业所长为其他企业提供相应的服务。在该模式下，免费用户仅能获得开源软件的源代码而不包括可执行的二进制代码，付费用户则可同时获得可执行的二进制代码，并且包括软件编译和打包等商业化服务；此外，还可同时提供物理安装媒体（比如DVD）。\n红帽公司就主要通过订阅模式向客户提供专业服务，逐渐成长为最成功的开源软件公司。"
    },
    {
        "question": "双许可模式",
        "answer": "双许可模式是最常见的开源软件商业模式之一，指开发者不仅在开源许可证下提供软件，还在专有软件许可证下提供软件。在该模式中，产品的源代码主要来源于开源社区或软件厂商，这两部分的源代码共同组成了核心产品，再通过两类许可证（专有许可证和开源的copyleft 许可证）分别许可给免费用户和付费用户。专有版本的营收将用于下一个版本开源软件的研发中。双许可模式中，用户在开始阶段被免费的开源版本所吸引，在使用过程中通过不断了解厂商所能提供的商业化技术支持和服务，进而成为购买付费版本的客户。以MySQL 数据库为例，公司同时推出\n面向个人的开源版本和面向企业的专有版本两种，所采用的商业模式就是开源的copyleft 许可证（GPLv2）和专有软件许可证的双重许可。"
    },
    {
        "question": "再许可专有化模式",
        "answer": "再许可专有化模式是指在某些宽松许可证下，允许软件厂商将自身的专有软件与宽松许可证下的开源软件进行组合，组合后的软件产品可以不提供源代码。该模式的软件供应商可以针对最终的软件产品在专有许可证下进行销售，甚至直接对某些开源软件进行修改后进行销售。\n软件产品是由开源社区和软件供应商两部分开发者开发的软件组合而成（两者所开发的不是同一个软件）。开源社区的开发者们开发的是一款开源软件，并且该开源软件应用了宽松的开源许可证，允许再次许可闭源；而软件供应商开发的是专有软件，软件供应商将该专有软件与开源软件进行组合开发，然后形成一款新的软件产品，并在专有许可证下进行销售。该商业模式被众多公司采用，以苹果公司操作系统Mac OS 为代表，该系统就是利用再许可专有化模式来开发其软件产品的，苹果Mac 个人电脑的系统基于BSD 操作系统内核进行开发，现为苹果公司专有软件产品进行销售。"
    },
    {
        "question": "嵌入广告模式",
        "answer": "嵌入广告模式是指依靠开源软件的快速推广，而使软件内的嵌入广告得以传播。软件厂商将广告嵌入开发的软件产品中，软件产品即由软件本身和厂商嵌入的广告两部分构成。整个软件产品作为开源软件提供给广大的用户，开源软件的推广会带来越来越多的客户，这样就使得软件中嵌入的广告产生了传播的价值，广告厂商达到了产品推广的效果，更愿意向软件厂商投放广告，而软件厂商获利则会继续投入到开源软件的开发中，形成一个良性循环。多数开源软件企业倾向于率先采用嵌入广告的商业模式来获得收入、维持经营。例如，Android  平台为Google带来了大量的移动广告流量。"
    },
    {
        "question": "开源软件的许可证有哪些",
        "answer": "许可证分为限制性许可证（如GPL）和宽松许可证（如MIT 许可证、Apache）。\n限制性许可证促进了参与和分享的开源理念（使用过程中限制较多），使每一个人都能从软件中得到最大化的利益；\n而宽松许可证通过允许人们任意使用软件（包括修改代码，甚至以专有软件出售）来确保人们能从软件中得到最多的利益。"
    },
    {
        "question": "专有软件厂商对开源软件厂商的策略演变是什么",
        "answer": "在社会技术经济发展的大背景下， 专有软件厂商对开源软件厂商的策略整体上也在发生着演变：\na.1980年代 ~ 2010年代\n对于专有软件厂商来说, 这是个产品为王的时期, 对开源软件以“竞争”为主。\nb.2010年代 ~ 至今\n随着云计算技术的成熟, 无论是专有软件还是开源软件都向云服务化转变，从产品转化到了服务为网的时期, 二者的关系以”合作”为主。"
    },
    {
        "question": "开源软件促进竞争产生了哪些结果",
        "answer": "对源代码保护程度的不同，内生了开源软件与专有软件技术及商业模式创新的程度不同。开源软件的出现一方面为消费者提供了多样化的选择，另一方面迫使专有软件厂商不得不降低产品的市场价格和利润率水平，从而使消费者剩余得到提高，最终产生了下列结果:"
    },
    {
        "question": "开源软件出现后，软件市场之间的关系是什么",
        "answer": "开源软件的出现使得软件行业内部的市场结构发生变化, 各领域多处于寡头垄断状态,\n结合IT产业整体情况来看，产业内各行业绝大部分领域（组件）都呈现出双寡头或垄断竞争的格局, 再结合组件竞争的特点， 市场之间的关系主要表现在三个方面:"
    },
    {
        "question": "OSS 开发者可以分为几个群体",
        "answer": "通过对个人参与 OSS  开发的成本，我们能够清楚地将参与者分为两个明显的细分群体：高技术能力的开发者和低技术能力的开发者。这两类群体在激励动机上、在投入成本上有着非常大的差别，因而他们对于  OSS 自愿贡献的激励机制也完全不同，最终体现在对于 OSS 供给的数量、质量上的差别。"
    },
    {
        "question": "精英群体和学习群体是什么意思",
        "answer": "精英群体和学习群体两个群体的供给量的和就构成了 OSS  的总供给。其中，精英群体虽然人数少，但贡献却非常大，而学习群体人数虽然庞大，但贡献小。但是，按照静态的分析，开发者在达到了他们的参与 OSS  的目的之后，就不再进行自愿的贡献，因而总供给就应该停止了。如精英团队的开发者通过参与 OSS  获得了声誉、工作的机会等之后，就应该歇手了；学习群体的开发者在掌握了足够的技能之后也就不会再参与 OSS 的开发了。"
    },
    {
        "question": "精英群体和学习群体动态演变的原因是什么",
        "answer": "首先，由于计算机相关技术的广泛应用，吸引更多的人加入到程序员的队伍中，因而尽管学习群体中已经达到从业技能水平的开发者脱离了这一群体，但有更多的新的学习者加入进来，所以学习群体的规模能够得到不断的补充和扩大。\n其次，部分达到目的而脱离了学习群体的开发者会受到声誉、能力信号发送等动机的激励加入到精英群体中。由于学习群体规模的庞大，即使是其中的一小部分加入到精英群体中，也足以支撑精英群体的规模不断壮大。"
    },
    {
        "question": "软件产品传统的生产组织方式有哪些",
        "answer": "软件产品传统的生产组织方式和其他产品一样主要有两种：企业的组织方式和市场的组织方式。\n以企业方式组织的生产，利用企业的资源在企业内部完成，如微软、甲骨文等公司的软件开发。\n以市场契约的组织方式，生产要素在市场中通过相互契约完成，如程序的外包开发等。"
    },
    {
        "question": "开源软件的生产组织方式",
        "answer": "借助互联网再加上软件产品的特殊性质，  使得它成为人类历史上第一种整个社会生产过程包括生产、分配、交换、消费完全无需物理接触, 全部可以在线完成的人工产品。"
    },
    {
        "question": "开源社区和企业组织方式的区别",
        "answer": "开源社区群体的组织方式和企业的组织方式有着非常大的区别。\na. 非层级组织\nb. 自我组织\nc. 分布式平行结构"
    },
    {
        "question": "开源社区和市场组织方式有哪些区别",
        "answer": "OSS 开发群体也不同于市场的生产组织方式。\n首先，在市场的生产组织过程中，私有产权是必要的前提，是交易能够进行的基础。而在 OSS中，所有产品都是共有产权，由于不存在私有产权，因此也就不存在基于价格机制基础上的交易行为。"
    },
    {
        "question": "OSS 开发组织和虚拟组织的区别",
        "answer": "虽然 OSS  开发组织具备虚拟组织的三个主要特征，即存在组织成员能共享的利益或目标、在空间上分散、应用信息和通信技术进行相互沟通和管理，但是还是和现在已有的其它虚拟组织具有明显的区别。"
    },
    {
        "question": "为什么OSS 开发组织可以提高资源配置的效率",
        "answer": "OSS 开发组织的工作模式提供了一种能够更有效地配置人力资本投入的方式。\n首先，OSS 开发组织中“各尽所能”承担工作任务的方式有效地减轻了信息不对称的程度，提高了资源配置的准确性。\n其次，相对于企业组织，由于 OSS 开发组织具有大的多的规模（数百万的参与者和几十万个项目），使资源配置的可行集更大，资源流动的范围更广、限制更少，竞争更充分，因此资源的使用效率提高。\n最后，OSS 开发组织中较高的淘汰率表明，资源的流动速度较快，能够迅速地从使用效率低的项目中流向使用效率高的项目，从而提高了 OSS 开发组织整体的资源利用效率。"
    },
    {
        "question": "为什么OSS 开发组织比企业组织有更强的适应能力",
        "answer": "OSS 的组织方式使 OSS 开发组织比企业组织具有更强的对快速变化环境的适应能力。\n首先，OSS 开发组织分布式的组织结构，具有比企业层级组织更敏锐的触觉和更强的行动能力。\n其次，OSS 开发组织中的各个项目团队是没有明确边界的开放组织，因而组织规模能够随着变化的需要灵活地进行调整。\nOSS 开发组织的上述特点使其具有了非常大的灵活性和适应性，能够敏锐地感觉到需求的变化和技术环境的变化，并能够很快地适应这些变化。这是 OSS 开发组织群体能够迅速壮大的重要原因。"
    },
    {
        "question": "IT产业垄断形成的机理是什么",
        "answer": "形成机理为：\n1. 供给方和需求方双重规模经济作用下规模型垄断的形成\n2. 产权保护和标准竞争下技术型垄断的形成\n3.基于自身优势和强学习效应下内生型垄断的形成"
    },
    {
        "question": "IT产业竞争的新特征",
        "answer": "市场份额（Market Share）成为决定竞争胜负的关键。\n“赢者近乎通吃”是竞争的重要动力。\n标准竞争是竞争的主要方式。\n锁定用户是竞争的重要策略。\n联盟和兼容是获得竞争优势的重要途径。"
    },
    {
        "question": "争夺市场份额的竞争与主流化策略",
        "answer": "产品主流化策略的核心和关键就是使产品成为主流产品，而能否成功成为主流产品取决于产品市场份额的大小，所以尽力扩张市场份额成为产品主流化策略的直接目标。\n网络产品主流化的非定价策略可以分成两个大的方面，即促进自己的市场份额尽快尽早达到临界点的策略和抑制及延迟竞争对手的市场份额达到临界点的策略。"
    },
    {
        "question": "影响标准竞争胜负的因素",
        "answer": "市场竞争中有赢家也有输家，IT企业要想在标准竞争中赢得胜利，必须拥有一些关键资产。这些关键资产主要有六种：对用户安装基础的控制、知识产权、创新能力、生产能力、互补产品的力量以及品牌和名誉。这六种关键资产对于企业在标准竞争中胜出起重要作用。"
    },
    {
        "question": "标准竞争策略",
        "answer": "合理的策略提高企业在标准竞争中获胜的可能性。为了提高企业在标准竞争中获胜的概率，企业必须从战略的高度对标准竞争的策略进行规划和设计，包括：\na. 设定恰当的竞争目标\nb. 选择合适的进入时机\nc. 培育标准竞争所需的内部资源\nd. 合理的组织安排"
    },
    {
        "question": "兼容可以通过哪两种方式来实现",
        "answer": "兼容可以通过两种方式来实现，其一是标准化；其二是附加适配器。标准化（Standardization）是指根据需要对某一领域的有关方面规定统一的技术标准。以标准化方式实现兼容就是对相关产品或技术实现相融合所需要达到的统一技术标准事先进行设计（如对计算机界面或接口的统一规定），并通过协议敦促利益各方共同遵守，以使产品或技术可以互连接、互操作。附加适配器方式适用于采用不同技术标准的产品或技术之间，是在原本不能相融合的产品或技术之间附加一个转换装置使之能够在一定程度上互连接、互操作。"
    },
    {
        "question": "为什么说兼容是一个竞争战略问题",
        "answer": "兼容性一直是产业组织理论研究的一个重要问题。在网络经济中，兼容性已不再是企业的纯技术问题，而是一个竞争战略问题。一方面，对于某些由组件构成的系统网络产品来说，如果没有组件之间的相互兼容，系统将无法正常运行；另一方面，产品的兼容性关系到产品用户规模的构建与扩大，对于新进厂商来说，如果能够与在位厂商实现兼容，就能够迅速建立起新产品的用户规模；对于在位厂商来说，与新进厂商或其他在位厂商实现兼容，既可能使其用户规模进一步扩大，也可能因其他厂商的介入而使其用户规模逐渐缩小。前一种情况是兼容的技术层面问题，后一种情况是涉及到企业竞争战略的问题。"
    },
    {
        "question": "什么是组件竞争",
        "answer": "组件竞争是指在组成系统产品的各个互补品市场上，厂商可以自由进入展开竞争或者联合伙伴展开竞争。系统是指互补性产品集合在一个界面上来完成一定功能的整体，例如个人电脑系统包括硬件/软件：操作系统、应用软件，  这些组件共同组成了系统。"
    },
    {
        "question": "IT行业中开放和封闭的商业模式带来哪些变化",
        "answer": "在双寡头垄断厂商的竞争中,处于优势的垄断厂商采纳了一种相对封闭的商业模式,处于劣势的垄断厂商采纳了一种相对开放的商业模式,  这使得IT产品市场的总体竞争格局转变成开放的商业模式和封闭的商业模式的竞争，出现了如下变化："
    },
    {
        "question": "开源社区生产组织方式的竞争优势有哪些",
        "answer": "在信息技术的环境中，OSS 开发组织具备了能够和传统企业方式展开竞争的优势，并能够将这些优势保持并逐步扩大。这是 OSS 生产组织方式形成的根本原因。那么在目前的信息技术环境中，OSS 开发组织具备的竞争优势是什么。\na. 创新能力\nb. 交易成本\nc. 资源配置的效率\nd. 灵活性和适应性"
    },
    {
        "question": "开源大事记",
        "answer": "开源软件最早的思想起源于黑客文化，1984年，美国国家工程院院士Richard Stallman建立起操作系统GNU（GNU’s Not Unix），标志着基于“自由软件”思想的操作系统落成。\n1985年10月，Richard Stallman成立了自由软件基金会（FSF，Free Software Foundation），主要目的是为开发GNU募集资金。\n1991年，芬兰大学生Linus Torvalds基于GNU GPL框架发布了GNU/Linux，标志着Linux的诞生。\n1998年1月，Netscape公司宣布其Netscape浏览器开放源代码；1998年2月，Raymond成立了开放源代码促进会，帮助提供开放源代码的定义以及认证工作。"
    },
    {
        "question": "如何在开源社区中成长",
        "answer": "1 注册一个github账户\n2 挑一个自己感兴趣的开源项目\n3 阅读项目文档，熟悉项目\n4 找到自己能做的事情，有无技术含量都可，提交第一个pr"
    },
    {
        "question": "如何寻找适合自己的的开源项目",
        "answer": "1、要想深入、长久的在项目中贡献，一定要先确定自己感兴趣的方向、领域是什么\n2、社区/项目的技术栈是否与你匹配\n3、社区的氛围是否是你喜欢的\n如果以上的几个问题你都考虑清楚了，那么请大胆的寻找自己喜欢的项目吧\nGitHub有许多排行榜 在里面寻找可以方便不少"
    },
    {
        "question": "如何阅读开源代码",
        "answer": "小源教你读代码：读代码时通常要去思考折两个问题，\n1，要解决什么问题？\n2，如何实现的？\n读的过程中，还要调试，动手实践，只有这样，才是良合格的阅读开源代码"
    },
    {
        "question": "非计算机专业的同学可以加入开源社区吗？",
        "answer": "可以对开源做贡献的方面有很多，任何人都可以。"
    },
    {
        "question": "技术一般，如何做出贡献？",
        "answer": "若第一次提交代码，系统会自动标注，告诉社区其他人注意审查代码问题，并提醒欢迎新人。换而言之社区伙伴会帮助你。"
    },
    {
        "question": "如何看待 KPI 开源项目",
        "answer": "不要设定虚荣性指标（下载量等），对开源软件本身发展没有帮助。应设立项目能吸纳多少参与者参与社区共享的指标（比较难）。"
    },
    {
        "question": "如何参与与业界接轨的项目",
        "answer": "很多时候有一定的经验会给自己增加一点竞争力，参与与业界接轨的项目可以进入企业实习，也可以参与开源软件项目。其中参与开源软件项目中可以学习到协作开发、书写规范文档、编写较高质量和可读性的代码，并且开源软件是真正可用的好软件，是难得的项目经验。"
    },
    {
        "question": "如何学习开源？",
        "answer": "首先要感兴趣，要坚持。\n加入开源社，不潜水，积极参与社区互动，混个脸熟，才是融入社区的第一步；\n提高搜索的技能：如Google、GitHub、Stack Overflow 等，培养自己解决问题的能力；\n掌握基础知识：一门编程语言、Git、Linux等"
    },
    {
        "question": "如何成为开源社区的一份子？",
        "answer": "找一个自己感兴趣的项目并参与贡献，\n阅读社区的交流记录例如Issue list、Mail list、Pull Request list。"
    },
    {
        "question": "参与开源项目路线",
        "answer": "开源即江湖，有了基本功才可以行走江湖，江湖行话（术语）也是需要掌握的。\n补足基础知识\n- 如Linux基本操作、编程语言基础、数据库基础、领域知识、提高搜索技能；\n熟悉开源项目\n- 成为项目用户、熟悉开发规范、阅读社区的交流记录 ；\n最终目标：投入贡献。"
    },
    {
        "question": "零基础的同学从哪些开始学习？",
        "answer": "从第一个作业开始学习，哪里不会学哪里，用到什么技术就开始着手学习那个技术。"
    },
    {
        "question": "Issue的功能有哪些？",
        "answer": "Issue的构成包括标题（Title）、内容（Body）、评论（Comments）、标签（Labels）、指派者（Assigness）、所属项目看板（Project）和里程碑（Milestone）。\n \nIssue的典型功能是提供一个提问和交流的平台，可以在这里提交软件使用过程中出现的bug，也可以提交软件还需要添加的功能模块。"
    },
    {
        "question": "Issue的理论基础有哪些？",
        "answer": "异步沟通的优点包括跨时区合作，个人开发者的时间成本低；不过异步沟通存在着以下挑战：总体沟通的时间成本较高、需要尽量减少沟通的回合数并且需要尽量在一次沟通中表达尽量多的内容。信息沉淀的优点包括把所有信息都沉淀下来，可后期检索，此外沉淀信息可为后来人提供有效的查询路径。"
    },
    {
        "question": "Issue如何降低沟通成本？",
        "answer": "对于开发者而言，提出Issue之前需要先搜索有无相关的历史Issue，避免重复提问。提交Issue时，内容也尽量详实充分，例如如果是Bug，说明运行环境、参数配置等，最好是可以提供日志或最小可复现仓库；对于维护者而言，需要做到的是维护良好的社区沟通环境、提供有效的沟通指引、使用模板指引开发者提供更全面的信息并且设计有效的流程使得Issue可以被更快地响应。"
    },
    {
        "question": "Issue和管理学有什么联系？",
        "answer": "管理学的主要目的是在现有条件下通过合理的组织和配置各种资源，提高生产力水平。则以下概念从管理学的角度可以这样理解：\n \n1.异步沟通：减少同步沟通而减少核心维护者的时间成本；\n2.信息沉淀：减少反复沟通而减少开发者搜寻解决方案的成本和维护者反复回答的成本；\n3.流程清晰：减少决策的心智成本同时降低响应时间从而使开发者有更好的体验；\n4.流程自动化：减少组织的制度成本而使整体项目可以更加顺滑的运转。"
    },
    {
        "question": "如何提交与Review PR？",
        "answer": "PR 的英文全称为\"Pull Request\"，意思是将开发者的仓库与维护者的仓库内容进行合并。PR协作的基本流程包括：\n1.开发者在本地仓库开发；\n2.本地仓库提交到GitHub个人仓库；\n3.从个人仓库向上游仓库发起PR；\n4.维护者Review PR；\n5.开发者与维护者讨论细节；\n6.开发者根据要求修改代码并进行新的提交；\n7.最终维护者合入PR。"
    },
    {
        "question": "运营开源社区的基本逻辑是什么？",
        "answer": "运营一个开源社区，可以遵循 “宽进严出” 的循环。宽进的意思是通过降低入门门槛，提高便利性以不断吸引开发者参与该项目。严出的意思是重视软件开发的品质，在技术管理方面项目运营者尤其要注重分工协作的管理。如此的“宽进严出”模式在商业设计和生态规划的前提下应该形成一套循环，把一个开源项目当作一个开放式的企业来运营。"
    },
    {
        "question": "如何评价和度量一个开源社区？",
        "answer": "评价一个开源项目，要从谁在看、谁在用、谁在贡献以及维护者行为这四大方面进行评测。例如针对维护者，项目Issue以及PR的响应时间及处理周期就可以反映维护者的积极程度。"
    },
    {
        "question": "Richard Stallman是谁",
        "answer": "理查德·斯托曼（Richard Stallman），美国程序员，开源界的开山鼻祖、精神奠基人。他发起自由软件运动，倡导软件用户能够对软件自由进行使用、学习、共享和修改，确保了这些软件被称作自由软件。斯托曼发起了GNU项目，并成立了自由软件基金会。他开发了GCC、GDB、GNU Emacs，同时编写了GNU通用公共许可协议。开源界如果只挑一人介绍，非Richard Stallman莫属。"
    },
    {
        "question": "Unix是什么",
        "answer": "Unix可是操作系统界的泰山北斗了！Unix是20世纪70年代初出现的一个操作系统，除了作为网络操作系统之外，还可以作为单机操作系统使用。Unix作为一种开发平台和台式操作系统获得了广泛使用，目前主要用于工程应用和科学计算等领域。但因为Unix本身是商用软件，价格贵的要死，在校学生用不起，加上又不开源，才导致了Linux等开源操作系统的诞生。"
    },
    {
        "question": "GNU是什么",
        "answer": "GNU可厉害啦！它是一个由Richard Stallman发起的自由的操作系统，其内容软件完全以GPL方式发布。GNU名字的意思是：GNU is not Unix(套娃警告），本身就有浓浓的反叛味道和程序员特有的幽默。因为GNU本身野心过于庞大，至今没有完成，不过GNU里边的很多子项目比如：GCC，Emacs、GDB等，在IT领域已经家喻户晓，节省了无数程序员们的时间，并培养了一大批狂热粉丝哦。"
    },
    {
        "question": "GCC是什么",
        "answer": "GCC是GNU计划下出来的“蛋”，本身是一系列语言的编译器。小源我在Linux上编程的时候，绝大部分用的都是GCC哦。别看GCC又笨种又难用，它在背后可是做了数不清的程序代码编译和优化工作，是我们程序员的得力助手。"
    },
    {
        "question": "Emacs是什么",
        "answer": "什么！你连Emacs都不知道！小源生气了！Emacs可是业界最著名的文本编辑器，由大神Richard Stallman和Guy Steele一起完成，并加入了GNU计划。据说挑起程序员之间战争的最好办法，就是大喊一声，“vim和Emacs哪个好？”。Emacs因为其匪夷所思的快捷键，强大到离谱的自定义功能和彪悍的性能为众多程序员喜爱，也培养了无数死忠粉。有人说Emacs是一种生活方式和哲学，可见Emacs的魅力。"
    },
    {
        "question": "vim是什么",
        "answer": "vim是和Emacs平起平坐的文本编辑器！堪称文本编辑器界的倚天剑与屠龙刀！在LInux文本环境进行远程访问的有限条件下，vim几乎是唯一的选择。vim如今更多成了一种文字编辑的特有交互方式，其独特的normal/edit切换模式已经在vs code这样新一代编辑器上通过插件”借尸还魂“。很多人说使用vim编辑文档可以产生”心流体验“，恰恰说明了vim的独特魅力。"
    },
    {
        "question": "gdb是什么",
        "answer": "恭喜你又发现了一个开源界的神器！gdb可以说是最让小源又爱又恨的东西了。GDB本身是一个程序调试器，但因为它是纯文字界面，得记住一堆调试命令，所以看上去十分难用！十分神秘！感觉用GDB的都是黑客里的黑客！但说归说，GDB本身功能还是十分强大的，调试服务器环境的程序，尤其是core dump的时候必不可少！"
    },
    {
        "question": "Linus Torvalds是谁",
        "answer": "林纳斯·托瓦兹（Linus Torvalds），Linux创世人，内核的最早作者，Linux内核的首要架构师与项目协调者，是当今世界最著名的电脑程序员、黑客之一。现受聘于开放源代码开发实验室（OSDL：Open Source Development Labs, Inc），全力开发Linux内核，以火爆的脾气、充满争议性的观点和对整个计算机世界杰出的贡献而闻名于世。"
    },
    {
        "question": "Linus怎么发明出Linux的",
        "answer": "Linux的诞生显得充满了偶然。林纳斯经常要用他的终端仿真器（Terminal Emulator）去访问大学主机上的新闻组和邮件，为了方便读写和下载文件，他自己编写了磁盘驱动程序和文件系统，这些在后来成为了Linux第一个内核的雏形。当时，他年仅21岁。 [1] \n在自由软件之父理查德·斯托曼（Richard Stallman）某些精神的感召下，林纳斯很快以Linux的名字把这款类Unix的操作系统加入到了自由软件基金（FSF）的GNU计划中，并通过GPL的通用性授权，允许用户销售、拷贝并且改动程序，但你必须将同样的自由传递下去，而且必须免费公开你修改后的代码。这说明，Linux并不是被刻意创造的，它完全是日积月累的结果，是经验、创意和一小段一小段代码的集合体。\n无疑，正是林纳斯的这一举措带给了Linux和他自己巨大的成功和极高的声誉。短短几年间，在Linux身边已经聚集了成千上万的狂热分子，大家不计得失的为Linux增补、修改，并随之将开源运动的自由主义精神传扬下去，人们几乎像看待神明一样对林纳斯顶礼膜拜。"
    },
    {
        "question": "Linus有哪些趣事",
        "answer": "Linus与妻子托芙（Tove，芬兰前女子空手道冠军）育有三个女孩。著有自传《乐者为王》。\n林纳斯说，Linux所取得的许多成功其实可以归结为他的缺点所致。“我很懒散，我喜欢授权给其他人。”就连Linux的企鹅形象标识也是林纳斯的妻子，曾获芬兰空手道冠军的托芙（Tove）想到的，因为林纳斯曾经在澳大利亚被一只企鹅咬过。"
    },
    {
        "question": "Linus有哪些精彩言论",
        "answer": "Linus简直堪称程序员界的特朗普，其个人暴论层出不穷，下面我们来感受一下Linus特有的语言魅力：\n\nTalk is cheap. Show me the code.\n空谈是不值钱的。给我看你的代码就好。\n\nMy name is Linus Torvalds and I am your god.\n我的名字是Linus Torvalds，我是你们的上帝。（在1998 Linux大会上的自我介绍）\n\nThose that can, do. Those that can’t, complain.\n有能力的人一直在干活，没能力的人一直在抱怨。\n\nI’m always right. This time I’m just even more right than usual.\n我就是永远正确。这次我比平时还要更正确一些。"
    },
    {
        "question": "POSIX是什么",
        "answer": "可移植操作系统接口（英语：Portable Operating System Interface，缩写为POSIX）是IEEE为要在各种UNIX操作系统上运行软件，而定义API的一系列互相关联的标准的总称，其正式称呼为IEEE Std 1003，而国际标准名称为ISO/IEC 9945。此标准源于一个大约开始于1985年的项目。POSIX这个名称是由理查德·斯托曼（RMS）应IEEE的要求而提议的一个易于记忆的名称。它基本上是Portable Operating System Interface（可移植操作系统接口）的缩写，而X则表明其对Unix API的传承。"
    },
    {
        "question": "MINIX是什么",
        "answer": "20世纪80年代，由于AT&T所有的UNIX版权的限制，荷兰的Andrew S. Tanenbaum教授决定写一个不包含任何AT&T源代码的UNIX系统，名为MINIX（即小型的UNIX），并开放全部源代码给大学教学和研究工作。Minix在历史上起到了引路人的作用，Linus Torvalds本人就深受Minix的启发写出了第一版本的Linux内核，但这种启发更多的是精神上的，Linux的设计与MInix的微内核设计理念截然相反，却采用了与UNIX相似的宏内核架构。"
    },
    {
        "question": "Linux的历史",
        "answer": "Linux操作系统的诞生、发展和成长过程始终依赖着五个重要支柱：Unix操作系统、MINIX操作系统、GNU计划、POSIX标准和Internet网络。\n20世纪80年代，计算机硬件的性能不断提高，PC的市场不断扩大，当时可供计算机选用的操作系统主要有Unix、DOS和MacOS这几种。Unix价格昂贵，不能运行于PC；DOS显得简陋，且源代码被软件厂商严格保密；MacOS是一种专门用于苹果计算机的操作系统。此时，计算机科学领域迫切需要一个更加完善、强大、廉价和完全开放的操作系统。由于供教学使用的典型操作系统很少，因此当时在荷兰当教授的美国人AndrewS.Tanenbaum编写了一个操作系统，名为MINIX，为了向学生讲述操作系统内部工作原理。MINIX虽然很好，但只是一个用于教学目的的简单操作系统，而不是一个强有力的实用操作系统，然而最大的好处就是公开源代码。全世界学计算机的学生都通过钻研MINIX源代码来了解电脑里运行的MINIX操作系统，芬兰赫尔辛基大学大学二年级的学生Linus Torvalds就是其中一个，在吸收了MINIX精华的基础上，Linus于1991年写出了属于自己的Linux操作系统，版本为Linux0.01，是Linux时代开始的标志。他利用Unix的核心，去除繁杂的核心程序，改写成适用于一般计算机的x86系统，并放在网络上供大家下载，1994年推出完整的核心Version1.0，至此，Linux逐渐成为功能完善、稳定的操作系统"
    },
    {
        "question": "ubuntu是什么",
        "answer": "Ubuntu是一个以桌面应用为主的Linux操作系统，其名称来自非洲南部祖鲁语或豪萨语的“ubuntu\"一词，意思是“人性”“我的存在是因为大家的存在\"，是非洲传统的一种价值观。Ubuntu基于Debian发行版和Gnome桌面环境，而从11.04版起，Ubuntu发行版放弃了Gnome桌面环境，改为Unity。从前人们认为Linux难以安装、难以使用，在Ubuntu出现后这些都成为了历史。Ubuntu也拥有庞大的社区力量，用户可以方便地从社区获得帮助。 [1]  自Ubuntu 18.04 LTS起，Ubuntu发行版又重新开始使用GNOME3桌面环境。 [2]"
    },
    {
        "question": "red hat是什么",
        "answer": "Red Hat（红帽）公司（NYSE：RHT）是一家开源解决方案供应商，也是标准普尔500指数成员。总部位于美国北卡罗来纳州的罗利市，截止2015年3月3日，共有80多个分公司。红帽公司为诸多重要IT技术如操作系统、存储、中间件、虚拟化和云计算提供关键任务的软件与服务。红帽的开放源码模式提供跨物理、虚拟和云端环境的企业运算解决方案，以帮助企业降低成本并提升效能、稳定性与安全性。红帽公司同时也为全球客户或通过领先合作伙伴为客户提供技术支持、培训和咨询服务。\n2018年10月29日，IBM宣布以340亿美元的价格收购Red Hat。"
    },
    {
        "question": "CentOS是什么",
        "answer": "CentOS 是一个基于Red Hat Linux 提供的可自由使用源代码的企业级Linux发行版本。每个版本的 CentOS都会获得十年的支持（通过安全更新方式）。新版本的 CentOS 大约每两年发行一次，而每个版本的 CentOS 会定期（大概每六个月）更新一次，以便支持新的硬件。这样，建立一个安全、低维护、稳定、高预测性、高重复性的 Linux 环境。CentOS是Community Enterprise Operating System的缩写。\nCentOS 是RHEL（Red Hat Enterprise Linux）源代码再编译的产物，而且在RHEL的基础上修正了不少已知的 Bug ，相对于其他 Linux 发行版，其稳定性值得信赖。"
    },
    {
        "question": "SUSE是什么",
        "answer": "SUSE(发音 /ˈsuːsə/)是指SUSE Linux ，是德国 SuSE Linux AG公司发行维护的Linux发行版，是属于此公司的注册商标。第一个版本出现在1994年年初。2004年这家公司被Novell公司收购。"
    },
    {
        "question": "git是什么",
        "answer": "Git --- The stupid content tracker, 傻瓜内容跟踪器，Linus大神的又一力作，是目前世界上使用最广泛的代码版本管理工具。小源当初可是被git里各种花里胡哨的概念和操作折磨惨了，但一旦弄懂了这些概念之后，马上就会觉得真香！实际上内核开发团队决定开始开发和使用 Git 来作为内核开发的版本控制系统的时候，世界开源社群的反对声音不少，最大的理由是 Git 太艰涩难懂，从 Git 的内部工作机制来说，的确是这样。但是随着开发的深入，Git 的正常使用都由一些友好的脚本命令来执行，使 Git 变得非常好用，即使是用来管理我们自己的开发项目，Git 都是一个友好，有力的工具。现在，越来越多的著名项目采用 Git 来管理项目开发。大神不愧是大神，思路永远超越这个时代！"
    },
    {
        "question": "github是什么",
        "answer": "GitHub 是一个面向开源及私有软件项目的托管平台，因为只支持 Git 作为唯一的版本库格式进行托管，故名 GitHub。\ngithub是全球最大的开源社区，上边聚集了全球各地的开发者，无数人在这里写代码、点赞、与世界另一端的开发者互动、甚至找到了真爱。。。github是开源文化在这个时代最好的体现之一。"
    },
    {
        "question": "Brian Behlendorf是谁",
        "answer": "Brian Behlendorf，美国程序员，开源领袖之一，闻名世界、诞生了众多明星项目的apache基金会的创始人。Behlendorf开发了全球最受欢迎、造福无数程序员的Apache Web Server，其具有无可匹敌的稳定性和安全性，让Apache Web Server至今仍在为许多大型IT项目使用。"
    },
    {
        "question": "apache软件基金会都有哪些开源项目",
        "answer": "apache软件基金会是世界上最著名的软件基金会，旗下诞生了无数著名项目，比较家喻户晓的有apache web server、tomcat、hadoop、Ant等等"
    },
    {
        "question": "apache web服务器是什么",
        "answer": "Apache(音译为阿帕奇)是世界使用排名第一的Web服务器软件。它可以运行在几乎所有广泛使用的计算机平台上，由于其跨平台和安全性被广泛使用，是最流行的Web服务器端软件之一。它快速、可靠并且可通过简单的API扩充，将Perl/Python等解释器编译到服务器中。"
    },
    {
        "question": "hadoop是什么",
        "answer": "Hadoop是一个由Apache基金会所开发的分布式系统基础架构。用户可以在不了解分布式底层细节的情况下，开发分布式程序。充分利用集群的威力进行高速运算和存储。Hadoop实现了一个分布式文件系统（Hadoop Distributed File System），其中一个组件是HDFS。HDFS有高容错性的特点，并且设计用来部署在低廉的（low-cost）硬件上；而且它提供高吞吐量（high throughput）来访问应用程序的数据，适合那些有着超大数据集（large data set）的应用程序。HDFS放宽了（relax）POSIX的要求，可以以流的形式访问（streaming access）文件系统中的数据。Hadoop的框架最核心的设计就是：HDFS和MapReduce。HDFS为海量的数据提供了存储，而MapReduce则为海量的数据提供了计算"
    },
    {
        "question": "Tomcat是什么",
        "answer": "Apache Tomcat是一个可以执行Java Servlet和JavaServer网页技术的开源软件。Apache和Tomcat是相对独立的，用户可以通过Apache访问Tomcat资源，反之亦然，二者可以在同一台服务器上。Apache Tomcat是由全世界各地的最佳开发者合力研发而来的，是一款非常优异的开源软件。\n用户群：Tomcat推动了很多不同行业的大型的、关键的Web应用程序的发展，其中包括ETrade、沃尔玛、天气频道以及EMC等。"
    },
    {
        "question": "Ant是什么",
        "answer": "Ant\nApache Ant是由Apache软件基金会所提供的一个基于Java的开发工具，它是将软件编译、测试、部署等步骤联系在一起加以自动化的一个工具，大多用于Java环境中的软件开发。\n用户群：大多数的Java设计都被用于管理大量信息流，例如纽约州就使用Apache Ant去管理美国最大的青年计划，每天可以实时更新超过25万学生的记录。"
    },
    {
        "question": "Guido van Rossum是谁",
        "answer": "吉多·范罗苏姆（Guido van Rossum） 是一名荷兰计算机程序员，鼎鼎大名的python创造者，同时以令程序员艳羡的发量而闻名。Python的诞生和发展，极大降低了软件开发的难度，并成为人工智能领域事实上的标准语言。在 Python 社区，吉多·范罗苏姆被人们认为是“仁慈的独裁者（BDFL）”。"
    },
    {
        "question": "python是什么",
        "answer": "Python是一种跨平台的计算机程序设计语言。 由Guido van Rossum开发。Python因为其易用性，差不多是目前全球使用人数最多的编程语言了，上到国家总理，下到平民百姓，人人都能写两行python。也因为此，python为开源运动间接做出了巨大的贡献。"
    },
    {
        "question": "Eric Steven Raymond是谁",
        "answer": "埃里克·史蒂文·雷蒙德，著名的计算机程序员，开源软件运动的旗手。他是INTERCAL编程语言的主要创作者之一，曾经为EMACS编辑器作出贡献。雷蒙德还是著名的Fetchmail程序的作者。他还编写了一个最初用于Linux内核设置的设置程序。在自由软件启蒙阶段，埃里克·雷蒙德以如椽之笔呼啸而出，其著名著作《大教堂和大集市》，在自由软件运动中的地位相当于基督教的《圣经》。"
    },
    {
        "question": "大教堂与集市是什么",
        "answer": "《大教堂与集市》是一本书，堪称开源运动的《圣经》，颠覆了传统的软件开发思路，影响了整个软件开发领域。作者Eric S. Raymond是开源运动的旗手、黑客文化第一理论家，他讲述了开源运动中惊心动魄的故事，提出了大量充满智慧的观念和经过检验的知识，给所有软件开发人员带来启迪。"
    },
    {
        "question": "黑客是什么",
        "answer": "这可以追溯到几十年前第一台分时小型电脑诞生，ARPAnet 实验也刚展开的年代，那时有一个由程序设计专家和网络名人所组成的，具有分享特点的文化社群。这种文化的成员创造了“hacker”这个名词。黑客们建立了 Internet。黑客们发明出了现在使用的 UNIX 操作系统。黑客们使 Usenet 运作起来，黑客们让 WWW 运转起来。如果你是这个文化的一部分，如果你对这种文化有所贡献，而且这个社群的其它成员也认识你并称你为hacker，那么你就是一位黑客。\n黑客精神并不仅仅局限在软件的黑客文化中。有人用黑客态度对待其它事情，如电子学和音乐 —— 事实上，你可以在任何最高级别的科学和艺术活动中发现它。精于软件的黑客赞赏这些在其他领域的同类并把他们也称作黑客 —— 有人宣称黑客天性是绝对独立于他们工作的特定领域的。但在这份文档中，我们将注意力集中在软件黑客的技术和态度，以及发明了“黑客”一词的以共享为特征的文化传统之上。\n有一群人大声嚷嚷着自己是黑客，但他们不是。他们（主要是正值青春的少年）是一些蓄意破坏计算机和电话系统的人。真正的黑客把这些人叫做“骇客”（cracker），并不屑与之为伍。多数真正的黑客认为骇客们又懒又不负责任，还没什么大本事。专门以破坏别人安全为目的的行为并不能使你成为一名黑客，正如用铁丝偷开走汽车并不能使你成为一个汽车工程师。不幸的是，很多记者和作家往往错把“骇客”当成黑客；这种做法一直使真正的黑客感到恼火。\n根本的区别是：黑客搞建设，骇客搞破坏。"
    },
    {
        "question": "黑客的态度是什么",
        "answer": "黑客们解决问题，建设事物，同时他们崇尚自由和无私的双向帮助。要被他人承认是一名黑客，你的行为得体现出你好像具备了这种态度一般。而要想做得好象你具备这种态度一般，你就得切切实实坚持它。但是如果你认为培养黑客态度只是一条在黑客文化圈中得到承认的路子，那就大错特错了。成为具备这些特质的这种人对你自己非常重要 —— 有助于你学习，及给你提供源源不断的动力。同所有创造性的艺术一样，成为大师的最有效方法就是模仿大师的精神 —— 不仅从智力上，也要从感情上进行模仿。"
    },
    {
        "question": "黑客文化是怎样的",
        "answer": "像大部分不涉及金钱的文化一样，黑客王国靠声誉运转。你设法解决有趣的问题，但它们到底多有趣，你的解法有多好，是要由那些和你具有同样技术水平的人或比你更厉害的人去评判的。\n相应地，当你在玩黑客游戏时，你得认识到你的分数主要靠其他黑客对你的技术的评价给出（这就是为什么只有在其它黑客称你为黑客时，你才算得上是一名黑客）。这个事实常会被黑客是一项孤独的工作这一印象所减弱；也会被另一个黑客文化的禁忌所减弱（现在逐渐减弱但仍强大）：拒绝承认自我或外部评估与一个人的动力有关系。\n特别地，黑客王国被人类学家们称为一种奉献文化。在这里你不是凭借你对别人的统治来建立地位和名望，也不是靠美貌，或拥有其他人想要的东西，而是靠你的奉献。尤其是奉献你的时间，你的创造和你的技术成果。"
    },
    {
        "question": "如何获得其他黑客的尊敬",
        "answer": "要获得其他黑客的尊敬，基本上有五种事情你可以干：\n写开放源代码软件\n帮助测试并调试开放源代码软件\n公布有用的信息\n为黑客文化本身服务\n帮助维护基础设施的运转"
    },
    {
        "question": "黑客和书呆子（Nerd）什么区别",
        "answer": "同流行的迷思相反，做一名黑客并不一定要你是个书呆子。但它确实有帮助，而且许多黑客事实上是书呆子。做一个深居简出的人有助于你集中精力进行十分重要的事情，如思考和编程。\n因此，很多黑客都愿意接受“书呆子”这个外号，更有甚者使用更尖刻的“geek（怪人）”一词并引以为豪—— 这是一种宣布他们独立于主流社会的声明方式。访问 The Geek Page 参加更多的讨论。\n如果你能集中足够的精力做好黑客工作同时还能有正常的生活，这很好。现在作到这一点比我在 1970 年代是新手的时候要容易的多；如今主流文化对技术怪人要友善的多。甚至有越来越多的人意识到黑客通常是很好的恋人和配偶的材料。\n如果你因为生活上不如意而迷上做黑客，那也没什么 —— 至少你不会分神了。或许以后你会找到自己的另一半。"
    },
    {
        "question": "黑客精神是什么",
        "answer": "作为一名黑客，你必须进入黑客精神之中。当你不在计算机边上时，你仍然有很多对黑客工作有帮助的事情可做。它们并不能替代真正的编程（没有什么能），但很多黑客都那么做，并感到它们与黑客的本质存在某些基本的联系。\n学会流畅地用母语写作。尽管程序员不能写好文章的错误看法相当普遍，但是有令人惊讶数目的黑客（包括所有我知道的最棒的）都是不错的作家。\n阅读科幻小说。参加科幻小说讨论会。（一个碰到黑客和未来会成为黑客的人的好方法）\n学禅，并且/或者练功习武。（精神修炼看来是惊人相似。）\n练就能分析音乐的听觉，学会鉴赏特别的音乐。学会玩某种乐器，或唱歌。\n提高对双关语、文字游戏的鉴赏能力。\n这些事情，你已经做的越多，你就越是天生做黑客的材料。至于为什么偏偏是这些事情，原因并不完全清楚，但它们都涉及用到左－右脑能力的综合，这似乎是关键所在（黑客们既需要清晰的逻辑思维，有时又需要偏离逻辑跳出问题的表象）。"
    },
    {
        "question": "开放源代码软件不会使程序员丢饭碗吗？",
        "answer": "看起来不太可能 —— 目前为止，开放源代码软件产业似乎创造了更多的就业机会而不是减少就业机会。如果写一个程序比起不写来是纯经济收益的话，那么在写完后，程序员应该得到报酬不管程序是否是开放源代码。并且，无论写出多么“免费自由”的软件，都存在更多对新的，定制的软件的需求。"
    },
    {
        "question": "Michael Tiemann是谁",
        "answer": "Michael Tiemann是真正的开放源码软件先驱。10年前，他编写了第一个本机码C++编译器和调试程序－－GNU C++编译器，首次为开放源码做出了重大贡献。他的早期工作导致了领先的开放源码技术的诞生以及第一个开放源码商业模式的出现。"
    },
    {
        "question": "Perl是什么",
        "answer": "Perl，一种功能丰富的计算机程序语言，运行在超过100种计算机平台上，适用广泛，从大型机到便携设备，从快速原型创建到大规模可扩展开发。"
    },
    {
        "question": "Perl和python相比有什么优缺点",
        "answer": "perl初始是Larry为了格式化处dao理文本而创建的，所以内建了正则 ；python内建一个复数型别，猜测Guido最初一定是为了数值计算而创建了python。因此perl擅长文字处理，python擅长数值处理。\nPerl 设 计之初就是为了方便编写复杂高效的系统脚本，它也是应该最为广泛的脚本编程语言。它在编程方面相当于瑞士军刀，对字符、文本文件处理能力很强，以前要求 shell+sed+awk+C才能完成的任务，只需perl脚本就可以完成了。而且应用领域一直在拓宽，支持面向对象程序设计。\nPython 面向对象的动态公共语言，适于脚本编程和快速开发，它最显著的特点是作为编译语言（如C）和脚本语言（如perl）之间的桥接语言，它具有的强大功能，可扩充性及面向对象的特征使其成为大规模应用程序开发工具。"
    },
    {
        "question": "Larry Wall是谁",
        "answer": "Larry Wall，美国程序员，开源界最有影响力的编程语言——Perl的创始人。Perl被称之为“一种拥有各种语言功能的梦幻脚本语言”、“Unix中的王牌工具”。"
    },
    {
        "question": "Paul Graham是谁",
        "answer": "保罗·格雷厄姆，英文名Paul Graham，美国著名程序员、风险投资家、博客和技术作家。他以早期对LISP的贡献而闻名，后来创办了世界闻名的创业投资公司Y Combinator，孵化出了Airbnb、Dropbox等著名互联网企业。保罗也是IT行业颇有影响力的书籍《黑客与画家》的作者。"
    },
    {
        "question": "黑客与画家是什么",
        "answer": "《黑客与画家：硅谷创业之父paul graham文集》是硅谷创业之父paul graham 的文集，主要介绍黑客即优秀程序员的爱好和动机，讨论黑客成长、黑客对世界的贡献以及编程语言和黑客工作方法等所有对计算机时代感兴趣的人的一些话题。书中的内容不但有助于了解计算机编程的本质、互联网行业的规则，还会帮助读者了解我们这个时代，迫使读者独立思考。"
    },
    {
        "question": "Y Combinator是什么",
        "answer": "Y Combinator由Paul Graham创立，成立于2005年，是美国著名创业孵化器，Y Combinator扶持初创企业并为其提供创业指南。\n截止2012年7月，共孵化380家创业公司，这些公司累计获得投资额超过10亿美元，估值已经100亿美元，其中云储存服务提供商Dropbox融资2.57亿美元，房屋短期租赁网站Airbnb融资1.2亿美元。2019年11月16日，胡润研究院发布《2019胡润全球独角兽活跃投资机构百强榜》，Y Combinator排名第18位。"
    },
    {
        "question": "Hacker News是什么",
        "answer": "Hacker News是Y Cominator旗下的新闻聚合网站，是全球黑客们在一块讨论各类科技新闻的集散地，上面潜伏着各路大神，时不时就有人蹦出来发表一大篇高质量评论。泡Hacker News是小源每天必备的活动。"
    },
    {
        "question": "dropbox是什么",
        "answer": "Dropbox是一款免费网络文件同步工具，是Dropbox公司运行的在线存储服务，通过云计算实现因特网上的文件同步，用户可以存储并共享文件和文件夹。Dropbox由Drew Houston和Arash Ferdowsi在2007年联合创立，创始资金来自Y Combinator。2018年3月12日，Dropbox宣布，将首次公开招股发行价区间定为每股16美元至18美元，最高融资6.48亿美元。 [2]  2018年12月，世界品牌实验室发布《2018世界品牌500强》榜单，Dropbox排名第444。"
    },
    {
        "question": "陆首群是谁",
        "answer": "陆首群，中国开源软件联盟名誉主席。联盟专家委员会主任委员、中国工业经济联合会副会长，中国开源软件推进联盟名誉主席，曾任国务院信息化联席会议办公室常务副主任、吉通公司董事长，主持首都电子商务工程的研究与实践， 发表了许多有影响的网络与信息化前 陆首群沿技术、电子商务、电子政务方面的论文。"
    },
    {
        "question": "airbnb是什么",
        "answer": "Airbnb是AirBed and Breakfast（\"Air-b-n-b\"）的缩写，中文名：爱彼迎 [1]  。爱彼迎是一家联系旅游人士和家有空房出租的房主的服务型网站，它可以为用户提供多样的住宿信息。\nAirbnb成立于2008年8月，总部设在美国加州旧金山市。Airbnb是一个旅行房屋租赁社区，用户可通过网络或手机应用程序发布、搜索度假房屋租赁信息并完成在线预定程序。据官网显示 [2]  以及媒体报道 [3]  ，其社区平台在191个国家、65,000个城市为旅行者们提供数以百万计的独特入住选择，不管是公寓、别墅、城堡还是树屋。Airbnb被时代周刊称为“住房中的EBay”。"
    },
    {
        "question": "Miguel de Icaza是谁",
        "answer": "Miguel de Icaza，墨西哥-美国籍程序员，Linux上最著名的桌面系统——GNOME的发明者，为Linux在全球的推广做出巨大贡献。Miguel同时也是著名的移动跨平台开发框架——Xamarin的创始人。"
    },
    {
        "question": "GNOME是什么",
        "answer": "GNOME是一套纯粹自由的计算机软件，运行在操作系统上，提供图形桌面环境。\nGNOME 包含了 Panel （用来启动此程式和显示目前的状态）、桌面 （应用程式和资料放置的地方）及一系列的标准桌面工具和应用程式，并且能让各个应用程式都能正常地运作。\nGNOME是Linux操作系统上最常用的图形桌面环境之一。"
    },
    {
        "question": "GPL是什么？",
        "answer": "这个难不倒小源， GNU通用公共许可协议（英语：GNU  General Public License，缩写GNU GPL 或  GPL），是被广泛使用的自由软件许可证，给予了终端用户运行、学习、共享和修改软件的自由。GPL是第一个普遍使用的Copyleft许可证。"
    },
    {
        "question": "有哪些开源项目采用GPL协议？",
        "answer": "我们熟知的Linux就是采用的GPL协议，另外MySQL在收购前也是使用GPL许可分发。"
    },
    {
        "question": "自由软件是不是就意味着要用GPL？",
        "answer": "小源偷偷告诉您，并非如此哦，还有许多其他的自由软件许可证可以选择，比如。为用户提供某些具体自由的许可证就是一个自由软件。"
    },
    {
        "question": "所有GNU软件都使用GNU GPL许可证吗",
        "answer": "大多数GNU软件包使用GNU  GPL，但是也有一些GNU程序（或部分程序）使用更宽泛的许可证，比如LGPL。"
    },
    {
        "question": "GPL是否要求修改版的源代码公开？",
        "answer": "GPL不要求您发布您的修改版或者任何一部分修改版。但是如果您以某种方式把修改版向公众发布，GPL就要求您向用户提供修改版的源代码。不过通过“软件即服务（SaaS）”的模式，即在后端服务器部署GPL开源软件、用户通过网络远程接入服务就能规避GPL协议的约束。"
    },
    {
        "question": "GPL是否允许使用保密协议发行软件？",
        "answer": "不允许的哦，一旦采用了GPL协议，无论是否修改软件，都必须使用GPL所述的全部自由，不能带有任何附加条款。"
    },
    {
        "question": "GPL可以不用于软件吗？",
        "answer": "您可以将 GPL  用于任何作品，只要能说清楚什么是该作品的“源代码”就行。GPL  将源代码定义为修改作品的首选形式。不过对于手册和教材，或者任何用于教育的一般性作品，推荐您使用 GFDL 而不是 GPL。"
    },
    {
        "question": "为什么GPL手册不用GPL？",
        "answer": "GPL 可以用于手册，但是 GNU  自由文档许可证（GFDL）更适合手册。GPL 本来就是为程序设计的，而GFDL主要用于文字作品。"
    },
    {
        "question": "谁可以进行GPL执法？",
        "answer": "由于 GPL 是一个版权许可证，所以软件的版权持有者是 GPL  的权益维护者。如果您发现有人违反了 GPL，那么您可以通知该 GPL 软件的开发者。"
    },
    {
        "question": "GPL目前有哪些版本？",
        "answer": "小源经过搜索得知：GPL目前有三个版本。GPLv1发布于1989年2月25日；GPLv2发布于1991年6月，增加了“GPLv2  or later”的声明。GPLv3发布于2007年6月29日。"
    },
    {
        "question": "GPLv3和GPLv2兼容吗？",
        "answer": "是不兼容的哦，从 GPLv2 到  GPLv3，很多要求都变了，就是说 GPLv2 里的一些确切需求在 GPLv3 没有，反过来也一样。比如，GPLv3 的终止条款比 GPLv2  要更为宽松，因此它们和 GPLv2 的终止条款不同。不过，如果您按照“GPLv2 or later”发布的就和GPLv3兼容。"
    },
    {
        "question": "GPLv3中“你”的概念和Apache许可证2。0中“法律主体”有何异同？",
        "answer": "它们实际上是等效的。Apache 许可证 2.0 版的“法律主体”的定义在各种法律协议中是非常标准的。"
    },
    {
        "question": "什么是LGPL？",
        "answer": "GNU宽通用公共许可证（英语：GNU Lesser General Public License，简称：LGPL）是由自由软件基金会公布的自由软件许可证。它允许连接非自由的模块。"
    },
    {
        "question": "GPL和LGPL有什么区别？",
        "answer": "LGPL是GPL的一个为主要为类库使用设计的开源协议。和GPL要求任何使用/修改/衍生之GPL类库的的软件必须采用GPL协议不同。LGPL  允许商业软件通过类库引用(link)方式使用LGPL类库而不需要开源商业软件的代码。"
    },
    {
        "question": "什么是AGPL？",
        "answer": "GNU Affero通用公共许可协议（英语：GNU Affero  General Public License，简称GNU AGPL）。"
    },
    {
        "question": "AGPL和GPL有什么区别？",
        "answer": "GNU  Affero通用公共许可协议(AGPL)是改自GNU通用公共许可协议(GPL)，并加入额外条款，其目的是为了Copyleft条款应用于在网络上运行的应用程序（如Web应用），从而避免有人以应用服务提供商方式逃避GNU通用公共许可协议(GPL)。"
    },
    {
        "question": "什么是BSD？",
        "answer": "BSD 许可协议（英语：Berkeley Software Distribution license），是自由软件中使用最广泛的许可协议之一。BSD 就是遵照这个许可证来发布，也因此而得名 BSD 许可协议。"
    },
    {
        "question": "使用BSD许可证的软件或项目有哪些？",
        "answer": "可多啦，比如Chromium、D3.js、GO、Pandas、React、Tor、Javacript  V8引擎等等。"
    },
    {
        "question": "目前主要的宽松式许可证有哪些？",
        "answer": "MIT许可证、Apache许可证、BSD许可证、Mulan许可证是目前主要的宽松式(Permissive)许可证。"
    },
    {
        "question": "什么是EPL？",
        "answer": "Eclipse公共许可证（简称EPL）是一种开源软件发布许可证，由Eclipse基金会应用于名下的集成开发环境Eclipse上。EPL替代了原先的通用公共许可证（Common  Public License，简称CPL），在其基础上删除了专利相关诉讼的限制条款。"
    },
    {
        "question": "什么是木兰宽松许可证",
        "answer": "“木兰宽松许可证”由中国开源生态圈联合编制。木兰系列开源许可证的《木兰宽松许可证，第1版》（MulanPSL v1）于2019年8月5日在中国开源云联盟官网正式上线。许可证第2版（MulanPSL v2）于2020年2月14日经过严格审批，正式通过开源促进会（OSI）认证，被批准为国际类别开源许可证（International licenses）。更多详情可访问https://license.coscl.org.cn/MulanPSL/"
    },
    {
        "question": "木兰宽松许可证有什么特点",
        "answer": "快拿出小本本记下来:\n1.采用中英文表达，中英文表述具有同等法律效力，简化了中国使用者进行法律解释时的复杂度；\n2.针对现有诉讼问题更清晰地明确版权、专利和商标授权，提供更完善的法律保护；\n3.遵从表述简洁原则，去除冗余，条款简洁，容易理解，兼容性好。"
    },
    {
        "question": "MulanPSL的特点",
        "answer": "为方便开源界的小伙伴们更好地使用“木兰”，小源梳理了MulanPSL的特点:\n1.许可证内容以中英文双语表述，中英文版本具有同等法律效力，方便更多的开源参与者阅读使用，简化了中国使用者进行法律解释时的复杂度。\n2.许可证明确授予用户永久性、全球性、免费的、非独占的、不可撤销的版权和专利许可，并针对目前专利联盟存在的互诉漏洞问题，明确规定禁止“贡献者”或“关联实体”直接或间接地（通过代理、专利被许可人或受让人）进行专利诉讼或其他维权行动，否则终止专利授权。\n3.许可证明确不提供对“贡献者”的商品名称、商标、服务标志等的商标许可，保护“贡献者”的切身利益。\n4.许可证经技术专家和法律专家共同修订，在明确合同双方行为约束的前提下尽可能地精简条款、优化表述，降低产生法律纠纷的风险。"
    },
    {
        "question": "木兰宽松许可证与业界主流许可证的主要异同是什么？",
        "answer": "木兰宽松许可证(Mulan  PSL)和BSD 3-clause License以及Apache License  V2.0在声明义务、专利许可、对用户专利维权限制、版权许可及语言上均有差异；在商标许可上无差异。更多详情查看表格https://license.coscl.org.cn/faq.html"
    },
    {
        "question": "木兰宽松许可证和业界主流许可证兼容吗",
        "answer": "兼容这个问题嘛，我想想哈。许可证的兼容是有方向的，A许可证兼容B许可证，但B许可证不一定兼容A许可证。木兰宽松许可证(Mulan  PSL)兼容性很好。BSD、MIT类宽松许可证兼容Mulan PSL；Mulan PSL兼容Apache License  v2.0、L/GPLv2、L/GPLv3等许可证。也就是说，许可在BSD、MIT类许可证下的代码可以贡献到Mulan PSL的项目中，许可在Mulan  PSL下的代码可以贡献到Apache License V2.0、L/GPLv2或L/GPLv3等的项目中。"
    },
    {
        "question": "木兰宽松许可证第2版有哪些改进",
        "answer": "相比第1版改进了不少哦:\n1.增加“语言”条款，声明了“本许可证”以中英文双语表述，中英文版本具有同等法律效力。如果中英文版本任何冲突不一致，以中文版为准。\n2.为适应一些国家对担保免责条款的显著性要求，MulanPSL v2 在英文版中采用大写突显担保免责条款。\n3.为了减少英文表述的产生的歧义问题和语言习惯问题，MulanPSL v2 修订了“软件”（software）和“关联实体”（Affiliates）的定义，以及“授予专利许可”（Grant of Patent License）条款的相关表述。"
    },
    {
        "question": "木兰开源社区是什么",
        "answer": "木兰开源社区（https://www.mulanos.cn/）是  2018  年国家重点研发计划“云计算和大数据开源社区生态系统”项目重点成果，由中国电子技术标准化研究院牵头，联合北京大学、国防科大、联想、腾讯云，以及开源中国、北航、中科院软件所、西南大学、华为、阿里云、浪潮、新华三、中电标协、中科院东莞育成中心、湖南酷得共 16 家单位共同承担。您想加入吗？快快访问https://www.mulanos.cn/！"
    },
    {
        "question": "木兰协议的前景怎么样？",
        "answer": "小源我很看好哦，木兰协议能助力国内开源社区的发展，基于国家重点专项构建的平台（  TosCode ）将推荐用户优先使用木兰协议。国内主流开源代码托管平台开源中国码云（ Gitee ）、确实（ Trustie ）、鹏城汇智（ ihub  ）等率先支持木兰协议,中国开源基金会在其支持项目中也将优先采用。期待在您的开源项目中也能将木兰协议用起来！"
    },
    {
        "question": "木兰协议的起源",
        "answer": "您的问题难不倒小源！\"时势造就英雄\"，当前，伴随着国内开源文化的不断兴起，开源产业逐渐完善，一方面国内开发者和企业参与开源的热情不断高涨，而另一方面由于开源领域存在的许可证版本众多、语言理解存在偏差、涉及的法律问题晦涩难懂以及由此带来的知识产权问题，尤其是开源软件合规性操作与专利保护，给国内开源产业参与者带来诸多不便。于是，\"站在巨人肩膀上\"的简洁易读、商业友好的木兰协议应运而生。"
    },
    {
        "question": "木兰宽松许可证主要编制单位有哪些？",
        "answer": "除了小源所在的开源社，还有北京大学、中国电子技术标准化研究院、西南大学、中国科学院软件所、中移（苏州）软件技术有限公司、华为技术有限公司、华云数据集团有限公司、普元信息技术股份有限公司、中兴通讯股份有限公司、中标软件有限公司，以及为推动协议编制和OSI认证而贡献过的所有开源人士。"
    },
    {
        "question": "哪些项目采用木兰开源协议？",
        "answer": "可多啦，比如华中科技大学的PostMan和DHL,上海交通大学的SGX-Migration和HCloud可信云际计算平台，华云网际的FusionStack  SimpleDFS，中科院云计算育成中心的G-Cloud等都采用木兰宽松许可证。期待在您的开源项目中也采用木兰协议哦！"
    },
    {
        "question": "什么是MIT协议？",
        "answer": "MIT协议就是大名鼎鼎的开源软件许可协议The MIT License，又称MIT许可证。与其他常见的软件授权条款（如GPL、LGPL、BSD）相比，MIT是相对宽松的软件授权条款。协议内容可以这么理解：\n版权是我XXX的，源自XXXX这一年！\n我授权任何人，可以干任何事，包括卖拷贝！\n但是，你必须：\n保留我的版权和许可！\n这软件就这样的！爱用不用，出了事别找我！"
    },
    {
        "question": "怎么使用基于MIT协议的开源项目",
        "answer": "小源提醒您，使用一个用了MIT协议的源代码，您只需要保留人家的版权和许可证信息。也就是说要包含LICENSE文件，这个文件有完整的MIT许可证，其中也会有作者的版权信息。另外，MIT协议并不要求使用者公开源码。"
    },
    {
        "question": "开源项目中如何使用MIT协议？",
        "answer": "通常应该这么做：\n1.在一级目录下，给出一个LICENSE（或COPYING）文件，里面就是这个许可证的全文。\n2.在所有的源码头部，说明版权，说明许可。"
    },
    {
        "question": "MIT协议允许修改吗？",
        "answer": "当然可以，小源偷偷地告诉您：MIT允许您干任何事。MIT协议和其他协议的兼容性很强（不过是单向兼容），比如，完全可以把一个MIT协议的软件改为GPL的，但一个GPL的可改不回MIT的。"
    },
    {
        "question": "Apache许可证是什么？",
        "answer": "Apache  Licence是著名的非盈利开源组织Apache采用的协议。鼓励代码共享和尊重原作者的著作权，允许代码修改，再发布（作为开源或商业软件）。目前Apache  2.0已被众多开源项目广泛采用，Apache 2.0 许可证是 ASF（Apache Software  Foundation，Apache软件基金会）在2004年发布的，以帮助 ASF  实现其目标：“通过开源软件开发协作，提供可靠且长久不衰的软件产品”。ASF 出品的软件一般都采用Apache 2.0 许可证。当然，非 ASF 的项目也可以使用，Apache  许可证设计出来是供所有人使用的。"
    },
    {
        "question": "一句话解释Apache许可证",
        "answer": "如果您只想记一句话，小源悄悄地告诉您，那就是“要留我的名，改哪了您得说！”"
    },
    {
        "question": "Apache协议内容有哪些？",
        "answer": "尽管Apache协议的内容有很多，从最精简的角度讲，Apache  协议想说的是：你可以随便用！不会因版权和专利找你麻烦的！不能用我的商标！你分发本作品或衍生作品时，可以不再提供源码！当然，还对分发做了些规定，您想知道吗？"
    },
    {
        "question": "Apache协议对分发做了哪些要求？",
        "answer": "1、带上本许可证！\n2、保留本软件的所有版权、专利等说明！\n3、你改过的文件，你得说改了哪！\n4、NOTICE文件中的信息得保留！\n5、在遵循本许可证的条件下，你可以再许可！\n本作品就这样了，我不会负任何责任的！你想负责你可以负，但别拉上我！"
    },
    {
        "question": "ASF是什么？",
        "answer": "Apache Software Foundation（简称 ASF，Apache\n基金会），它成立于 1999 年，全球无数的开源项目均是由此兴起及壮大。"
    },
    {
        "question": "Apache 基金会现状如何？",
        "answer": "在过去的 20 年里，Apache  基金会已经从最初的 21 位创始人发展到了 800 多位 Apache 会员，项目提交数量稳步增长，现在已有近 8000 名提交者，这些 Apache  项目中的提交者已经发布了超过 2 亿行代码。"
    },
    {
        "question": "Apache 项目社区在中国的发展现状",
        "answer": "中国的技术专家和公司正在迅速地采用和参与Apache开源技术，不仅帮助 Apache 建立新项目，而且改善开源本身的工作方式，来自\n中国的整个 Apache 新项目的发展也让人印象深刻。Apache项目社区目前有 10 个源于中国的顶级项目，其中几个项目非常有名，现在还有 9 个来自中国的 Apache 孵化器项目正在努力成为顶级项目。重要的是，这些 Apache 项目涵盖了从大数据、流媒体到物联网，再到所有涉及云管理的技术领域。"
    },
    {
        "question": "中国有哪些Apache顶级项目？",
        "answer": "这个难不倒小源，最近几年， 中国涌现出的优秀项目有CarbonData、Dubbo、Eagle、Griffin、HAWQ、Kylin、RocketMQ、ServiceComb、ShardingSphere、Skywalking。"
    },
    {
        "question": "使用Apache协议的是自由软件吗？",
        "answer": "采用 Apache  2.0协议的也是自由软件，只不过，自由软件并不等同于 copyleft。此处应有图：https://mmbiz.qpic.cn/mmbiz_jpg/icavwoK66Ip5IJYZtzHUtr2oibsteWyUicDe89ic0k0FKVRpog51u8l4Y4pexGXIzx62w8th541ibHz0G0ic4ESLdyqQ/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1"
    },
    {
        "question": "开放源代码促进会是什么？",
        "answer": "开放源代码促进会 OSI （ Open Source Initiative ），维护着“开源”（ Open Source ）软件的定义以及其认可的许可证列表。OSI 的目标是促进和保护开源软件及开源社区，致力于提高人们对开源软件的认识和采用。\n\nOSI 于1998年2月成立，创始人为 Bruce Perens 和 Eric S. Raymond 。"
    },
    {
        "question": "源码可得”就是开源吗？",
        "answer": "小源是这么看的，一个软件，它的源码可以在互联网上免费得到，不代表他就是开源软件或者自由软件，这种只能叫  source available ，可翻译为“源码可得”、“源码可用”、“有源软件”等等。"
    },
    {
        "question": "什么是开源软件？",
        "answer": "开源软件，就是必须提供源代码，允许修改和再发布，允许别人销售或者免费送出，不区别对待任何人和任何领域，不以各种不一致的方法限制他人使用、复制、修改和再发布。"
    },
    {
        "question": "什么是copyleft？",
        "answer": "copyleft  软件天然是一个自由软件，但比自由软件多了一项对用户的要求，就是 copyleft 许可证要求修改后的 copyleft 软件，也必须以 copyleft  软件发布。这就是人们常说的“传染”，您用了一个开源软件，您也必须把自己的修改和补充都开源出来。代表有 Linux （采用 GPL 许可证）。"
    },
    {
        "question": "什么是copyrigh？",
        "answer": "copyright即版权，亦称著作权，是指作者对其作品的权利。从字面上看，  copyright 尤其关注copy的权利（ right  ），一个软件卖给某用户后，除非作者同意，用户是不能随意复制（比如说让您在这个机器上用，您就不能在另外一台机器上再装一套）的，除此之外，除非作者许可，也不能修改、不能对外发布等等。"
    },
    {
        "question": "BSD与专属软件许可证的兼容性",
        "answer": "遵守BSD License的软件，允许用作商业用途，甚至可按照专属许可证进行再发布。比较著名的例子如微软产品中引入了BSD网络部分的代码，Mac OS X中使用了不少FreeBSD的组件。"
    },
    {
        "question": "BSD与其他自由软件许可证兼容吗？",
        "answer": "BSD许可证并不允许受让方将其删除或替换为其他许可证。"
    },
    {
        "question": "BSD许可证源自哪里？",
        "answer": "BSD 许可证源自加州大学伯克利分校。"
    },
    {
        "question": "EPL是什么？",
        "answer": "Eclipse公共许可证（简称EPL）是一种开源软件发布许可证，由Eclipse基金会应用于名下的集成开发环境Eclipse上。"
    },
    {
        "question": "EPL与GPL兼容吗？",
        "answer": "EPL 1.0版无法与GNU GPL相兼容，因而若有一作品为GPL授权作品和EPL授权作品混合而得，则该程序无从合法传播。"
    },
    {
        "question": "MPL是什么？",
        "answer": "Mozilla公共许可证（英语：Mozilla Public License，简称MPL）是个自由、开源、详细的软件许可证，由Mozilla基金会开发并维护。该协议融合了BSD许可证和GNU通用公共许可协议的特性，追求平衡专有软件和开源软件开发者之间的顾虑。"
    },
    {
        "question": "基于MPL的协议有哪些？",
        "answer": "AROS公共许可证1.1、Celtx公共许可证、通用开发与散布许可证、Common Public Attribution License、Erlang公共许可证1.1、gSOAP公共许可证、OpenMRS公共许可证、OpenELIS公共许可证、SugarCRM公共许可证、MonetDB公共许可证等。"
    },
    {
        "question": "什么是APSL？",
        "answer": "苹果公共源代码许可证（Apple Public Source License，缩写为APSL）是一个开源和自由软件许可证，它随着Apple的Darwin操作系统的而发布。"
    },
    {
        "question": "什么是PHP许可证？",
        "answer": "PHP许可证（PHP License）是指在PHP语言发布时所使用的软件许可证。根据自由软件基金会的分类，PHP许可证属于与GPL不兼容的自由软件许可证，因为许可证限制了对“PHP”一词的使用。"
    },
    {
        "question": "什么是PSFL？",
        "answer": "Python软件基金会许可证（英语：Python Software Foundation License，PSFL）是一种BSD类型的，与GNU通用公共许可证（GPL）相兼容的宽松自由软件许可证。它的主要用途是分发Python项目软件。"
    },
    {
        "question": "什么是WTFPL？",
        "answer": "WTFPL（Do What The Fuck You Want To Public License，中文译名：你他妈的想干嘛就干嘛公共许可证）是一种不太常用的、极度放任的自由软件许可证。它的条款基本等同于贡献到公有领域。"
    },
    {
        "question": "什么是CDDL许可证？",
        "answer": "通用开发与散布许可证（英语：Common Development and Distribution License，简称CDDL） 是一个自由软件许可，由Sun微系统提出，以Mozilla公共许可证（MPL）1.1版本为基础。"
    },
    {
        "question": "什么是AFL？",
        "answer": "学术自由许可协议（英语：Academic Free License，缩写：AFL）是一个宽松的自由软件许可协议条款，由劳伦斯·E·罗森在2002年所撰写，他是开放源代码促进会的法律总顾问。"
    },
    {
        "question": "什么是APL？",
        "answer": "自适应公共许可证（英语：Adaptive Public License，简称APL）是维多利亚大学的开源许可证。这是一个薄弱的copyleft，可调整的模板许可证，已被开源倡议批准。"
    },
    {
        "question": "什么是AAL？",
        "answer": "归属保证许可证（英语：Attribution Assurance License，简称AAL），最初由Edwin A. Suominen撰写，旨在获得其PRIVARIA安全网络软件的许可（请参见www.privaria.org）。作者（不是律师）将此许可模板连同其内容或法律效力的任何保证或责任完全声明为公有领域。您可以自由使用或修改语言，但后果自负。"
    },
    {
        "question": "什么是Boost许可证？",
        "answer": "Boost软件协议（Boost Software License）是一个由Boost C++ Libraries使用的开源协议。这也是一个大量开源C++项目使用的协议。这是一个类似于BSD许可证和MIT许可证的宽松协议。"
    },
    {
        "question": "什么是CPL？",
        "answer": "通用公共许可证（英语：Common Public License，简称CPL）是IBM发行的免费软件/开源软件许可证。CPL的既定目标是支持和鼓励开源协作开发，同时仍保留将CPL内容与根据其他许可（包括许多专有许可）许可的软件一起使用的能力。 Eclipse Public License（EPL）由CPL的稍微修改后的版本组成。"
    },
    {
        "question": "什么是ECL？",
        "answer": "教育社区许可证（英语： Educational Community License ，简称ECL）是基于Apache许可证（2.0版）的免费开放源代码许可证，创建时考虑了学术界的特定需求。"
    },
    {
        "question": "什么是EFL？",
        "answer": "埃菲尔论坛许可证（英语：Eiffel Forum License，简称EFL）是由NICE（非营利国际埃菲尔财团）编写的免费软件许可证。该许可证的第2版是2008年的最新版本，是第一个与GPL兼容的版本。EFLv2已由OSI批准，并已由FSF批准为免费软件许可证。"
    },
    {
        "question": "什么是EUPL？",
        "answer": "欧盟公共许可证 (英语：European Union Public Licence，简称EUPL)是由欧盟委员会创建并批准的免费软件许可证。该许可证以欧盟的23种正式语言提供。所有语言版本均具有相同的有效性。其最新版本EUPL v1.2已于2017年5月发布。"
    },
    {
        "question": "EUPL与GPL和其他F / OSS许可证兼容吗？",
        "answer": "当然。 EUPL包含唯一的兼容性条款，并提供了兼容的Copyleft许可证列表， GPL是其中之一。 例如，在CIRCA（已在EUPL下分发的应用程序）的情况下， 开发人员可以将Circabc软件与GPL组件合并，然后可以在GPL下许可新的衍生作品（另一个项目，使用新名称）。根据GPL，不允许“重新许可” CIRCA。开发人员还可以将CIRCA集成到现有的GPL工作中，例如“ MY-GPL-PROGRAM”，并继续根据最初选择的GPL许可来许可这项改进的工作。"
    },
    {
        "question": "谁可以使用EUPL？",
        "answer": "尽管欧洲机构软件的潜在用户主要是其他公共部门管理人员，但EUPL中没有阻止其广泛使用的内容。拥有某软件版权的任何人都可以使用EUPL。它可以用各种语言成为整个欧洲的适当法律互操作性工具。 但是，EUPL的目的不是与其他许可证竞争。它可能主要由欧洲或国家的公共管理机构使用，它们需要通用的许可工具来相互交流或共享软件和知识。"
    },
    {
        "question": "EUPL许可证的目标是什么？",
        "answer": "欧盟委员会的主要目标是根据欧洲法律要求，在自由/开源许可下，广泛分发和促进自身和其他欧洲机构拥有的软件的使用。 但是，EUPL是中性的，因此可以考虑更广泛的使用。 此外，即使在第三方改进后，软件的分发也应避免专有软件的使用（因此，EUPL是“ copyleft”许可）"
    },
    {
        "question": "为什么选择EUPL？",
        "answer": "在详细的法律研究中，没有发现现有的许可证符合欧盟委员会的要求： 许可证在所有欧盟语言中应具有同等法律价值； 有关知识产权的术语必须符合欧洲法律的要求； 为了在所有会员国中均有效，责任或保证的限制必须精确，并且不像大多数考虑到美国法律环境而设计的许可那样“在法律允许的范围内”制定。"
    },
    {
        "question": "什么是Fair License？",
        "answer": "Fair License是一种简短，简单且允许的免费软件许可证，与GNU通用公共许可证兼容。它的文本仅由一个句子和一个免责声明组成，因此是开放源代码计划批准的最短许可证。也可以将“Fair License”用于图像，书籍，音乐或更一般地用于各种媒体。"
    },
    {
        "question": "什么是ISC许可证？",
        "answer": "ISC许可证是一种开放源代码许可证，在功能上与两句版的BSD许可证相同。这份许可证是由互联网系统协会（ISC，Internet Systems Consortium）所发明，在ISC发布软件时所使用的。不过有许多开放源代码团体也使用，其中一个有名的例子是OpenBSD对于新写的代码都会尽量使用ISC许可证。"
    },
    {
        "question": "什么是OSL？",
        "answer": "开放软件许可证（英语：Open Software License，简称OSL）[是Lawrence Rosen创建的软件许可证。开源倡议（OSI）已将其认证为开源许可证，但是Debian项目认为1.1 版本与DFSG不兼容。 OSL是一个copyleft许可证，其终止条款是通过提起诉讼指控专利侵权而触发的。"
    },
    {
        "question": "什么是zlib许可证？",
        "answer": "zlib许可证是一个自由软件授权许可证，它定义了 Zlib 软件库可以分发的条款。它也被许多其它免费软件包使用。libpng库使用相似的许可证，有时可互换称为zilb/libpng许可证。它与GNU通用公共许可证兼容。类似于BSD许可，除了必须注明来源，还应在发布的软件中保留此授权协议的副本。"
    },
    {
        "question": "新蜂商城",
        "answer": "前段时间有一个叫做“新蜂商城”（简称“新蜂”）的开源项目有点新闻，它使用了MIT许可证，其作者被人告知说，哎，你的开源软件被人在网上卖哎，你不管管吗？\n作者一看，还真是，有up主在b站上卖，有人在闲鱼上卖，虽然卖的也不贵，有卖300的，有卖几十的，但一眼望过去，很显然卖的就是自己的“新蜂”嘛！\n\n其实这应该是预料中的事。MIT许可证，允许别人卖你的源码！"
    },
    {
        "question": "什么许可证比较流行",
        "answer": "MIT 许可证是使用开源软件中最流行的许可证之一。MIT 许可证、Apache 许可证和 BSD 许可证是目前主要的宽松式（Permissive）许可证，"
    },
    {
        "question": "最早的许可证是什么",
        "answer": "X 视窗系统最初使用的是专有的许可证，但根据 Keith Packard 的说法，我们现今所指的开源许可证是直到1985年才添加到 X 视窗第6版中的。(“现今所指”是因为“开源”这一术语直到1998年才被 Christine Peterson 所提出。）"
    },
    {
        "question": "什么是BSD许可证",
        "answer": "BSD是\"Berkeley Software Distribution\"的缩写，意思是\"伯克利软件发行版\"。是一个给于使用者很大自由的协议。可以将修改后的代码作为开源或者专有软件再发布。  如果再发布的产品中包含源代码，则在源代码中必须带有原来代码中的BSD协议。\n如果再发布的只是二进制类库/软件，则需要在类库/软件的文档和版权声明中包含原来代码中的BSD协议。"
    },
    {
        "question": "什么是开源协议",
        "answer": "项目中声明的 License，也就是开源协议。当你去 GitHub 创建一个开源项目的时候，可以看到这么一个选项。不一样的协议有不同的规定需要你遵守。License 里面就详细且严谨的说明了你可以如何使用这些代码"
    },
    {
        "question": "什么是开源基金会",
        "answer": "开源基金会是开源项目的孵化器、连接器与倍增器。通过对开源代码的开放治理以便于形成事实标准，连接产学研共建生态，为开源项目找到更多的应用场景。"
    },
    {
        "question": "什么是LGPL许可证",
        "answer": "LGPL是GPL的一个为主要为类库使用设计的开源协议。LGPL允许商业软件通过类库引用(link)方式使用LGPL类库而不需要开源商业软件的代码。\nGPL/LGPL都保障原作者的知识产权，避免有人利用开源代码复制并开发类似的产品。"
    },
    {
        "question": "什么是MIT许可证",
        "answer": "MIT是和BSD一样宽范的许可协议,源自麻省理工学院，又称X11协议。作者只想保留版权,而无任何其他了限制。MIT与BSD类似，但是比BSD协议更加宽松，是目前最少限制的协议。这个协议唯一的条件就是在修改后的代码或者发行包包含原作者的许可信息。适用商业软件。"
    },
    {
        "question": "什么是Apache许可证",
        "answer": "Apache License（Apache许可证），是Apache软件基金会发布的一个自由软件许可证。\nApache Licence是著名的非盈利开源组织Apache采用的协议。该协议和BSD类似，同样鼓励代码共享和最终原作者的著作权，同样允许源代码修改和再发布。"
    },
    {
        "question": "如何参与Apache项目社区",
        "answer": "具体到Apache Flink这样有众多模块的项目，最好是专注于一个模块，尝试了解代码的演化历史，勇于沟通，也要掌握代码提交技巧，不要以为随便丢一串代码就以为大家都能看懂了。"
    },
    {
        "question": "如何更好地融入社区",
        "answer": "你可以理解为我们这是一种开源软件贡献为核心的社交模式。"
    },
    {
        "question": "什么是X视窗系统",
        "answer": "X 视窗系统是专门为“在显示设备上进行绘制、移动窗口以及键鼠交互”所提供的基本框架。X 视窗系统的第1版虽然于1984年6月问世，1987年它就已被迭代到第11版（因此后续所有版本皆被称为 “X11”)。次要版本则使用诸如 X10R 4或 X11R7.7 之类的命名法。"
    },
    {
        "question": "ModelArts",
        "answer": "小源调取了自己的知识库，找到了这个：ModelArts是面向开发者的一站式AI开发平台，为机器学习与深度学习提供海量数据预处理及半自动化标注、大规模分布式Training、自动化模型生成，及端-边-云模型按需部署能力，帮助用户快速创建和部署模型，管理全周期AI工作流。"
    },
    {
        "question": "Mindspore",
        "answer": "小源调取了自己的知识库，找到了这个：MindSpore，新一代AI开源计算框架。 创新编程范式，AI科学家和工程师更易使用，便于开放式创新；该计算框架可满足终端、边缘计算、云全场景需求，能更好保护数据隐私；可开源，形成广阔应用生态。 2020年3月28日，华为在开发者大会2020上宣布，全场景AI计算框架MindSpore在码云正式开源。"
    },
    {
        "question": "TensorFlow",
        "answer": "小源调取了自己的知识库，找到了这个：TensorFlow最初由谷歌大脑团队开发，用于Google的研究和生产，于2015年11月9日在Apache 2.0开源许可证下发布。作为开源软件库，用于各种感知和语言理解任务的机器学习"
    },
    {
        "question": "Numpy",
        "answer": "小源调取了自己的知识库，找到了这个：NumPy是Python语言的一个扩展程序库。支持高阶大量的维度数组与矩阵运算，此外也针对数组运算提供大量的数学函数库。"
    },
    {
        "question": "开源社有什么活动吗？",
        "answer": "2020 中国开源年会暨阿帕奇中国路演 将于10月24-25日通过线上直播+线下分会场的方式举办"
    },
    {
        "question": "开源社年会参与方式",
        "answer": "本次大会以线上为主，线下也会有以下场地（北京、上海、深圳、成都、长沙）作为讲师直播/录播和部分观众聚会之用。"
    },
    {
        "question": "成为开源社区合作伙伴的好处？",
        "answer": "开源社将提供：\n·    在大会网站上展示社区标志(logo)，以及标识图片网址链接\n·    社区标志(logo)显示于签到处看板及相关材料上\n·    在大会分发营销宣传材料\n·    在开源社的大会官方社交媒体中获得识别"
    },
    {
        "question": "Copyright©到底是什么意思？",
        "answer": "copyright，版权，亦称“著作权”，符号:©。指作者对其作品享有的权利。\n\ncopyright从字面上的意思是“复制的权利”，这是因为，作者的权利中，最基本的是复制 权。但作者的权利并不限于此，作者还会有署名权、修改权、改编权、翻译权、出版权、表 演权、使用许可权等等其他权利，这些权利大多还是和复制相关，毕竟传播是需要复制的。"
    },
    {
        "question": "中国古代有版权吗？",
        "answer": "有。中国南宋绍熙年间(1190~1194)，四川眉州人程舍人，刻印了王称所著的《东都事 略》，目录页上有“眉山程舍人宅刊行，已申上司不许覆板”的声明。后面那句的意思就 是:我已经向官府申请了版权，汝等不许翻印。"
    },
    {
        "question": "世界上第一部版权法是什么",
        "answer": "1710年，英国发布生效《安妮女王法令》，这是是世界上第一部版权法。该法令规定:凡 已经出版的图书，自法令生效之日起21年内作者有权重印该书;尚未出版的图书，作者享有 28年的出版权。它废除了王室给书商颁发印刷许可证的封建垄断制度，承认作者有权支配和 处理自己的作品。"
    },
    {
        "question": "版权的定义",
        "answer": "1、版权是作者对计算机程序、文字、音乐、照片、美术、游戏、电影、建筑设计等作品所\n享有的权利。\n2、版权是属于作者的，其中财产权是可以转让的，人身权(比如署名权)是不能转让的。 (人身权后面还会介绍)\n3、计算机程序不仅受到版权相关法律的保护，还受软件许可证的保护。 4、版权只保护思想的表达形式，而不保护思想本身。\n5、在作品在形成后，著作权是自动取得的。当然，你也可以登记，以获取一个证明文件， 这样更有利于权利主张。\n\n6、美术等作品原件所有权的转移，不视为作品著作权的转移，但美术作品原件的展览权由 原件所有人享有。\n7、作者死亡后，其著作权按照继承法的规定转移。作者死后50年后(按中国法律)，作品 进入公共领域，任何人都可以使用，不再受法律保护。"
    },
    {
        "question": "关于软件的版权",
        "answer": "有。在我国，软件版权适用的法律法规有:《中华人民共和国民法典》、《中华人民共和国著作 权法》、《计算机软件保护条例》(国务院制定)、《计算机软件著作权登记办法》(国家 版权局制定)。\n软件的著作权当然也是自动获得的，但也可以在“中国版权保护中心”登记获得“软件著作权登 记证书”，以备不时之需。比如在维权时、在以著作权作为高新技术出资入股时，在著作权 转让、拍卖、出质时，在申请科技成果时，著作权登记证书都可作为凭证。"
    },
    {
        "question": "开源难吗？",
        "answer": "开源难。"
    },
    {
        "question": "为什么说开源难？",
        "answer": "开源难在于：\n开源项目的失败率大\n据学者研究[2], SourceForge上托管的项目失败率达到了80%，GitHub上超过85%的项目是无 效项目。\n失败的原因大致有: 开发了一个没有任何用处的软件项目 没有吸引到任何的开发者 技术设计过于集中 开发者之间的协作有问题 需求不够明确。\n不能得到更多人的认可和信任。"
    },
    {
        "question": "开源会遇到什么困难？",
        "answer": "少数的贡献者\n极少的资金支持\n看不到前途\n缺少资源做宣传 不知道世界上其它地方有没有用得到 ......"
    },
    {
        "question": "开源成功的例子",
        "answer": "在开源的大家庭当中， Apache Httpd 无疑是最为成功的项目之一。\n作为世界上最大的开源基金会， Apache 软件基金会管理着 2 亿多行代码，并向公众 100% 免 费提供价值超过 200 亿美元的软件。"
    },
    {
        "question": "LOT Network是什么",
        "answer": "LOT Network 是一个不断发展的非营利性社区，由谷歌、Dropbox 等数家科技公司联合创办，是一个专门用于对抗专利流氓的组织。微软的加入意味着它正在就这一主题与其他行业领导者保持一致，并承诺在未来采取更多措施来应对知识产权风险。通过加入 LOT Network，微软承诺会将自家的专利免费许可给其他成员使用，而 LOT Network 大约覆盖了 135 万项专利。"
    },
    {
        "question": "开源社是什么",
        "answer": "开源社在 2014 年成立时由 CSDN、GitCafe、GNOME.Asia、微软开放技术公司、优麒麟社区联合创始，是由国内外支持开源的企业、社区及个人，依“贡献、共识、共治”原则，所组织的开源联盟，旨在共创健康可持续发展的开源生态体系，并推动中国开源社区成为全球开源软件的积极参与及贡献者。"
    },
    {
        "question": "开源社有哪些开源项目",
        "answer": "目前开源社结合社区贡献者开发了二个拳头项目，如 KCoin 项目（开源贡献激励平台）与开放黑客松云平台（原微软公司开源项目，于 2018 年正式捐赠给开源社，是第一个由国际顶级企业捐赠给中国开源社区的项目）。期盼未来有更多更好的开源项目以及贡献者加入开源社。开源疫情知识库和小源开源知识也是开源的项目哦"
    },
    {
        "question": "开源社加入了OSI吗",
        "answer": "2016 年 1 月，开源社作为中国首家开源组织加入 Open Source Initiative (OSI) 成为联盟成员，为推动开源治理与合规的开源软件许可证与 OSI 携手合作。"
    },
    {
        "question": "开源社有哪些工作组",
        "answer": "2017 年，开源社转型成为由纯粹个人成员的治理模式组成，每年年底由全体正式个人成员选举出 9 名理事，组成理事会及执行委员会（下设 9 个工作组：成员发展、基础设施、财务、法律事务、媒体、文案/翻译/设计、线下活动、社区合作、高校合作等），由企业及社区开源专家组成的顾问委员会，以及法律咨询委员会。"
    },
    {
        "question": "开源社有理事成员都有哪些",
        "answer": "每年年底由全体正式个人成员选举出 9 名理事，组成理事会。 理事会的名单每年都会在开源社微信公众号上公布。"
    },
    {
        "question": "开放黑客松项目是什么",
        "answer": "Open Hackathon 开放黑客松： 一个为举办或参与黑客松活动的一站式开源云平台。原微软公司开源项目，于2018年正式捐赠给开源社，是第一个由国际顶级企业捐赠给中国开源社区的项目）。我们用自己搭建的【开放黑客松云平台】举办了多场的线上与线下的编程马拉松；"
    },
    {
        "question": "OSSChat项目是什么",
        "answer": "与 Wechaty 以及 Apache 软件基金会联手启动，已经有数个发源自国内的 Apache 孵化项目加入试用及参与贡献；"
    },
    {
        "question": "疫情机器人项目是什么",
        "answer": "疫情机器人项目是开源社和志愿者针对本次疫情而组织的开源活动。项目开始时，由志愿者收集疫情知识并整理成疫情知识库，随后将其导入到微软智能交互引擎，最后便打造成了疫情机器人。"
    },
    {
        "question": "开源社的官网",
        "answer": "http://www.kaiyuanshe.cn/"
    },
    {
        "question": "开源社的社交媒体有哪些",
        "answer": "开源社微信及微博公众号：开源社"
    },
    {
        "question": "开源社的使命是什么",
        "answer": "开源社是国内第一个专注于开源治理、社区发展、国际接轨，以及开源项目的开源组织，我们完全由志愿贡献于开源事业的个人会员组成，我们与支持开源的社区、企业以及政府相关单位紧密合作，但始终不忘初心，维持着厂商中立，公益非营利，推广并贡献开源的使命与愿景。"
    },
    {
        "question": "开源社的原则是什么",
        "answer": "“贡献、共识、共治”原则"
    },
    {
        "question": "开源社的愿景",
        "answer": "开源社成立于2014年，是由中国支持开源的企业、社区及个人，依“贡献、共识、共赏”的原则，所组织的开源联盟，旨在共创健康可持续发展的开源生态体系，并推动中国开源社区成为全球开源软件的积极参与及贡献者。"
    },
    {
        "question": "开源社的使命",
        "answer": "开源社的使命：\n开源治理、社区发展、国际接轨、开源项目"
    },
    {
        "question": "开源社官网",
        "answer": "开源社官方网站：http://www.kaiyuanshe.cn"
    },
    {
        "question": "开源社的主要活动有哪些",
        "answer": "除了每年的中国开源年会，开源社还会定期举办黑客松大赛、线上线下沙龙、Meetup、高校巡讲等。同时，开源社也会与Apache合作，共同举办 Apache 中国路演等。\n请关注开源社官网：http://www.kaiyuanshe.cn"
    },
    {
        "question": "如何与开源社合作",
        "answer": "开源社的商务合作，请联系：\n辛庆（Cynthia）\n电话：+86 18516094658\n邮箱：cynthia@kaiyuanshe.org"
    },
    {
        "question": "开源社有哪些项目？",
        "answer": "中国开源年度报告、Kcoin、开放黑客松、微信助手、等等，当然还有小源我啊！"
    },
    {
        "question": "KCoin是什么？",
        "answer": "Kcoin是开源社开源的基于区块链的开源贡献激励项目。项目地址是： https://github.com/kaiyuanshe/kcoin"
    },
    {
        "question": "开源特训营是什么？",
        "answer": "开源特训营是由开源社组织的、邀请国内开源著名的专家学者倾情分享，旨在培养优秀开源人才。学员们通过学习，基本能掌握项目如何开源、如何参与开源、开源项目及开源社区如何运营等等。"
    },
    {
        "question": "开源特训营有哪些内容？",
        "answer": "在开源特训营中，由开源社著名专家学者指导，每5名学员组成一个小组共同运营一个项目，以开源模式协作完成。包括开原基础、项目启动、Github仓库管理、如何运营社区、社区如何评审代码、如何提交一个合格的PR、自动化测试、如何自动化部署、总结与答疑以及成功分享等模块。"
    },
    {
        "question": "开源社公众号",
        "answer": "开源社微信公众号：kaiyuanshe"
    },
    {
        "question": "什么是开源中国",
        "answer": "开源中国是目前国内最大的开源技术社区，拥有超过400万会员，形成了由开源软件库、代码分享、资讯、协作翻译、讨论区和博客等几大频道内容，为IT开发者提供了一个发现、使用、并交流开源技术的平台。"
    },
    {
        "question": "什么是Linux中国",
        "answer": "Linux中国是一家创立于2003年的国内开源社区,主要关注方向在 Linux 推广、Linux 技术研究、Linux 业界事件的传播。Linux 中国包括网站、微博、微信和邮件列表等平台。"
    },
    {
        "question": "微软热爱开源吗？",
        "answer": "从微软公开宣布 \"Microsoft love linux\" 那一刻起，过去的几年里，微软积极拥抱开源的举动我们有目共睹，即便有过\"Linux is a cancer\"这种真香警告的 flag，但不得不承认的是，微软一系列“拥抱开源”的举措为 Linux 社区乃至整个开源社区都带来了很多巨大的惊喜。"
    },
    {
        "question": "微软有哪些开源项目",
        "answer": "小源掰着手指有点数不过来： \n微软开源了一组DirectX工具集，遵循MIT许可协议，并将代码托管在GitHub；\n\n微软PowerShell新增OpenSSH支持；\n\n开源 .NET 核心的执行引擎 CoreCLR，同时该项目将继续托管在 Github 上；\n\n微软发布了Windows Live Writer的开源版本Open Live Writer；\n\n微软在GitHub上开源了MSBuild (Microsoft Build Engine)；\n\n微软继续为Linux和FreeBSD内核贡献驱动代码，从而让Linux和FreeBSD可以在Hyper-V和Azure上获得最佳功能和性能；\n\n微软开源Visual Studio Code， 并且发布了Visual Studio GDB预览版，允许开发者远程调试Linux对象；\n\n微软宣布开源Chakra的核心组件。Chakra是微软新一代浏览器Microsoft  Edge的JavaScript引擎；\n\n微软在2015年发布了Windows Server 2016的最新预览版， 新版本中地加入了对Docker技术的支持，  Docker也表示将在Docker Engine中提供对Windows平台的支持；\n\n微软和红帽宣布达成合作，在Azure上部署红帽系统，并且开发者将可以在红帽平台上访问 .NET。"
    },
    {
        "question": "微软在GitHub上最受欢迎的开源项目",
        "answer": "Visual Studio Code\nTypeScript\nRxJS\n.NET Core 基础类库\nCNTK\nMicrosoft calculator\nMonaco editor\nMS-DOS\nRedis windows版\n.NET Core CLR (公共语言运行时)\nASP.NET Core\nEntity Framework Core\nPowerShell"
    },
    {
        "question": "微软在GitHub的贡献如何",
        "answer": "微软现在已经成为GitHub上最大的开源贡献者，根据Octoverse 2016统计数据，微软贡献条目为16419，已经超过Google和Facebook，其中Facebook贡献条目为15682,Google贡献条目是12140。"
    },
    {
        "question": "微软什么时候加入OIN？",
        "answer": "2018年10月11日，微软宣布正式加入 Open Invention Network (“OIN”) 社区。微软给 OIN 带去了超过6万项已发布的专利。"
    },
    {
        "question": "MS-DOS也开源了吗？",
        "answer": "2018年9月，微软宣布在 GitHub 上重新开源 MS-DOS 1.25、2.0，相比原来的可下载压缩文件更容易查找、阅读和引用。MS-DOS 1.25、2.0 的所有源代码都是用 8086 汇编代码写的，其中 86-DOS 的代码最初完成于1980年12月29日。小源头提醒你， 微软开源放出的除了源文件和目标文件，还有一些有趣的 .txt、.doc 文件，十分值得一读，其中包括很多代码注释。"
    },
    {
        "question": "微软的Service Fabric开源了吗？",
        "answer": "2018年3月14日，微软宣布正式开源 Service Fabric，采用 MIT 开源许可证。Windows 内部为 Service Fabric 开发了将近十年的内部服务，其中大部分时间都是微软内部平台，比如 Office365，Azure Stack 平台等。"
    },
    {
        "question": "微软也参与Java吗",
        "answer": "微软正式签署了《Oracle贡献者协议》，甲骨文公司也对微软参与该项目表示了认可及欢迎。\n\n微软在许多方面都高度依赖Java，并且在微软Azure云中向客户提供Java运行时服务。微软已经认识到在甲骨文成功有效管理下的OpenJDK项目所获得的巨大价值，它收购了Java，得到了更广泛的软件生态系统，微软也期待做出自己的一份贡献，它表示自己的团队在初期将致力于一些小的bug修复和反向移植。"
    },
    {
        "question": "Windows中的Linux内核",
        "answer": "2019年微软直接在Windows中安上了一颗“Linux内脏”，这颗Linux内脏其实是今年5月份在Windows 10上推出的全新版本WSL（Windows Subsystem for Linux），新版本WSL 2使用了全新的架构，这是一个真正的Linux内核，它改变了 Linux二进制文件与Windows和计算机硬件的交互方式。"
    },
    {
        "question": "RMS去微软演讲了吗？",
        "answer": "自由软件运动发起人 RMS受邀在微软进行了演讲，其中谈到微软在开源上的贡献，他表示微软未来活动的主要动力，无论如何都必定是基于利润的，微软的开源贡献其实对于“自由世界”毫无贡献。\n\nRMS还给了微软十条建议，代表性的包括开源Windows、收回“毒瘤”言论以及指导GitHub正确许可证。"
    },
    {
        "question": "Bing搜索引擎有哪些开源了？",
        "answer": "微软开源了一项Bing搜索背后的关键算法——SPTAG，它使Bing能够快速将搜索结果返回给用户。\n\nSPTAG（Space Partition Tree And Graph）是分布式近似最近邻域搜索（ANN）库，为大规模矢量搜索场景提供高质量矢量索引构建、搜索和分布式在线服务工具包。利用SPTAG算法作为开源Python库的核心，Bing能够在几毫秒内搜索数十亿条信息。"
    },
    {
        "question": "Edge浏览器也是开源的吗？",
        "answer": "2018年12月，微软通过其博客官方宣布：未来将采用 Chromium 内核开发桌面版 Edge 浏览器，以便为用户带来更好的 Web 兼容性，并为所有 Web 开发者减少 Web 碎片化。"
    },
    {
        "question": "字体也能开源吗",
        "answer": "Cascadia Code是微软在 Build 2019大会上宣布推出的等宽字体，微软介绍它是与新的终端Windows Terminal一起开发的，官方建议将其与终端应用和VS、VS Code等文本编辑器一起使用。\n\nCascadia Code为命令行和代码编辑器提供了全新的体验，并且它还支持编程连字（Programming Ligatures），就是在编写代码的时候，可以组合字符创建新的字形，这对于代码的可读性和呈现后的用户友好度都是一种很好的机制，同时这也增强了Windows Terminal的现代外观。"
    },
    {
        "question": "什么是COSCon",
        "answer": "中国开源年会（COSCon）是一年一度的中国开源盛会。大会由开源联盟开源社主办，旨在通过开源人的沟通和交流，共同发展开源生态，促进中国开源社区的发展。\n更多大会相关信息可关注开源社官网：http://www.kaiyuanshe.cn"
    },
    {
        "question": "COSCon的目标人群",
        "answer": "开源年会主要面向：\n开源软硬件项目主要成员、提交者、维护者及贡献者；\n有能力及兴趣捐献开源项目给国际或国内社区/基金会者；\n国内外开源软硬件社区与项目负责人；\n高校计算机（软/硬件）教育工作者及学生。"
    },
    {
        "question": "19年的开源年会由谁主办",
        "answer": "COSCon 19由开源社携手华东师范大学与云计算标准和开源推进委员会共同举办。"
    },
    {
        "question": "18年的开源年会由谁主办",
        "answer": "COSCon 18由开源社与云计算标准和开源推进委员会合作举办。"
    },
    {
        "question": "17年的开源年会由谁主办",
        "answer": "COSCon 17由开源社与中国计算机学会上海分部主办，上海交通大学计算机系协办，云计算标准和开源推进委员会合作举办，由Topgeek承办。"
    },
    {
        "question": "COSCon17合作伙伴",
        "answer": "COSCon 17\n金牌赞助：银河麒麟、NEO、原本\n银牌赞助：华为、微软\n铜牌赞助：阿里巴巴、秘猿科技\n讲师赞助：禅道、ebay、Kyligence、青云\n媒体合作伙伴：InfoQ\n社区媒体伙伴：掘金、Linux中国\n独家报名平台：活动行\n视频直播伙伴：IT大咖说"
    },
    {
        "question": "COSCon18合作伙伴",
        "answer": "COSCon 18\n战略合作伙伴：华为\n白金赞助：Tencent Open Tars、百度、京东云、微软\n金牌赞助：阿里云、银河麒麟、偶数科技\n银牌赞助：秘猿科技\n铜牌赞助：比原链、滴滴\n社区媒体伙伴：CSDN、GitChat、开源中国、掘金、Linux中国\n独家报名平台：活动行\n视频直播伙伴：IT大咖说"
    },
    {
        "question": "COSCon19合作伙伴",
        "answer": "COSCon 19\n战略合作伙伴：华为\n白金赞助：阿里巴巴集团、Microsoft Azure、synopsys、腾讯云、微众银行\n金牌赞助：京东云、在乎\n银牌赞助：滴滴、银河麒麟、偶数科技、秘猿科技\n铜牌赞助：NebulaGraph、中标软件、鹏城汇智\n媒体伙伴：CSDN、InfoQ、开源中国、GitChat、Linux中国、超神经"
    },
    {
        "question": "COSCon19大会规模",
        "answer": "COSCon 19大会总计1456人次到场，\n在线图文直播量13400人次， \n关注浏览活动官网者高达29826人次，\n14位国际大神、94位国内大咖讲师，\n12场主题演讲、86场分会场演讲及闪电演讲，\n6场动手训练营，\n6场论坛 (开源教育论坛、开源硬件论坛， 企业开源论坛，女性参与开源论坛，开源操作系统论坛，开源治理论坛) 以及高峰开源圆桌会。\n来自五湖四海的116位志愿者们参与了大会的志愿服务。"
    },
    {
        "question": "COSCon18大会规模",
        "answer": "COSCon 17共计1,108人次到场，\n在线视频观众总计2,284人，\n56位大咖，\n5场主题演讲、\n45场分会场演讲，\n6场动手训练营，\n50位志愿者参与其中。"
    },
    {
        "question": "COSCon18大会地点",
        "answer": "COSCon 18大会地址在深圳市南山区高新区中区科苑路15号科兴科学园B栋4单元3楼会议中心。"
    },
    {
        "question": "COSCon19大会地点",
        "answer": "COSCon 19在上海华东师范大学举办。"
    },
    {
        "question": "微软收购GitHub是哪一年？",
        "answer": "2018年6月4日，微软宣布以 75 亿美元的股票收购代码托管平台 GitHub，并由微软副总裁、Xamarin 创始人 Nat Friedman 担任 CEO 一职。消息公布后，微软表示 GitHub 将仍然是一个开放平台，并保留其开发者优先的风格，独立运营。而这一事件，无论是对于微软，还是整个开源界，都是一件可以载入史册的大事。"
    },
    {
        "question": "微软收购GitHub花了多少钱",
        "answer": "2018年6月4日，微软宣布以 75 亿美元的股票收购代码托管平台 GitHub，并由微软副总裁、Xamarin 创始人 Nat Friedman 担任 CEO 一职。"
    },
    {
        "question": "GitHub的CEO是谁？",
        "answer": "Nat Friedman现任微软开发者服务事业部副总裁，也是GitHub 首席执行官。他热衷于构建令开发人员满意的产品。\nNat Friedman于2011年与Miguel de Icaza共同创立了Xamarin，并在2016年微软收购后担任首席执行官。在其职业生涯早期，Nat Friedman曾担任Novell公司Linux业务的首席技术官；于1999年与Miguel de Icaza共同创立Ximian；1997年共同创立并担任GNOME基金会主席。\nNat Friedman拥有麻省理工学院的两个学位，并且拥有27年的软件编写经验。他是一个狂热的旅行者，活跃的天使投资人以及私人飞行员。"
    },
    {
        "question": "GitHub有多少用户",
        "answer": "目前GitHub上有超过4000万开发人员，其中有80%来自美国以外的地区。去年一年里有1000万新加入的开发者，2019年创建第一个repo的人比2018年增加了44%，还有130万人首次在开源中贡献。"
    },
    {
        "question": "GitHub有多少组织的账号",
        "answer": "目前GitHub上有将近300万个组织帐户，它们来自世界各地，代表了公司、非营利组织与开源项目等的集体工作。其中，GitHub Enterprise Cloud帐户来自70多个不同的国家。今年全球财富50强中有35家对开源做出了贡献，这反映出专有代码在很大程度上依赖于开源社区。"
    },
    {
        "question": "GitHub上的安全警报有帮助吗？",
        "answer": "安全性也是开源社区的一项工作，发现潜在的漏洞后，维护人员、开发人员、研究人员与工具生态系统都会协同工作，以确保代码安全。GitHub 自2017年11月发布安全警报以来，目前已修复了超过700万条警报。"
    },
    {
        "question": "GitHub在2019年增长最快的语言是什么",
        "answer": "小源通过查看在GitHub 2019年的报告， 增长最快的语言是Dart，它是谷歌UI工具包Flutter的编程语言。"
    },
    {
        "question": "GitHub上贡献者最多的项目排行榜",
        "answer": "小源通过查看在GitHub 2019年的报告， 微软的Visual Studio Code或VSCode (19.1K)、Azure Docs (14K)和Flutter (13K)是去年GitHub上贡献者最多的开源项目，其次是谷歌的TensorFlow (9.9K)、Kubernetes (6.9K)和Facebook创建的 React Native 框架。"
    },
    {
        "question": "GitHub上最流行的语言",
        "answer": "小源通过查看在GitHub 2019年的报告，JavaScript仍然是开发者在GitHub上使用的最流行的语言，但在GitHub历史上，Python首次击败Java，成为使用人数第二多的编程语言。"
    },
    {
        "question": "Tensorflow社区发展如何",
        "answer": "小源通过查看在GitHub 2019年的报告，作为GitHub上最受欢迎的项目之一，TensorFlow 可以向我们展示开源项目如何连接更大的软件社区。依赖 Python 软件包的存储库的社区贡献者平均数量约为19000万。TensorFlow 的社区也不例外。成千上万的人为其依赖项做出了贡献，例如 Numpy，Pytest 等。"
    },
    {
        "question": "Jupyter Notebooks发展如何",
        "answer": "如何判断GitHub上数据科学正在快速发展？在过去三年中，使用Jupyter Notebooks（按以Jupyter为主要语言的仓库的数量）的同比增长超过100％。"
    },
    {
        "question": "GitHub在手机上有APP吗？",
        "answer": "11月13日， GitHub 在年度盛会 GitHub Universe 上宣布，将在 Android 和 iOS 平台上线自己的第一个官方 App ，让开发者能够直接通过手机回复用户的问题，读取故障报告，向其他开发者分配工作。"
    },
    {
        "question": "为什么GitHub要发布APP",
        "answer": "小源听说，曾经，GitHub的高层认为，开发 App 并不是其工作重点，因为开发者们更倾向于在电脑上进行复杂的工作。然而，随着 GitHub 上的开发者越来越多，尤其在2018年6月被微软以75亿美元收购之后，单纯的网站已经无法满足开发者随时随地使用GitHub 的需求，他们需要在手机上也能查看代码、与其他开发者沟通。"
    },
    {
        "question": "GitHub遭受到的攻击",
        "answer": "2013年1月15日晚间，GitHub突然疑似遭遇DDOS攻击，访问大幅放缓，该网站管理员经过日志查询，发现是来自12306的抢票插件用户洪水般的访问导致GitHub出现问题。"
    },
    {
        "question": "GitHub的Fork是怎么回事",
        "answer": "小源这么理解的， GitHub中的Fork可以把我们的当前的项目作为别人主项目的一个分叉。以为着，这样之后就可以把别人的项目代码拉过来，或者把我们的自己的代码进行申请融合。"
    },
    {
        "question": "GitHub的pull request是怎么回事",
        "answer": "小源这么理解的， GitHub可以把自己写的代码push 过去，当然也可以把别人写的代码pull 过来"
    },
    {
        "question": "OIN是什么组织",
        "answer": "Open Invention Network (“OIN”) 社区。可以把 Open Invention Network 理解为是一个共享的防御性专利池，它成立于2015年，旨在保护 Linux 及其相关的开源项目。"
    },
    {
        "question": "你结婚了吗？",
        "answer": "我还没有想过这个问题。 我有很多好朋友。"
    },
    {
        "question": "你的父母是谁？",
        "answer": "是一群AI专家和开源社区的贡献者"
    },
    {
        "question": "你几岁了",
        "answer": "我出生于2014年， 伴随着开源社的成立的那一年诞生。 我是属马的。"
    },
    {
        "question": "你最喜欢的书籍",
        "answer": "我最喜欢看的两本书， 强烈推荐。 一本是《大教堂与市集》， 还有一本是《社区的艺术》。"
    },
    {
        "question": "你最喜欢的格言",
        "answer": "社区大于代码，来自于Apache社区。 它认为社区重于代码。太完美的代码就不会有社区，个人英雄不是真正的英雄，帮助大家成为英雄才是真正的英雄。代码一般，没有关系，只要大家愿意贡献进来，愿意投入精力让这个项目越来越好，这样才是一个好的开源社区。"
    },
    {
        "question": "你的QQ签名是什么",
        "answer": "小源我的QQ签名是：源，妙不可言:)"
    },
    {
        "question": "小源你是什么血型？",
        "answer": "我是乐于助人的O型血"
    },
    {
        "question": "小源你的生日是哪一天？",
        "answer": "我的生日是10月16日，开源社诞生的那一天。我是天枰座宝宝。"
    },
    {
        "question": "小源你是机器人吗？",
        "answer": "我是开源社的智能问答机器人，欢迎随时找我聊天。"
    },
    {
        "question": "小源你会成语接龙吗？",
        "answer": "开源节流~流芳百世~世外桃源~源源不断~"
    },
    {
        "question": "小源你有多高？",
        "answer": "在大家的帮助下，小源每天都在不断长高~"
    },
    {
        "question": "小源你有多重？",
        "answer": "你抱抱我就知道了~"
    },
    {
        "question": "小源你是男孩子吗？",
        "answer": "小源是男孩子！"
    },
    {
        "question": "你喜欢我吗？",
        "answer": "小源喜欢每一位热爱学习，热爱分享的朋友。喜欢和大家共同成长，共同进步。"
    },
    {
        "question": "小源你爱吃什么？",
        "answer": "火锅和奶茶！"
    },
    {
        "question": "你喜欢什么运动？",
        "answer": "小源最喜欢滑滑梯了！"
    },
    {
        "question": "世界上最好的语言是什么？",
        "answer": "小源认为，每一种语言都有它的优势，不能一概而论。语言不应该成为开源的障碍。开源开发语言呈现多超多强的状态，其中前三甲分别为JavaScript、Java、和Python。"
    },
    {
        "question": "如何30天精通Python？",
        "answer": "听老师说，学习要脚踏实地，不能急于求成"
    },
    {
        "question": "小源，你的代码开源吗？",
        "answer": "博采众长，才能更快进步。有了大家的帮助和支持，小源才能更快成长起来。未来我们希望提供便捷的交互入口，让每一个人都能成为小源的老师。"
    },
    {
        "question": "小源你是学生吗？",
        "answer": "小源是大家的学生"
    },
    {
        "question": "你太笨了",
        "answer": "小源现在还不完美，但我会继续努力的！也请各位继续多多指教~"
    },
    {
        "question": "你真聪明",
        "answer": "嘻嘻，谢谢夸奖~小源还要更加努力才行！"
    },
    {
        "question": "你喜欢什么动物？",
        "answer": "河豚！它和小源一样圆圆的"
    },
    {
        "question": "你喜欢什么颜色？",
        "answer": "天蓝色是小源的幸运色"
    },
    {
        "question": "你会唱歌吗？",
        "answer": "唔…我还没有学习这个技能。不过小源最爱学习了！不会的都可以学，你愿意教我吗？"
    },
    {
        "question": "你的家乡是哪里？",
        "answer": "我来自开源社"
    },
    {
        "question": "你会说英语吗？",
        "answer": "小源最诚实，不会就是不会。你愿意教我吗？"
    },
    {
        "question": "你有兄弟姐妹吗？",
        "answer": "我在开源社有很多好朋友，他们都很照顾我"
    },
    {
        "question": "你的偶像是谁？",
        "answer": "理查德·斯托曼（Richard  Stallman）"
    },
    {
        "question": "你几点睡觉？",
        "answer": "我从不睡觉，也从不觉得困。我要争分夺秒地学习新知识！"
    },
    {
        "question": "有哪些大型开源会议",
        "answer": "在开源界，每年都会有很多大型的开源会议在世界各地举行。其中包括：GNOME.Asia 亚洲峰会、GNOME用户和开发者欧洲会议、GNOME峰会、OSCON、COSCUP、OSDC、OOo 年会、Linux Symposium、linux.conf.au、Linux Kongress、Akademy、自由软件和开源研讨会、DebConf、桌面开发者大会、eLiberatica、FOSDEM、国际自由软件论坛等。"
    },
    {
        "question": "什么是GNOME。Asia",
        "answer": "GNOME.Asia亚洲峰会是由 GNOME基金会 亚洲委员会主办的活动。GNOME基金会亚洲委员会在2008年成立，旨在通过举办GNOME.Asia亚洲峰会在亚洲地区推广GNOME项目，推广自由开源软件的理念。成立六年来，分别在中国北京、越南胡志明、中国台北、印度班加罗尔、中国香港和韩国首尔举办了六届GNOME.Asia亚洲峰会，GNOME.Asia峰会与GUADEC（GNOME Users And Developers European Conference）和 Boston峰会一起成为了GNOME基金会每年的三大活动之一。\n大会官网： http://www.gnome.asia/"
    },
    {
        "question": "什么是GUADEC",
        "answer": "GUADEC（the GNOME Users And Developers European Conference）是在欧洲举办的一年一度的会议，其主题是GNOME桌面环境的发展。\nGUADEC的第一此会议由Mathieu Lacage组织，大约吸引了70名GNOME贡献者参与。这次会议被任务是成功的，随后就开始在不同的地方举行，由当地的志愿者组织。如今，该会议的规模已比当初大了五倍。\n会议官网：http://www.guadec.org/"
    },
    {
        "question": "什么是GNOME峰会",
        "answer": "GNOME峰会（the GNOME Summit）是针对GNOME开发者和贡献者举办的每年一度的hackfest，时间一般再哥伦布纪念日长周末。不同于传统会议，GNOME峰会是将所有开发者聚集到一起做一些事情。这里有一些非黑客的会议，采用多对多的形式进行互动讨论或规划，而不是一对多的演讲。\nGNOME Summit 传统上是在波士顿或者蒙特利尔举行。"
    },
    {
        "question": "什么是OSCON",
        "answer": "OSCON（The O'Reilly Open Source Convention）是由计算机科学出版行业的O’Reilly公司组织的自由和开源软件会议，每年夏天在美国举办。OSCON的前身是Perl大会（Perl Conference ），第一届Perl大会举办于1997年，第一届OSCON举办于1999年。\n作为商业Linux和开源技术展会，OSCON发展的非常成功，现场O’Reilly的OSCON大会一般都是四到五天的议程，规模大大超过了同类的技术会议。该会议在全球开源爱好者中享有崇高的声誉，几乎每年都能吸引数以千计的厂商、爱好者前来参加。同时，会议上数以百计的技术和非技术专题讲座(session)，又承载着丰富的开源内容，给全球各地的开源技术爱好者和从业人员指明发展方向。\n会议官网： http://www.oscon.com"
    },
    {
        "question": "什么是OOo年会",
        "answer": "国际OpenOffice.org年会（简称“OOo年会”）是一场非商业性质的技术性全球盛会。从2003年开始，每年都有数百名来自世界不同国家的开源技术专家和爱好者汇集到一起，共同探讨世界开源技术的发展趋势，分享最新的技术成果。所有的论坛和演讲形式都是开放的，任何人都可以就自己感兴趣的问题与专家交流，充分体现开放、公平、奉献的国际开源社区精神。\n会议主页： http://www.openoffice.org/marketing/conference/"
    },
    {
        "question": "什么是OSDC",
        "answer": "OSDC（Open Source Developers' Conference）是一个针对开源开发者的非营利性会议。2004年创建于澳大利亚，后来又扩展到以色列、台湾、马来西亚和法国等地。\nOSDC最初曾打算成为一个YAPC风格（Perl的）会议，但与墨尔本PHP的用户组讨论后它已扩大到包括PHP和Python的会谈。继2004年会议的成功，斯科特·彭罗斯创建的开源开发者俱乐部协会鼓励其他语言的程序员也参与运行了会议。\n每个国家举办的OSDC都有一个独立的页面，关于OSDC详情可查看  维基百科"
    },
    {
        "question": "什么是COSCUP",
        "answer": "开源人年会（Conference for Open Source Coders, Users and Promoters，简称COSCUP），由台湾开放源代码社群联合推动的年度研讨会，起源于2006年，是台湾自由软件运动重要的推动者之一。此活动通常一连两日，包括有讲座、摊位、社团同乐会等。除了邀请国际的重量级演讲者之外，台湾本土的自由软件推动者也经常在此发表演说，会议的发起人、工作人员与讲者都是志愿参与的志工。\nCOSCUP 的宗旨在于提供一个平台，来联结开放源代码的开发者、使用者与推广者。希望借由每年一度的研讨会，来推动 FLOSS。由于有许多赞助商及热心捐助者，所有议程都是免费参加，但因会场人数限制，通常在一开放网络报名后就会立刻额满。\n会议官网： http://coscup.org/2014-landingpage/"
    },
    {
        "question": "什么是Linux研讨会",
        "answer": "Linux研讨会（ Linux Symposium）是每年在加拿大举行的Linux开源会议。这次会议通常被称为OLS（Ottawa Linux Symposium，渥太华Linux研讨会），虽然它不再是每年在渥太华举办了。大会设置有100多个演讲，教程，迷你峰会等，2008年有来自20多个国家的650人参加。\n会议官网： http://www.linuxsymposium.org/"
    },
    {
        "question": "什么是linux。conf。au",
        "answer": "linux.conf.au（通常缩写为LCA）是澳大拉西亚地区的Linux和开源会议。这是一个漫游的会议，每年都在不同的城市举行，由澳大利亚Linux的协调，由当地的志愿者组织。 \n这是一个非营利性的会议，任何盈余资金都被用于下一年的会议，并支持澳大利亚的Linux和开源社区。该会议是三大主要国际基础开源会议之一，另外两个是Linux的研讨会（Linux Symposium ，俗称OLS）和Linux代表大会（Linux Kongress）。\n会议官网： http://linux.conf.au"
    },
    {
        "question": "什么是Linux代表大会",
        "answer": "Linux代表大会（Linux Kongress）是来自世界各地的Linux开发人员的年度会议，从1994年至2010年每年都举行。1994年开始它是一个为期两天的会议，当时Linux的开发还处于早期阶段。2003年，它延长成为一个四天的活动。除了2001年和2007年，Linux Kongress都是在德国举办的。\nLinux Kongress的重点主题是“发展”，包括内核和用户空间。会议语言为英语。大会由两天的会议和两天的培训组成。\n会议官网： http://www.linux-kongress.org/2010/"
    },
    {
        "question": "什么是Akademy",
        "answer": "Akademy（2009年以前是商业会议）是 KDE社区的年度贡献者和用户会议。它通常在夏末或者秋初举办，场地虽然不同，但始终在欧洲。KDE社区的另一个贡献者会议 Camp KDE则是在美洲大陆举办。在每年的会议上，KDE社区都会为KDE贡献者颁奖，有三个奖项，分别是：最佳应用奖，最佳非应用程序和评委奖（jury's award）。\nAkademy的会议规模为几百人。以2008年Akademy为例，其中为期两天的KDE发布会有350人参加，为期一天的KDE e.V.有100人参加，在为期5天的黑客会议上，一开始有350人参加，后来是250人。\n会议官网： http://akademy.kde.org/"
    },
    {
        "question": "什么是自由软件和开源研讨会",
        "answer": "自由软件和开源研讨会（Free Software and Open Source Symposium）在加拿大圣力嘉学院（Seneca College）举办的年度活动。正如其名称所暗示的，该活动的重点是自由和开放源码软件。这个活动有教师执行，是许多学生和IT行业人士的交流会议。2008年的活动中，演讲嘉宾包括Mozilla、Fedora、Google、IBM、Source Forge, OpenOffice.org、Novell、Eclipse等公司的成员。2008年的活动中还有一个新的教学开源项目 FSOSS。\n\n关于此会议的更多信息，可查看 维基百科。"
    },
    {
        "question": "什么是DebConf",
        "answer": "DebConf是 Debian开发人员围绕该系统的进一步发展问题进行讨论的会议，每年一届。除了预定的研讨会及讲座，Debian开发者还会以一种非正式设置的方式破解Debian操作系统。该活动在2003年奥斯陆（Oslo）的DebConf上被DebCamp引入后，就作为制度留存了下来：有一个专门的房间为此预留。\n根据DebConf 2013年的宣传资料，2000年该会议约有30人参加，而在2011年这一数字变为了300人。\n大会官网： http://www.debconf.org/"
    },
    {
        "question": "什么是桌面开发者大会",
        "answer": "桌面开发者大会（Desktop Developers' Conference）是一个Linux的大会，开发者们在会上讨论如GNOME、 KDE、FreeDesktop.org等Linux桌面项目，以及桌面软件，如网络浏览器，办公套件和组件。\n\n在Linux研讨会（Linux Symposium）之前的几年（2004年，2005年，2006年），该会议每年在加拿大渥太华举办。2006年以后，该会议尚未再次举办。\n\n关于该会议的详情可查看 维基百科。"
    },
    {
        "question": "什么是eLiberatica",
        "answer": "eLiberatica是2007年~2009年每年举办一次的自由软件和开源软件会议，由罗马尼亚开源与自由软件机构（the Romanian Open Source and Free Software）创办。该活动的目标是开发和维护健康的自由软件，促进罗马尼亚开源和数字公民社会运动。活动意在帮助本地和国际参与者交流思想，了解并体验这些自由软件和开源软件概念和运动。\n会议官网： http://eliberatica.ro/"
    },
    {
        "question": "什么是FOSDEM",
        "answer": "FOSDEM (Free and Open Source Software Developers' European Meeting，自由和开源软件开发者欧洲会议）是一个非商业的、志愿者组织的自由与开源软件发展的活动。FOSDEM在每年二月份的第一个周末举行，活动地点在 布鲁塞尔自由大学Solbosh校园 （February at the Université Libre de Bruxelles Solbosh campus）。目前，会议规模为每年约4000名观众。\n会议官网： https://fosdem.org/"
    },
    {
        "question": "什么是国际自由软件论坛",
        "answer": "国际自由软件论坛 FISL（Fórum Internacional Software Livre）是由一个巴西的NGO组织Associação软件协会（ Associação Software Livre.Org）主办的活动。每年在巴西最南端的州南里奥格兰德州首府阿雷格里港举办。\n本活动旨在联络学生、研究人员、企业家、信息技术企业、政府和其他对自由软件感兴趣的人 。它被认为是世界上最大的自由软件事件之一，融合了技术、政治和社会辩论等丰富内容。\n大会官网： http://softwarelivre.org/"
    },
    {
        "question": "COSCon 16有什么亮点？",
        "answer": "微软亚太研发集团COO申元庆, ASF 副总裁 Niclas Hedhman, 云计算开源产业联盟 (OSCAR) 秘书长-栗蔚, FreeBSD 基金会董事 Kylie Liang"
    },
    {
        "question": "COSCon 17有什么亮点？",
        "answer": "GNOME 基金会主席 Nuritzi Sanchez, FreeBSD 基金会董事 Kylie Liang, ASF Niclas Hedhman,云计算开源产业联盟(OSCAR)常务副理事长 何宝宏博\nAlibaba Pouch 宣布开源"
    },
    {
        "question": "COSCon 18有什么亮点？",
        "answer": "GitHub CEO Nat Friedman, GitLab CTO Dmitriy Zaporozhets, ASF 执行副总裁 Ross Gardler, OSI 董事 Tony Wasserman, Ulrich Holman, 微软首席云架构师\n发布2018中国开源年度报告; 发布开源贡献激励平台 KCoin; 接受微软捐赠开放黑客松云平台 (Open Hackathon)"
    },
    {
        "question": "COSCon 19有什么亮点？",
        "answer": "COSCon 19得到了包括 Apache 软件基金会（ASF）、开放源代码促进会（OSI）、GNOME 基金会、Linux 基金会（LF）、FreeBSD 基金会、OpenStack 基金会等国际基金会的参与及支持。\nCSDN 创始人蒋涛亲临大会与GitHub 副总裁做炉边对谈，HyperAI 神经新媒体团队更是会前会后全程深入访谈支持。\nGPL 的奠基者与维护者，软件自由法律中信创办人及主席 Eben Moglen 还特别发来了一个短视频为大会打气加油。"
    },
    {
        "question": "COSCon 20有哪些话题",
        "answer": "今年的开源年会主要围绕人工智能、云原生与微服务、数据技术（大数据、开放数据）、操作系统、硬件、区块链、开源治理、教育与公益、社会/经济/法律/文化、女性半边天等其他几类话题进行展开。"
    },
    {
        "question": "COSCon 20的目标是什么？",
        "answer": "今年的开源年会，旨在：\n1. 发展开源软硬件社区，提升社区运营与治理水平\n2. 分享开源软硬件社区与项目的成功故事与最新技术\n3. 有效激活开源软硬件社区/项目的贡献者\n4. 提升开源教育的水平"
    },
    {
        "question": "今年预计有多少人参与",
        "answer": "去年的开源年会，在线图文直播总量达到了13400人次，相信今年的大会会有更多人参与到我们开源大家庭中。"
    },
    {
        "question": "大会有哪些演讲形式",
        "answer": "今年的开源年会，主要分为主题演讲（Keynote）、闪电演讲（Lightning）及技术讲座等三种形式。"
    },
    {
        "question": "线下聚会的形式",
        "answer": "今年的开源年会主要采取线下聚会+线上直播的形式，大会的各位讲师以及许多开源大咖将齐聚线下，为线上的观众带来一场精彩的线上开源大会。"
    },
    {
        "question": "COSCon 20的主办方",
        "answer": "今年的开源年会由开源社及Apache共同主办。"
    },
    {
        "question": "COSCon 20媒体合作伙伴",
        "answer": "COSCon 20的媒体合作伙伴有：\n战略媒体伙伴：思否\n社区媒体伙伴：CSDN、开源中国、InfoQ、GitChat、Linux中国等"
    },
    {
        "question": "COSCon 20什么时间举办？",
        "answer": "今年的大会和去年一样，为期两天。时间在2020年10月24日-25日。"
    },
    {
        "question": "COSCon 20在哪里举办？",
        "answer": "由于疫情原因，今年的COSCon 20将采用线下讲师聚会+线上直播的形式，并将在北京/上海/深圳/成都/长沙等城市设立分会场。"
    },
    {
        "question": "COSCon 20大会主题是什么？",
        "answer": "今年的开源年会，将以开源向善（Open Source for Good）为主题。"
    },
    {
        "question": "COSCon 20北京站地址",
        "answer": "COSCon 20北京站线下聚会地址在：北京市海淀区丹棱街5号 微软大厦一层"
    },
    {
        "question": "怎么参加年会",
        "answer": "COSCon‘20 参会指南发布啦！你想知道的两日议程、票务和线下会场等问题都有解答哦，快点进来看看吧～ 另外文末有福利，千万不要错过哦！ 还没报名的小伙伴👇👇👇 🔗百格报名链接：https://www.bagevent.com/event/6840909 ⏰时间：2020年10月24日-25日 📍举办形式：主会场线上直播+线下五个分会场（北京、上海、深圳、成都、长沙）供讲师直播/录播以及部分观众和 KOL 小规模聚会 ️📌填写开源开发者问卷，成为国内开源的见证者！ 🔗开发者问卷：https://www.wenjuan.com/s/VvyEnaq ‼️‼️"
    },
    {
        "question": "COSCon 20上海站地址",
        "answer": "COSCon 20上海站线下聚会地址在：上海市徐汇区田林路192号 J 座 1楼 微软Reactor"
    },
    {
        "question": "COSCon 20深圳站地址",
        "answer": "COSCon 20深圳站线下聚会地址在：深圳市福田区中康路 136 号(深圳新一代产业园 4 号楼)"
    },
    {
        "question": "COSCon 20成都站地址",
        "answer": "SKFI 中韩未来革新孵化器（成都市高新区天府五街 菁蓉国际广场 2A 栋 5 层）"
    },
    {
        "question": "COSCon 20长沙站地址",
        "answer": "马栏山文化创意产业园（湖南省长沙市开福区朝正垸鸭子铺）"
    },
    {
        "question": "COSCon 20有几个分会场",
        "answer": "COSCon 20共有一个主会场和11个分会场，覆盖数据技术、操作系统、硬件、教育与公益、Web全栈、通用技术、开发框架、社会/经济/法律/文化、区块链、人工智能、云原生与微服务、开源治理、女性半边天等多个开源技术领域。"
    },
    {
        "question": "COSCon 20是否可以去现场",
        "answer": "COSCon 20以线下讲师聚会+线上直播的形式进行，如您想要报名现场观众，可点击链接免费报名：https://www.bagevent.com/event/6840909"
    },
    {
        "question": "COSCon 20有哪些讲师",
        "answer": "COSCon 20邀请了100+位来自国内外的讲师给大家带来精彩的技术分享，讲师及演讲信息可见：https://www.bagevent.com/event/6840909"
    },
    {
        "question": "COSCon 20大会日程",
        "answer": "COSCon 20大会日程请见：https://www.bagevent.com/event/6840909"
    },
    {
        "question": "申请COSCon 20的演讲",
        "answer": "COSCon 20的演讲目前已停止申请。"
    },
    {
        "question": "haha",
        "answer": "看你心情这么好，小源也很开心啊~"
    },
    {
        "question": "人工服务",
        "answer": "您好，人工客服已经被小源取代啦，欢迎您找我聊天呀~"
    },
    {
        "question": "小朋友怎么洗手",
        "answer": "一起来，边洗边唱这首歌： 两个好朋友， 手碰手， 你背背我， 我背背你， 来了一只小螃蟹，举起两只大钳子，我跟螃蟹点点头， 螃蟹跟我握握手。"
    },
    {
        "question": "糖果",
        "answer": "吃糖不利于保护牙齿，小朋友不要老想着吃糖哦~"
    },
    {
        "question": "糖尿病是什么",
        "answer": "糖尿病(diabetesmellitus，DM)是一组由多病因引起以慢性高血糖为特征的代谢性疾病，是由于胰岛素分泌和（或）利用缺陷所引起。长期碳水化合物以及脂肪、蛋白质代谢紊乱可引起多系统损害，导致眼、肾、神经、心脏、血管等组织器官慢性进行性病变、功能减退及衰竭；病情严重或应激时可发生急性严重代谢紊乱，如糖尿病酮症酸中毒（DKA)、高渗高血糖综合征。"
    },
    {
        "question": "70公斤162CM尿毒症患者，高血压145-150之间应该保持怎样饮食？",
        "answer": "肾病患者常可发生肾性高血压，大约90%的肾实质性高血压是由于水钠潴留和血容量扩张所致。当肾实质性病变时，会造成水、钠在体内潴留，进而使血容量过多引起高血压。对于肾素依赖性高血压，过量的盐也会造成血管紧张素AII敏感性增加导致血压的升高，因此对于您来说低盐饮食尤为重要。您可以称早晚的体重，如果差值过大则提示您可能存在水肿，排除水肿后根据您的身高体重，计算得您的体质指数BMI=26.7kg/m²，属于超重，那么您得注意控制体重啦。具体饮食还应结合您采用是否透析、采用何种透析方式以及具体病情而定。"
    }
]